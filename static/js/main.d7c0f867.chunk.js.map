{"version":3,"sources":["assets/momentsmatterlogo.png","components/previews/vertical.tsx","components/previews/horizontal.tsx","components/previews/square.tsx","components/preview.tsx","core/actions/poster.ts","components/steps/one.tsx","components/take.picture.tsx","components/crop.picture.tsx","components/poster.all.tsx","core/helpers/image.ts","components/steps/two.tsx","core/helpers/popup.ts","core/services/api.ts","components/social.buttons.tsx","components/steps/three.tsx","components/navigation.tsx","components/app.container.tsx","components/app.tsx","serviceWorker.ts","core/reducers/main.ts","core/reducers/poster.ts","core/sagas/main.ts","core/stores/main.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Vertical","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this$props$poster","poster","backgroundImg","title","message","react_default","a","createElement","Container","className","id","style","backgroundImage","src","logo","alt","Header","as","textAlign","content","Component","connect","rootReducer","Horizontal","Grid","columns","Column","Square","Preview","_this","renderPreview","bind","assertThisInitialized","layoutType","previews_square","previews_horizontal","previews_vertical","console","log","state","SET_LAYOUT","SET_LANGUAGE","SET_IMAGE","SET_LOGO","SET_MESSAGE","SET_TITLE","SET_STEP","SET_THEME","POSTER_CREATE","POSTER_SCALE","IMAGE_SET_POSITION","IMAGE_CROP","setLayout","layout","type","payload","setLanguage","language","setStep","step","setTheme","theme","setImage","image","setLogo","setMessage","setPoster","posterImage","setSize","scale","setTitle","setImagePosition","positionX","positionY","setImageCrop","One","layoutHandler","_this2","centered","computer","mobile","tablet","onClick","Segment","raised","Placeholder","Paragraph","Line","length","dispatch","TakePicture","width","height","streaming","video","canvas","startbutton","ready","stream","isMobile","startup","clearPhoto","startStream","makeBlob","stopStream","navigator","userAgent","match","setState","document","getElementById","addEventListener","event","videoHeight","videoWidth","setAttribute","forceUpdate","_this3","context","getContext","drawImage","data","toDataURL","display","mediaDevices","getUserMedia","audio","then","srcObject","play","catch","error","getTracks","forEach","track","stop","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","i","charCodeAt","URL","createObjectURL","Blob","Button","disabled","color","path","Cropper","crop","aspect","x","y","handleOnCropChange","handleOnCropComplete","pixelCrop","imageCropChangeComplete","ctx","imageItem","Image","onload","toBlob","blob","imageLoaded","ReactCrop_default","onImageLoaded","onComplete","onChange","dataURI","url","GeneralCustom","messageType","active","zoom","themeImage","selectorHandler","changeHandler","logoHandler","zoomChange","titleChangeHandler","findImageOrientation","orientation","e","file","target","files","size","originalFile","callback","reader","FileReader","view","DataView","result","getUint16","byteLength","offset","marker","getUint32","little","tags","_ret","save","translate","rotate","Math","PI","restore","v","readAsArrayBuffer","getOrientation","value","_ref","name","Input","icon","iconPosition","placeholder","accept","take_picture","crop_picture","Form","defaultValue","maxLength","TextArea","Two","renderStep","langHandler","lan","poster_all","PopupWindow","screenLeft","screenTop","screenWidth","screenHeight","window","screenX","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","availWidth","createClass","key","left","top","configString","newWindow","open","focus","uploadImage","fetch","method","headers","Headers","Content-Type","body","json","SocialButtons","facebook","twitter","encodeURIComponent","instagram","socialHandler","getWindow","circular","Three","isUploaded","posterId","emailInfo","user","fname","lname","email","det","elementIds","1","2","3","controllers","downloadPosterImage","shareTwitter","shareFacebook","dataURItoBlob","base64ToBlob","emailModal","formChange","sendToEmail","checkErrors","posterElement","html2canvas","element","href","download","click","asyncToGenerator","regenerator_default","mark","_callee","searchParams","response","wrap","_context","prev","next","keys","map","join","sent","_x","apply","arguments","_ref2","_this$state$user","_this$state$user2","_this$state","Modal","trigger","prevState","basic","Content","Field","required","Actions","inverted","Icon","_this4","_this$state2","_ref3","_callee3","_context3","_x2","_this5","_this$state3","_ref4","_callee4","_context4","_x3","ab","ArrayBuffer","_this6","container","stackable","social_buttons","Nav","stepHandler","stepRender","setView","removeEventListener","offsetHeight","scrollTop","one","two","three","Step","Group","fluid","unstackable","Image_Image","Title","App","_Component","inherits","divided","largeScreen","navigation","paddingTop","alignItems","minHeight","preview","Boolean","location","hostname","combineReducers","undefined","createdDate","Date","shareNetwork","action","objectSpread","eventWatcher","stepper","scalePoster","titleSet","imagePosition","imageCrop","rootSaga","takeEvery","_marked","_context2","t0","abrupt","put","_marked2","_marked3","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","_context13","_marked13","sagas","_context14","all","_marked14","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","applyMiddleware","combine","store","createStore","run","ReactDOM","render","es","app_container","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.d7c0f867.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/momentsmatterlogo.65b8dd8a.png\";","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Header } from 'semantic-ui-react';\nimport '../../styles/preview/vertical.scss';\nimport logo from '../../assets/momentsmatterlogo.png';\n\n/** Interfaces */\ninterface Props {\n     poster: any;\n}\n\nclass Vertical extends Component<Props> {\n\n     constructor(props: Props) {\n          super(props);\n     }\n\n     public render() {\n          const { backgroundImg, title, message } = this.props.poster;\n          return (\n               <Container>\n                    <div className=\"preview-vertical\">\n                         <div\n                              id=\"preview-vertical\"\n                              className=\"image-half\"\n                              style={{\n                                   backgroundImage: 'url( ' + backgroundImg + ' )'\n                              }}>\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <img\n                                             src={logo}\n                                             alt=\"moments matter logo\" />\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <Header as={'h2'} className=\"title\" textAlign=\"center\" content={title} />\n                              <p className=\"content\">{message}</p>\n                         </div>\n                    </div>\n\n                    <div className=\"final-vertical\" id=\"final-vertical\">\n                         <div\n                              className=\"image-half\"\n                              style={{\n                                   backgroundImage: 'url( ' + backgroundImg + ' )'\n                              }}>\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <div className=\"white-drop\" />\n                                        <img\n                                             src={logo}\n                                             alt=\"moments matter logo\" />\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <h2 className=\"title\">{title}</h2>\n                              <p className=\"content\">{message}</p>\n                         </div>\n                    </div>\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster: any) => ({ poster: poster.rootReducer.poster });\nexport default connect(mapProps, null)(Vertical);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Header } from 'semantic-ui-react';\nimport '../../styles/preview/horizontal.scss';\nimport logo from '../../assets/momentsmatterlogo.png';\n\n/** Interfaces */\ninterface Props {\n     poster: any;\n}\n\nclass Horizontal extends Component<Props> {\n\n     constructor(props: Props) {\n          super(props);\n     }\n\n\n\n     public render() {\n          const { backgroundImg, title, message } = this.props.poster;\n\n          return (\n               <div>\n                    <Grid columns={2} className=\"preview-horizontal\">\n                         <Grid.Column\n                              id=\"preview-horizontal\"\n                              className=\"image-half\"\n                              style={{\n                                   backgroundImage: 'url( ' + backgroundImg + ' )'\n                              }} />\n                         <Grid.Column className=\"text-half\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <img\n                                             src={logo}\n                                             alt=\"moments matter logo\" />\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" textAlign=\"left\" content={title} />\n                              <p className=\"content\">{message}</p>\n                         </Grid.Column>\n                    </Grid>\n                    <Grid columns={2} id=\"final-horizontal\">\n                         <Grid.Column\n                              className=\"image\"\n                              style={{\n                                   backgroundImage: 'url( ' + backgroundImg + ' )'\n                              }} />\n                         <Grid.Column className=\"body-text\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <img\n                                             src={logo}\n                                             alt=\"moments matter logo\" />\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" content={title} />\n                              <p className=\"content\">{message}</p>\n                         </Grid.Column>\n                    </Grid>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster: any) => ({ poster: poster.rootReducer.poster });\nexport default connect(mapProps, null)(Horizontal);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../../styles/preview/square.scss';\nimport logo from '../../assets/momentsmatterlogo.png';\n\n/** Interfaces */\ninterface Props {\n     poster: any;\n}\n\nclass Square extends Component<Props> {\n\n     constructor(props: Props) {\n          super(props);\n     }\n\n     public render() {\n          const { backgroundImg, message } = this.props.poster;\n          return (\n               <div\n                    id=\"preview-square\"\n                    className=\"preview-square poster-preview-holder image-half\"\n                    style={{\n                         backgroundImage: 'url( ' + backgroundImg + ' )'\n                    }}>\n                    <p className=\"message-holder\">{message}</p>\n                    <div className=\"footer\">\n                         <div className=\"logo-holder\">\n                              <img src={logo} alt=\"momments matter logo\" />\n                         </div>\n                    </div>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster: any) => ({ poster: poster.rootReducer.poster });\nexport default connect(mapProps, null)(Square);\n","import React, {Component} from 'react';\nimport {Container} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport Vertical from './previews/vertical';\nimport Horizontal from './previews/horizontal';\nimport Square from './previews/square';\n\ntype Props = {\n     poster: any;\n}\nclass Preview extends Component < Props > {\n\n     constructor(props : Props) {\n          super(props);\n          this.renderPreview = this\n               .renderPreview\n               .bind(this);\n     }\n\n     public renderPreview() : any {\n          const {poster} = this.props;\n\n          switch (poster.layoutType) {\n               case 1:\n                    return <Square/>;\n               case 2:\n                    return <Horizontal/>;\n               case 3:\n                    return <Vertical/>;\n               default:\n                    return console.log('invalid layout type');\n          }\n     }\n\n     public render() {\n          return (\n               <Container className=\"preview-container\">\n                    <div id=\"final-poster\">\n                         {this.renderPreview()}\n                    </div>\n               </Container>\n          );\n     }\n}\n\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\n\nexport default connect(mapStateToProps, null)(Preview);","/** Action Types */\n/** LAYOUT */\nexport const SET_LAYOUT = 'SET_LAYOUT';\nexport const LAYOUT_SET = 'LAYOUT_SET';\n\n/** LANGUAGE */\nexport const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const LANGUAGE_SET = 'LANGUAGE_SET';\n\n/** IMAGE */\nexport const SET_IMAGE = 'SET_IMAGE';\nexport const IMAGE_SET = 'IMAGE_SET';\n\n/** LOGO */\nexport const SET_LOGO = 'SET_LOGO';\nexport const LOGO_SET = 'LOGO_SET';\n\n/** MESSAGE */\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const MESSAGE_SET = 'MESSAGE_SET';\n\n/** TITLE */\nexport const SET_TITLE = 'SET_TITLE';\nexport const TITLE_SET = 'TITLE_SET';\n\n/** SOCIAL */\nexport const SET_SOCIAL = 'SET_SOCIAL';\nexport const SOCIAL_SET = 'SOCIAL_SET';\n\n/** STEP */\nexport const SET_STEP = 'SET_STEP';\nexport const STEP_SET = 'STEP_SET';\n\n/** THEME */\nexport const SET_THEME = 'SET_THEME';\nexport const THEME_SET = 'THEME_SET';\n\n/** Final Poster */\nexport const POSTER_CREATE = 'POSTER_CREATE';\nexport const POSTER_CREATE_SUCCESS = 'POSTER_CREATE_SUCCESS';\n\n/** Scale poster */\nexport const POSTER_SCALE = 'POSTER_SCALE';\nexport const SCALE_SET = 'SCALE_SET';\n\n/** Drag Image */\nexport const IMAGE_SET_POSITION = 'IMAGE_SET_POSITION';\nexport const IMAGE_POSITION_SET = 'IMAGE_POSITION_SET';\n\n/** Image Crop */\nexport const IMAGE_CROP = 'IMAGE_CROP';\nexport const IMAGE_CROP_SET = 'IMAGE_CROP_SET';\n\n/** Action Handlers */\nexport const setLayout = (layout: any) => ({\n     type: LAYOUT_SET,\n     payload: layout\n});\nexport const setLanguage = (language: string) => ({\n     type: LANGUAGE_SET,\n     payload: {\n          language\n     }\n});\nexport const setStep = (step: number) => ({\n     type: STEP_SET,\n     payload: {\n          step\n     }\n});\nexport const setTheme = (theme: string) => ({\n     type: THEME_SET,\n     payload: {\n          theme\n     }\n});\nexport const setImage = (image: string) => ({\n     type: IMAGE_SET,\n     payload: {\n          image\n     }\n});\nexport const setLogo = (logo: string) => ({\n     type: LOGO_SET,\n     payload: {\n          logo\n     }\n});\nexport const setMessage = (message: string) => ({\n     type: MESSAGE_SET,\n     payload: {\n          message\n     }\n});\nexport const setSocial = (type: string) => ({\n     type: SOCIAL_SET,\n     payload: type\n});\nexport const setPoster = (posterImage: any) => ({\n     type: POSTER_CREATE_SUCCESS,\n     payload: {\n          posterImage\n     }\n});\n\nexport const setSize = (scale: number) => ({\n     type: SCALE_SET,\n     payload: {\n          scale\n     }\n});\n\nexport const setTitle = (title: string) => ({\n     type: TITLE_SET,\n     payload: {\n          title\n     }\n});\n\nexport const setImagePosition = (positionX: number, positionY: number) => ({\n     type: IMAGE_POSITION_SET,\n     payload: {\n          positionX,\n          positionY\n     }\n});\n\nexport const setImageCrop = (backgroundImg: string) => ({\n     type: IMAGE_CROP_SET,\n     payload: { backgroundImg }\n});\n","import React, {Component} from 'react';\nimport {Header, Grid, Placeholder, Segment} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_LAYOUT} from '../../core/actions/poster';\ntype Props = {\n     setLayout(layout : string);\n     poster: any;\n}\nclass One extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.layoutHandler = this\n               .layoutHandler\n               .bind(this);\n     }\n\n     public layoutHandler(layout : string) {\n          const {setLayout} = this.props;\n          setLayout(layout);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card paddingTop\">\n                    <Header as='h2' className=\"text-center poster-h2\">Choose your layout</Header>\n                    <Grid centered columns={3}>\n                         <Grid.Column\n                              computer={5}\n                              mobile={10}\n                              tablet={5}\n                              textAlign='center'\n                              className={(poster.type === 'poster message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector '}\n                              onClick={() => this.layoutHandler('poster message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center layout-type-text'>Square&nbsp;<br/>(Short message only)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={7}\n                              mobile={16}\n                              tablet={7}\n                              textAlign='center'\n                              className={(poster.type === 'poster message and image')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('poster message and image')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Header image>\n                                             <Placeholder.Line/>\n                                             <Placeholder.Line/>\n                                        </Placeholder.Header>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center layout-type-text'>Horizontal&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={4}\n                              mobile={8}\n                              tablet={4}\n                              textAlign='center'\n                              className={(poster.type === 'post message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('post message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center layout-type-text'>Vertical&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                    </Grid>\n               </div>\n          );\n     }\n}\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setLayout: (type : string) => dispatch({type: SET_LAYOUT, payload: type})\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(One);","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_IMAGE} from '../core/actions/poster';\n\ninterface IProps {\n     setImage(path : any);\n     poster : any;\n}\ninterface IState {\n     width : number;\n     height : number;\n     streaming : boolean;\n     video : any;\n     canvas : any;\n     startbutton : any;\n     ready : boolean;\n     stream : any;\n     isMobile : boolean;\n}\nclass TakePicture extends Component < IProps,\nIState > {\n     state : IState = {\n          width: 400,\n          height: 0,\n          streaming: false,\n          video: null,\n          canvas: null,\n          startbutton: null,\n          ready: false,\n          stream: null,\n          isMobile: false\n     }\n     constructor(props : IProps) {\n          super(props);\n          this.startup = this\n               .startup\n               .bind(this);\n          this.clearPhoto = this\n               .clearPhoto\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.makeBlob = this\n               .makeBlob\n               .bind(this);\n          this.stopStream = this\n               .stopStream\n               .bind(this);\n          this.isMobile = this\n               .isMobile\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.startup();\n          this.isMobile();\n     }\n\n     public isMobile() {\n          (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i))\n               ? this.setState({isMobile: true})\n               : this.setState({isMobile: false});\n     }\n\n     public async startup() {\n          await this.setState({\n               video: document.getElementById('video-stream'),\n               canvas: document.getElementById('image-canvas'),\n               startbutton: document.getElementById('takepicture')\n          });\n          this\n               .state\n               .video\n               .addEventListener('canplay', (event) => {\n                    if (!this.state.streaming) {\n                         this.state.height = this.state.video.videoHeight / (this.state.video.videoWidth / this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('height', this.state.height);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('height', this.state.height);\n                         this.state.streaming = true;\n                         this.forceUpdate();\n                    }\n               }, false);\n     }\n\n     public startStream() {\n          if (!this.state.ready) {\n               const container : any = document.getElementById('camera-stream');\n               container.style.display = 'block';\n               navigator\n                    .mediaDevices\n                    .getUserMedia({video: true, audio: false})\n                    .then((stream) => {\n                         this.state.video.srcObject = stream;\n                         this\n                              .state\n                              .video\n                              .play();\n                         this.setState({ready: true, stream: stream});\n                    })\n                    .catch((error) => console.log('cannot open stream: ', error));\n          } else {\n               const {setImage} = this.props;\n               const context = this\n                    .state\n                    .canvas\n                    .getContext('2d');\n               if (this.state.width && this.state.height) {\n                    this.state.canvas.width = this.state.width;\n                    this.state.canvas.height = this.state.height;\n                    context.drawImage(this.state.video, 0, 0, this.state.width, this.state.height);\n                    const data = this\n                         .state\n                         .canvas\n                         .toDataURL('image/jpeg');\n\n                    setImage(this.makeBlob(data));\n                    this.forceUpdate();\n                    this.stopStream();\n               }\n          }\n     }\n\n     public clearPhoto() {\n          const {setImage} = this.props;\n          setImage(null);\n     }\n\n     public stopStream() {\n          const container : any = document.getElementById('camera-stream');\n          container.style.display = 'none';\n          this\n               .state\n               .stream\n               .getTracks()\n               .forEach((track) => track.stop());\n          this.setState({ready: false, stream: null});\n     }\n\n     public makeBlob(data : any) {\n          let byteString : any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return URL.createObjectURL(new Blob([ia], {type: mimeString}));\n     }\n\n     public render() {\n          return (\n               <div>\n                    <div\n                         className=\"camera\"\n                         id=\"camera-stream\"\n                         style={{\n                         display: 'none'\n                    }}>\n                         <video id=\"video-stream\"/>\n                    </div>\n                    <Button disabled={this.state.isMobile} color=\"green\" onClick={this.startStream}>Take photo</Button>\n                    {(this.state.ready)\n                         ? <span>\n                                   <Button color=\"orange\" onClick={this.clearPhoto}>Clear photo</Button>\n                                   <Button color=\"red\" onClick={this.stopStream}>Cancel</Button>\n                              </span>\n                         : ''}\n\n                    <canvas\n                         id=\"image-canvas\"\n                         style={{\n                         display: 'none'\n                    }}/>\n               </div>\n\n          );\n     }\n}\n\nconst mapProps = (props) => ({poster: props.rootReducer});\nconst mapDispatch = (dispatch) => ({\n     setImage: (path : string) => dispatch({type: SET_IMAGE, path: path})\n});\nexport default connect(mapProps, mapDispatch)(TakePicture);","import React, { Component } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { connect } from 'react-redux';\nimport '../styles/crop.scss';\n\ninterface Props {\n     poster: any;\n     imageCropChangeComplete(dataURI: string);\n}\n\ninterface State {\n     crop: {\n          aspect: number;\n          x: number;\n          y: number;\n          width: number;\n          height: number;\n     }\n}\n\nclass Cropper extends Component<Props, State> {\n     state: State = {\n          crop: {\n               aspect: 1 / 1,\n               x: 20,\n               y: 10,\n               width: 25,\n               height: 25\n          }\n     }\n     constructor(props) {\n          super(props);\n          this.handleOnCropChange = this.handleOnCropChange.bind(this);\n          this.imageLoaded = this.imageLoaded.bind(this);\n     }\n\n     public imageLoaded() {\n          (document.getElementById('crop-holder-element') as HTMLElement).style.display = 'block';\n     }\n\n     public handleOnCropChange = (crop) => {\n          this.setState({ crop: crop })\n     }\n\n     public handleOnCropComplete = (crop: any, pixelCrop: any) => {\n          const { image } = this.props.poster;\n          const { imageCropChangeComplete } = this.props;\n          const canvas: any = document.createElement('canvas') as HTMLElement;\n          canvas.width = pixelCrop.width;\n          canvas.height = pixelCrop.height;\n          const ctx = canvas.getContext('2d');\n          const imageItem = new Image();\n          imageItem.src = image;\n          imageItem.onload = () => {\n               ctx.drawImage(imageItem, pixelCrop.x, pixelCrop.y, pixelCrop.width, pixelCrop.height, 0, 0, pixelCrop.width, pixelCrop.height);\n               try {\n                    canvas.toBlob((blob: any) => {\n                         imageCropChangeComplete(URL.createObjectURL(blob));\n                    });\n               } catch (error) {\n                    console.log('Error ocurred ignored');\n               }\n\n          }\n     }\n\n     public render() {\n          const { image } = this.props.poster;\n          return (\n               <div>\n                    <ReactCrop\n                         src={image}\n                         crop={this.state.crop}\n                         onImageLoaded={this.imageLoaded}\n                         onComplete={this.handleOnCropComplete}\n                         onChange={this.handleOnCropChange} />\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster: any) => ({ poster: poster.rootReducer.poster });\nconst mapDispatch = (dispatch: any) => ({\n     imageCropChangeComplete: (dataURI: string) => dispatch({\n          type: 'IMAGE_CROP',\n          payload: {\n               url: dataURI\n          }\n     })\n});\n\nexport default connect(mapProps, mapDispatch)(Cropper);","import React, { Component } from 'react';\nimport { Input, Container, Header, Form, TextArea } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { SET_IMAGE, SET_LOGO, SET_MESSAGE, POSTER_SCALE, SET_TITLE } from '../core/actions/poster';\nimport TakePicture from './take.picture';\nimport { getOrientation } from '../core/helpers/image';\nimport Cropper from '../components/crop.picture';\n\n/** Interfaces */\ntype Props = {\n     setImage(image: any, path: string);\n     setLogo(logo: any, path: string);\n     setMessage(message: string);\n     setSize(scale: number);\n     setTitle(title: string);\n     poster: any;\n};\n\ntype State = {\n     messageType: number;\n     error: {\n          message: string;\n          active: boolean;\n     };\n     zoom: number;\n};\n\nclass GeneralCustom extends Component<Props,\n     State> {\n     state: State = {\n          messageType: 1,\n          error: {\n               message: '',\n               active: false\n          },\n          zoom: 1\n     };\n\n     constructor(props: Props) {\n          super(props);\n          this.themeImage = this\n               .themeImage\n               .bind(this);\n          this.selectorHandler = this\n               .selectorHandler\n               .bind(this);\n          this.changeHandler = this\n               .changeHandler\n               .bind(this);\n          this.logoHandler = this\n               .logoHandler\n               .bind(this);\n          this.zoomChange = this\n               .zoomChange\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.titleChangeHandler = this\n               .titleChangeHandler\n               .bind(this);\n          this.findImageOrientation = this\n               .findImageOrientation\n               .bind(this);\n     }\n\n     public findImageOrientation(orientation, image) {\n          const { setImage } = this.props;\n          setImage(orientation, image);\n     }\n\n     public themeImage(e: any) {\n          const limit = 5 * 1048576; // 10MB\n          const file = e.target.files[0];\n\n          if (file.size > limit) {\n               console.log('Image way to big');\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          getOrientation(file, this.findImageOrientation);\n     }\n\n     public selectorHandler(value: any) {\n          const { setMessage } = this.props;\n          setMessage(value);\n     }\n\n     public titleChangeHandler(e: any) {\n          const { setTitle } = this.props;\n          setTitle(e.target.value);\n     }\n\n     public changeHandler(e: any) {\n          const { setMessage } = this.props;\n          setMessage(e.target.value);\n     }\n\n     public logoHandler(e: any) {\n          const limit = 5 * 1048576; // 10MB\n          const { setLogo } = this.props;\n          const file = e.target.files[0];\n          const path = URL.createObjectURL(file);\n\n          if (file.size > limit) {\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          setLogo(file, path);\n     }\n\n     public zoomChange(e: any, { name, value }: any) {\n          const { setSize } = this.props;\n          this.setState({ zoom: value });\n          setSize(value);\n     }\n\n     public startStream() {\n          console.log('will start camera streaming here');\n     }\n\n     public render() {\n          const { poster } = this.props;\n          return (\n               <Container textAlign=\"center\">\n                    <Header as=\"h2\" className=\"text-center poster-h2\">\n                         Upload your image\n                    </Header>\n                    <Input\n                         icon=\"file\"\n                         iconPosition=\"left\"\n                         placeholder=\"Upload Image\"\n                         accept=\"image/*\"\n                         type=\"file\"\n                         onChange={this.themeImage} />\n                    <p>10 MB limit. Allowed types: gif png jpg jpeg.</p>\n                    <Header as=\"h2\" className=\"text-center poster-h2 take-picture\">\n                         Take a picture\n                    </Header>\n                    <div className=\"take-picture\">\n                         <TakePicture />\n                    </div>\n                    <div className=\"cropper\" id=\"crop-holder-element\">\n                         <Header as=\"h2\" textAlign=\"center\" className=\"text-center poster-h2\">\n                              Edit Image\n                         </Header>\n                         <Cropper />\n                    </div>\n\n                    <Header as=\"h2\" textAlign=\"center\" className=\"text-center poster-h2\">\n                         Share Your Moment\n                    </Header>\n                    <Form>\n                         <Input\n                              className={poster.layoutType === 1\n                                   ? 'hide'\n                                   : 'show paddingBottom'}\n                              placeholder=\"Poster title\"\n                              type=\"text\"\n                              onChange={this.titleChangeHandler}\n                              defaultValue={poster.title}\n                              maxLength=\"35\" />\n                         <TextArea\n                              placeholder=\"Write 'I am and will' message here. eg. 'I am a student and I will spread the word'.\"\n                              maxLength=\"150\"\n                              onChange={this.changeHandler}\n                              defaultValue={poster.message} />\n                         <p>Maximum 150 characters</p>\n                    </Form>\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster: any) => ({ poster: poster.rootReducer.poster });\nconst mapDispatch = (dispatch: any) => ({\n     setImage: (image: any, path: string) => dispatch({ type: SET_IMAGE, payload: image, path: path }),\n     setLogo: (logo: any, path: string) => dispatch({ type: SET_LOGO, payload: logo, path: path }),\n     setMessage: (message: string) => dispatch({ type: SET_MESSAGE, payload: message }),\n     setSize: (scale: number) => dispatch({ type: POSTER_SCALE, payload: scale }),\n     setTitle: (title: string) => dispatch({ type: SET_TITLE, payload: title })\n});\n\nexport default connect(mapProps, mapDispatch)(GeneralCustom);\n","export const getOrientation = (originalFile: File, callback: Function) => {\n     var reader = new FileReader();\n     let canvas = document.createElement('canvas');\n     let ctx: any = canvas.getContext('2d');\n     let image = new Image();\n\n     reader.onload = (event: ProgressEvent) => {\n          if (!event.target) {\n               return;\n          }\n\n          const file = event.target as FileReader;\n          const view = new DataView(file.result as ArrayBuffer);\n\n          image.src = URL.createObjectURL(originalFile);\n          if (view.getUint16(0, false) !== 0xffd8) {\n               return callback(-2, image.src);\n          }\n\n          const length = view.byteLength;\n          let offset = 2;\n\n          while (offset < length) {\n               if (view.getUint16(offset + 2, false) <= 8) {\n                    return callback(-1, image.src);\n               }\n\n               let marker = view.getUint16(offset, false);\n               offset += 2;\n\n               if (marker === 0xffe1) {\n                    if (view.getUint32((offset += 2), false) !== 0x45786966) {\n                         return callback(-1, image.src);\n                    }\n\n                    let little = view.getUint16((offset += 6), false) == 0x4949;\n                    offset += view.getUint32(offset + 4, little);\n                    let tags = view.getUint16(offset, little);\n                    offset += 2;\n                    for (let i = 0; i < tags; i++) {\n                         if (\n                              view.getUint16(offset + i * 12, little) == 0x0112\n                         ) {\n                              const result = view.getUint16(\n                                   offset + i * 12 + 8,\n                                   little\n                              );\n                              image.onload = () => {\n                                   canvas.width = image.width;\n                                   canvas.height = image.height;\n                                   ctx.save();\n                                   ctx.translate(\n                                        image.width / 2,\n                                        image.height / 2\n                                   );\n                                   switch (result) {\n                                        case 1:\n                                             ctx.rotate((360 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        case 8:\n                                             ctx.rotate((270 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        case 3:\n                                             ctx.rotate((180 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        case 6:\n                                             ctx.rotate((90 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        default:\n                                             return callback(\n                                                  result,\n                                                  'nothing here'\n                                             );\n                                   }\n                              };\n                              return callback(result);\n                         }\n                    }\n               } else if ((marker & 0xff00) != 0xff00) {\n                    break;\n               } else {\n                    offset += view.getUint16(offset, false);\n               }\n          }\n          return callback(-1, image.src);\n     };\n\n     reader.readAsArrayBuffer(originalFile);\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n// import {Button, Popup, Flag, Header, Grid} from 'semantic-ui-react';\nimport {SET_LANGUAGE} from '../../core/actions/poster';\nimport GeneralCustom from '../poster.all';\n\n// Will be used in the future for other campaign import PosterMessage from\n// '../poster.message'; import PosterImage from '../poster.image'; import\n// PostMessage from '../post.message'; import PostImage from '../post.image';\n\ntype Props = {\n     poster: any;\n     setLanguage(language : string);\n}\n\nclass Two extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.renderStep = this\n               .renderStep\n               .bind(this);\n          this.langHandler = this\n               .langHandler\n               .bind(this);\n     }\n\n     public langHandler(lan : string) {\n          const {setLanguage} = this.props;\n          setLanguage(lan);\n     }\n\n     public renderStep(type : number) {\n          return <GeneralCustom/>;\n          // This section will be used in the future for other campaigns; switch (type) {\n          //  case 1:           return <PosterMessage/>;      case 2:           return\n          // <PosterImage/>;      case 3:           return <PostMessage/>;      case 4:\n          // return <PostImage/>;      default:           return 'Error ocurred go back';\n          // }\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card\">\n                    {/* <Popup\n                         trigger={< Button circular icon = \"world\" content = {\n                         \"Language - \" + poster\n                              .language\n                              .toUpperCase()\n                    }\n                    className = \"lang-selector\" />}\n                         flowing\n                         hoverable>\n                         <Grid centered divided columns={3}>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'english')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('english')}>\n                                   <Header as='h4'>English</Header>\n                                   <Flag name='us' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'spanish')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('spanish')}>\n                                   <Header as='h4'>Spanish</Header>\n                                   <Flag name='spain' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'french')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('french')}>\n                                   <Header as='h4'>French</Header>\n                                   <Flag name='france' className=\"flag-selector\"/>\n                              </Grid.Column>\n                         </Grid>\n                    </Popup> */}\n                    {this.renderStep(poster.layoutType)}\n               </div>\n          );\n     }\n}\n\nconst mapStateTopProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch) => ({\n     setLanguage: (type : string) => dispatch({type: SET_LANGUAGE, payload: type})\n});\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(Two);","export class PopupWindow {\n     private screenLeft : number;\n     private screenTop : number;\n     private screenWidth : number;\n     private screenHeight : number;\n     private zoom : number;\n\n     constructor() {\n          this.screenLeft = window.screenLeft || window.screenX;\n          this.screenTop = window.screenTop || window.screenY;\n          this.screenWidth = window.innerWidth || (document.documentElement.clientWidth)\n               ? document.documentElement.clientWidth\n               : screen.width;\n          this.screenHeight = window.innerHeight || (document.documentElement.clientHeight)\n               ? document.documentElement.clientHeight\n               : screen.height;\n          this.zoom = this.screenWidth / window.screen.availWidth;\n          return this;\n     }\n\n     public getWindow(url : string, title : string, width : number, height : number) : void {\n          const left: number = (this.screenWidth - width) / 2 / this.zoom + this.screenLeft;\n          const top: number = (this.screenHeight - height) / 2 / this.zoom + this.screenTop;\n          const configString: string = 'scrollbars=yes, width=' + width / this.zoom + ', height=' + height / this.zoom + ', top=' + top + ', left=' + left;\n          const newWindow: any = window.open(url, title, configString);\n          if (window.focus) {\n               newWindow.focus();\n          }\n     }\n\n}\n","const apiURL : string = 'https://core.pancan.org/api/poster/email';\n\n/** Api calls */\nexport const uploadImage = (data : any) => (fetch(apiURL, {\n     method: 'post',\n     headers: new Headers({'Content-Type': 'application/x-www-form-urlencoded'}),\n     body: data\n}).then(data => data.json()).then(data => data).catch(error => error));\n","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {PopupWindow} from '../core/helpers/popup';\n\n/** interface */\ninterface State {\n     facebook : string;\n     twitter : string;\n     instagram : string;\n}\n\nclass SocialButtons extends Component < {},\nState > {\n\n     state: State = {\n          facebook: 'https://www.facebook.com/sharer/sharer.php?u=https://www.pancan.org/get-involved' +\n                    '/moments-matter/',\n          twitter: 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('#MomentsMatter. Join me & @PanCAN in sharing our stories & raising #pancreaticca' +\n                    'ncer awareness so more patients can have more moments with their loved ones. htt' +\n                    'p://pcan.at/MnM'),\n          instagram: 'https://www.instagram.com/pancan/'\n     };\n\n     constructor(props : any) {\n          super(props);\n          this.socialHandler = this\n               .socialHandler\n               .bind(this);\n     }\n\n     public socialHandler(url : string) {\n          new PopupWindow().getWindow(url, 'Share Poster Creator', 530, 400);\n     }\n\n     public render() {\n          return (\n               <div className=\"social-button-container\">\n                    <Button\n                         circular\n                         color='facebook'\n                         icon='facebook'\n                         onClick={() => this.socialHandler(this.state.facebook)}/>\n                    <Button\n                         circular\n                         color='twitter'\n                         icon='twitter'\n                         onClick={() => this.socialHandler(this.state.twitter)}/>\n                    <Button\n                         circular\n                         color='instagram'\n                         icon='instagram'\n                         onClick={() => this.socialHandler(this.state.instagram)}/>\n               </div>\n          );\n     }\n}\n\nexport default SocialButtons;","import React, { Component } from 'react';\nimport {\n     Icon,\n     Container,\n     Grid,\n     Header,\n     Button,\n     Modal,\n     Form,\n     Input\n} from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport html2canvas from 'html2canvas';\nimport { POSTER_CREATE } from '../../core/actions/poster';\nimport { PopupWindow } from '../../core/helpers/popup';\nimport { uploadImage } from '../../core/services/api';\nimport SocialButtons from '../social.buttons';\n\ninterface Props {\n     poster: any;\n     setPoster(data: any);\n}\ninterface IUser {\n     [key: string]: string;\n}\ninterface State {\n     isUploaded: boolean;\n     posterId: number;\n     emailInfo: boolean;\n     user: IUser;\n     error: any;\n     elementIds: any;\n}\n\nclass Three extends Component<Props,\n     State> {\n     state: State = {\n          isUploaded: false,\n          posterId: -1,\n          emailInfo: false,\n          user: {\n               fname: '',\n               lname: '',\n               email: ''\n          },\n          error: {\n               error: false,\n               det: ''\n          },\n          elementIds: {\n               1: 'preview-square',\n               2: 'final-horizontal',\n               3: 'final-vertical'\n          }\n     };\n     constructor(props: Props) {\n          super(props);\n          this.controllers = this\n               .controllers\n               .bind(this);\n          this.downloadPosterImage = this\n               .downloadPosterImage\n               .bind(this);\n          this.shareTwitter = this\n               .shareTwitter\n               .bind(this);\n          this.shareFacebook = this\n               .shareFacebook\n               .bind(this);\n          this.dataURItoBlob = this\n               .dataURItoBlob\n               .bind(this);\n          this.base64ToBlob = this\n               .base64ToBlob\n               .bind(this);\n          this.emailModal = this\n               .emailModal\n               .bind(this);\n          this.formChange = this\n               .formChange\n               .bind(this);\n          this.error = this\n               .error\n               .bind(this);\n          this.sendToEmail = this\n               .sendToEmail\n               .bind(this);\n          this.checkErrors = this\n               .checkErrors\n               .bind(this);\n     }\n\n     public downloadPosterImage(type: string) {\n          const { poster } = this.props;\n          const { elementIds } = this.state;\n          const posterElement: any = document.getElementById(elementIds[poster.layoutType]);\n          html2canvas(posterElement).then((canvas: any) => {\n               canvas.toBlob(blob => {\n                    const url = URL.createObjectURL(blob);\n                    const element: any = document.createElement('a') as HTMLElement;\n                    element.href = url;\n                    element.download = 'poster.jpeg';\n                    element.click();\n               }, 'image/jpeg', 1);\n          });\n     }\n\n     public async sendToEmail() {\n          const { poster } = this.props;\n          const { elementIds } = this.state;\n          const posterElement: any = document.getElementById(elementIds[poster.layoutType]);\n          const { isUploaded } = this.state;\n\n          if (!this.checkErrors()) {\n               await html2canvas(posterElement).then(async (canvas: any) => {\n                    const image = canvas.toDataURL('image/jpeg', 1.0);\n                    const data: any = {\n                         key: '5994766c58613900370b6153',\n                         image: image,\n                         lname: this.state.user.lname,\n                         email: this.state.user.email,\n                         fname: this.state.user.fname\n                    };\n                    const searchParams = Object\n                         .keys(data)\n                         .map(key => {\n                              return (encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n                         })\n                         .join('&');\n\n                    if (!isUploaded) {\n                         const response: any = await uploadImage(searchParams);\n                         this.setState({\n                              isUploaded: true,\n                              posterId: response.id,\n                              error: {\n                                   error: false\n                              },\n                              emailInfo: false\n                         });\n                    }\n               });\n          }\n     }\n\n     public formChange(e: any, { name, value }: any) {\n          const { fname, lname, email } = this.state.user;\n          switch (name) {\n               case 'lname':\n                    this.setState({\n                         user: {\n                              lname: value,\n                              fname: fname,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'fname':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: value,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'email':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: fname,\n                              email: value\n                         }\n                    });\n                    break;\n               default:\n                    console.log(this.state.user);\n          }\n     }\n\n     public error() {\n          return (\n               <b style={{\n                    color: 'red'\n               }}>\n                    Error! make sure to have vaild form values.\n               </b>\n          );\n     }\n\n     public checkErrors(): boolean {\n          const { lname, fname, email } = this.state.user;\n          if (lname !== '' && fname !== '' && email !== '') {\n               return false;\n          }\n          this.setState({\n               error: {\n                    error: true\n               }\n          });\n          return true;\n     }\n\n     public emailModal() {\n          const { emailInfo, isUploaded } = this.state;\n          return (\n               <Modal\n                    open={emailInfo}\n                    trigger={< Button color=\"purple\" disabled={\n                         isUploaded\n                              ? true\n                              : false\n                    }\n                         content={\n                              isUploaded\n                                   ? 'Email sent!'\n                                   : 'Send via Email'\n                         }\n                         onClick={\n                              () => this.setState(prevState => ({\n                                   emailInfo: !prevState.emailInfo\n                              }))\n                         } />}\n                    basic\n                    size=\"small\">\n                    <Header icon=\"send\" content=\"Send me my poster\" />\n                    <Modal.Content>\n                         <strong className=\"over-image\">\n                              Your email information:\n                         </strong>\n                         <Form>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                             color: '#ffffff'\n                                        }}>\n                                        First name:\n                                   </label>\n                                   <Input\n                                        placeholder=\"First Name\"\n                                        name=\"fname\"\n                                        type=\"text\"\n                                        onChange={this.formChange} />\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                             color: '#ffffff'\n                                        }}>\n                                        Last name:\n                                   </label>\n                                   <Input\n                                        placeholder=\"Last Name\"\n                                        name=\"lname\"\n                                        type=\"text\"\n                                        onChange={this.formChange} />\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                             color: '#ffffff'\n                                        }}>\n                                        Email:\n                                   </label>\n                                   <Input\n                                        name=\"email\"\n                                        placeholder=\"Email address\"\n                                        type=\"email\"\n                                        onChange={this.formChange} />\n                              </Form.Field>\n                         </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                         <Button\n                              color=\"red\"\n                              inverted\n                              onClick={() => this.setState(prevState => ({\n                                   emailInfo: !prevState.emailInfo\n                              }))}>\n                              <Icon name=\"remove\" />\n                              No\n                         </Button>\n                         <Button color=\"green\" inverted onClick={this.sendToEmail}>\n                              <Icon name=\"mail\" />\n                              Send\n                         </Button>\n                         {this.state.error.error\n                              ? this.error()\n                              : ''}\n                    </Modal.Actions>\n               </Modal>\n          );\n     }\n\n     public shareTwitter() {\n          const poster: any = document.getElementById('final-poster');\n          const { isUploaded, posterId } = this.state;\n          html2canvas(poster, { scale: 2 }).then(async (canvas: any) => {\n               const image = canvas.toDataURL('image/png');\n               const data: any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               };\n               let url: string;\n               if (!isUploaded) {\n                    const response: any = await uploadImage(data);\n                    this.setState({ isUploaded: true, posterId: response.id });\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                         'on.org/poster/' + response.id);\n               } else {\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                         'on.org/poster/' + posterId);\n               }\n\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 400);\n          });\n     }\n\n     public shareFacebook() {\n          const poster: any = document.getElementById('final-poster');\n          const { isUploaded, posterId } = this.state;\n          html2canvas(poster, { scale: 2 }).then(async (canvas: any) => {\n               const image = canvas.toDataURL('image/png');\n               let url: string;\n               const data: any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               };\n               if (!isUploaded) {\n                    const response: any = await uploadImage(data);\n                    this.setState({ isUploaded: true, posterId: response.id });\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + response.id);\n               } else {\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + posterId);\n               }\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 200);\n          });\n     }\n\n     public dataURItoBlob(data: string): any {\n          const byteString = atob(data.split(',')[1]);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ab], { type: 'image/png' });\n     }\n\n     public base64ToBlob(data: any) {\n          let byteString: any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ia], { type: mimeString });\n     }\n     public controllers(type: number) {\n          switch (type) {\n               case 1:\n               case 2:\n               case 3:\n               case 4:\n                    return (\n                         <Grid container columns={1} stackable>\n                              <Grid.Column textAlign=\"center\">\n                                   <Button\n                                        content=\"Download JPG\"\n                                        className=\"gutter-mobile\"\n                                        color=\"purple\"\n                                        onClick={() => this.downloadPosterImage('image')} />\n                              </Grid.Column>\n                              {/* <Grid.Column textAlign=\"center\">\n                              <Button content='Download PDF' onClick={() => this.downloadPosterImage('pdf')}/>\n                         </Grid.Column> */}\n                              {/* <Grid.Column textAlign=\"center\">\n                              {this.emailModal()}\n                         </Grid.Column> */}\n                         </Grid>\n                    );\n               default:\n                    return <div />;\n          }\n     }\n     public render() {\n          const { poster } = this.props;\n          const title = '#MomentsMatter'; //(poster.layoutType === 3 || poster.layoutType === 4)\n          //      ? 'Share your poster'      : 'Download image';\n          return (\n               <Container className=\"step paddingTop\">\n                    <Header as=\"h2\" content={title} textAlign=\"center\" className=\"poster-h2\" />\n                    <p\n                         style={{\n                              textAlign: 'center'\n                         }}\n                         className=\"paddingBottom over-solid leadin-copy\">\n                         Share your Moment with the world by downloading your image and sharing it to\n                         social media with #MomentsMatter and tagging us @PanCAN.\n                    </p>\n\n                    <SocialButtons />\n                    <br /> {this.controllers(poster.layoutType)}\n               </Container>\n          );\n     }\n}\nconst mapStateToProps = (state: any) => ({ poster: state.rootReducer.poster });\nconst mapDispatchToProps = (dispatch: any) => ({\n     setPoster: (data: any) => dispatch({ type: POSTER_CREATE, payload: data })\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Three);\n","import React, { Component } from 'react';\nimport { Container, Step, Icon, Button, Image } from 'semantic-ui-react';\nimport One from './steps/one';\nimport Two from './steps/two';\nimport Three from './steps/three';\nimport { connect } from 'react-redux';\nimport { SET_STEP } from '../core/actions/poster';\n\ninterface Props {\n     setStep(step: number);\n     poster: any\n}\ninterface State {\n     top: number;\n     isMobile: boolean;\n}\n\n\nclass Nav extends Component<Props, State> {\n     state: State = {\n          top: 0,\n          isMobile: false\n     }\n     constructor(props: Props) {\n          super(props);\n          this.stepHandler = this\n               .stepHandler\n               .bind(this);\n          this.stepRender = this\n               .stepRender\n               .bind(this);\n          this.setView = this.setView.bind(this);\n     }\n     componentDidMount() {\n          window.addEventListener('resize', this.setView, false);\n          this.setView();\n     }\n\n     componentWillUnmount() {\n          document.removeEventListener('resize', this.setView, false);\n     }\n\n     public setView() {\n          if (window.innerWidth < 1200) {\n               const top: number = (document.getElementById('controller-container-app') as HTMLElement).offsetHeight + 80;\n               return this.setState({ isMobile: true, top: top });\n          }\n          return this.setState({ isMobile: false });\n     }\n\n     public stepHandler(step: number) {\n          const { setStep } = this.props;\n          if (this.state.isMobile) {\n               document.body.scrollTop = this.state.top;\n          }\n          setStep(step);\n     }\n\n     public stepRender(): any {\n          const { poster } = this.props;\n          const { step } = poster;\n\n          switch (step) {\n               case 1:\n                    return <One />;\n               case 2:\n                    return <Two />;\n               case 3:\n                    return <Three />;\n          }\n     }\n\n     public render() {\n          const { poster } = this.props;\n\n          return (\n               <div className=\"controller-container\" id=\"controller-container-app\">\n                    <Container>\n                         <Step.Group fluid unstackable>\n                              <Step\n                                   active={(poster.step === 1)\n                                        ? true\n                                        : false}\n                                   onClick={() => this.stepHandler(1)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-01.png'\n                                        size='mini' />\n                                   <Step.Content className=\"step-text\">\n                                        <Step.Title>Start</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 2)\n                                        ? true\n                                        : false}\n                                   onClick={() => this.stepHandler(2)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-02.png'\n                                        size='mini' />\n                                   <Step.Content className=\"step-text\">\n                                        <Step.Title>Customize</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 3)\n                                        ? true\n                                        : false}\n                                   onClick={() => this.stepHandler(3)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-03.png'\n                                        size='mini' />\n                                   <Step.Content className=\"step-text\">\n                                        <Step.Title>Save & Share</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                         </Step.Group>\n                         {this.stepRender()}\n                         <Button\n                              onClick={() => this.stepHandler(poster.step - 1)}\n                              className={(poster.step > 1)\n                                   ? 'back-button show'\n                                   : ' hide'}>\n                              <Icon name='arrow left' />&nbsp;Back\n                         </Button>\n                         <Button\n                              className={(poster.step < 3)\n                                   ? 'next-button show'\n                                   : ' hide'}\n                              onClick={() => this.stepHandler(poster.step + 1)}>\n                              Next&nbsp;<Icon name='arrow right' />\n                         </Button>\n                    </Container>\n               </div>\n          );\n     }\n}\n\nconst mapStateToProps = (state: any) => ({ poster: state.rootReducer.poster });\nconst mapDispatchToProps = (dispatch: any) => ({\n     setStep: (step: number): void => dispatch({ type: SET_STEP, payload: step })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import App from './app';\nexport default(App);","import React, { Component } from 'react';\nimport Preview from './preview';\nimport Nav from './navigation';\nimport { Grid } from 'semantic-ui-react';\n\nexport class App extends Component {\n     render() {\n          return (\n               <Grid container columns='equal' divided stackable id=\"controller-container-app\">\n                    <Grid.Column mobile={16} tablet={16} computer={16} largeScreen={10}>\n                         <Nav />\n                    </Grid.Column>\n                    <Grid.Column\n                         mobile={16}\n                         tablet={16}\n                         computer={16}\n                         largeScreen={6}\n                         className=\"purple-gradient-bck\"\n                         style={{\n                              paddingTop: 25,\n                              display: 'flex',\n                              alignItems: 'center',\n                              minHeight: '100%'\n                         }}>\n                         <Preview />\n                    </Grid.Column>\n               </Grid>\n          );\n     }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** Imports */\nimport {combineReducers} from 'redux';\nimport {IStateStore} from '../models/state';\nimport {posterReducer} from './poster';\n\nexport const rootReducer = combineReducers < IStateStore > ({poster: posterReducer});\n","/** Imports */\nimport {\n     LAYOUT_SET,\n     STEP_SET,\n     LANGUAGE_SET,\n     THEME_SET,\n     MESSAGE_SET,\n     LOGO_SET,\n     IMAGE_SET,\n     POSTER_CREATE_SUCCESS,\n     SCALE_SET,\n     TITLE_SET,\n     IMAGE_POSITION_SET,\n     IMAGE_CROP_SET\n} from '../actions/poster';\nimport { IPoster } from '../models/poster';\n\nconst initPoster = (): IPoster => ({\n     step: 1,\n     type: 'poster message only',\n     layoutType: 1,\n     language: 'english',\n     message: 'Place holder',\n     createdDate: Date(),\n     shareNetwork: '',\n     theme: 'pancan-purple',\n     image: '',\n     logo: 'https://www.pancan.org//wp-content/uploads/2018/05/pancan-logo.png',\n     posterImage: {},\n     scale: 1,\n     title: '',\n     positionX: 0,\n     positionY: 0,\n     backgroundImg: ''\n});\n\nexport const posterReducer = (state = initPoster(), action: any) => {\n     switch (action.type) {\n          case LAYOUT_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case STEP_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case LANGUAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case THEME_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case MESSAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case LOGO_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case IMAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case POSTER_CREATE_SUCCESS:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case SCALE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case TITLE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case IMAGE_POSITION_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          case IMAGE_CROP_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               };\n          default:\n               return state;\n     }\n};\n","/** Import dependencies */\nimport { all, put, takeEvery } from 'redux-saga/effects';\nimport {\n     SET_LAYOUT,\n     SET_LANGUAGE,\n     SET_STEP,\n     SET_THEME,\n     SET_MESSAGE,\n     SET_IMAGE,\n     SET_LOGO,\n     POSTER_CREATE,\n     POSTER_SCALE,\n     SET_TITLE,\n     IMAGE_SET_POSITION,\n     IMAGE_CROP,\n     setLayout,\n     setLanguage,\n     setStep,\n     setTheme,\n     setMessage,\n     setImage,\n     setLogo,\n     setPoster,\n     setSize,\n     setTitle,\n     setImagePosition,\n     setImageCrop\n} from '../actions/poster';\n\n/** Watcher */\nfunction* eventWatcher() {\n     yield takeEvery(SET_LAYOUT, layout);\n     yield takeEvery(SET_LANGUAGE, language);\n     yield takeEvery(SET_STEP, stepper);\n     yield takeEvery(SET_THEME, theme);\n     yield takeEvery(SET_MESSAGE, message);\n     yield takeEvery(SET_IMAGE, image);\n     yield takeEvery(SET_LOGO, logo);\n     yield takeEvery(POSTER_CREATE, poster);\n     yield takeEvery(POSTER_SCALE, scalePoster);\n     yield takeEvery(SET_TITLE, titleSet);\n     yield takeEvery(IMAGE_SET_POSITION, imagePosition);\n     yield takeEvery(IMAGE_CROP, imageCrop);\n}\n\n/** set layout */\nfunction* layout(type: any) {\n     let layout: any;\n     switch (type.payload) {\n          case 'poster message only':\n               layout = {\n                    type: 'poster message only',\n                    layoutType: 1\n               };\n               break;\n          case 'poster message and image':\n               layout = {\n                    type: 'poster message and image',\n                    layoutType: 2\n               };\n               break;\n          case 'post message only':\n               layout = {\n                    type: 'post message only',\n                    layoutType: 3\n               };\n               break;\n          case 'post image':\n               layout = {\n                    type: 'post image',\n                    layoutType: 4\n               };\n               break;\n     }\n     yield put(setLayout(layout));\n}\n\n/** set language */\nfunction* language(type: any) {\n     yield put(setLanguage(type.payload));\n}\n\n/** update step */\nfunction* stepper(step: any) {\n     yield put(setStep(step.payload));\n}\n\n/** set theme */\nfunction* theme(theme: any) {\n     yield put(setTheme(theme.payload));\n}\n\n/** set message */\nfunction* message(message: any) {\n     yield put(setMessage(message.payload));\n}\n\n/** set image */\nfunction* image(image: any) {\n     yield put(setImage(image.path));\n}\n\n/** set logo */\nfunction* logo(logo: any) {\n     yield put(setLogo(logo.path));\n}\n\n/** poster creation  */\nfunction* poster(poster: any) {\n     yield put(setPoster(poster.payload));\n}\n\n/** poster scale */\nfunction* scalePoster(scale: any) {\n     yield put(setSize(scale.payload));\n}\n\n/** poster title */\nfunction* titleSet(title: any) {\n     yield put(setTitle(title.payload));\n}\n\n/** image position */\nfunction* imagePosition(data: any) {\n     // yield console.log('position will be updated later one day');\n     yield put(setImagePosition(data.payload.x, data.payload.y));\n}\n\n/** Image crop change  */\nfunction* imageCrop(data: any) {\n     yield put(setImageCrop(data.payload.url));\n}\n\n/** Root saga */\nexport function* rootSaga() {\n     const sagas = [eventWatcher()];\n     yield all(sagas);\n}\n","import {composeWithDevTools} from 'redux-devtools-extension';\nimport {applyMiddleware, createStore, Store, combineReducers} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {rootReducer} from '../reducers/main';\nimport {rootSaga} from '../sagas/main';\n\nconst composeEnhancers = composeWithDevTools({});\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\nconst combine = combineReducers({rootReducer});\n\nexport const store : Store < any > = createStore(combine, enhancer);\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './components/app.container';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {store} from './core/stores/main';\nimport './styles/main.scss';\n\nReactDOM.render(\n     <Provider store={store}>\n     <AppContainer/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}