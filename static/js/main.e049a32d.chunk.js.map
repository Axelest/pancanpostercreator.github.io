{"version":3,"sources":["components/previews/vertical.tsx","components/previews/horizontal.tsx","components/previews/square.tsx","components/preview.tsx","core/actions/poster.ts","components/steps/one.tsx","components/take.picture.tsx","components/poster.all.tsx","components/steps/two.tsx","core/helpers/popup.ts","core/services/api.ts","components/social.buttons.tsx","components/steps/three.tsx","components/navigation.tsx","components/app.container.tsx","components/app.tsx","serviceWorker.ts","core/reducers/main.ts","core/reducers/poster.ts","core/sagas/main.ts","core/stores/main.ts","index.tsx"],"names":["Vertical","poster","this","props","imageBackground","image","react_default","a","createElement","Container","className","style","backgroundImage","backgroundSize","scale","src","alt","Header","as","textAlign","content","title","message","id","Component","connect","rootReducer","Horizontal","Grid","columns","Column","Square","Preview","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderPreview","bind","assertThisInitialized","layoutType","previews_square","previews_horizontal","previews_vertical","console","log","state","SET_LAYOUT","SET_LANGUAGE","SET_IMAGE","SET_LOGO","SET_MESSAGE","SET_TITLE","SET_STEP","SET_THEME","POSTER_CREATE","POSTER_SCALE","setLayout","layout","type","payload","setLanguage","language","setStep","step","setTheme","theme","setImage","setLogo","logo","setMessage","setPoster","posterImage","setSize","setTitle","One","layoutHandler","_this2","centered","divided","computer","mobile","tablet","onClick","Segment","raised","Placeholder","Paragraph","Line","length","dispatch","TakePicture","width","height","streaming","video","canvas","startbutton","ready","stream","isMobile","startup","clearPhoto","startStream","makeBlob","stopStream","navigator","userAgent","match","setState","document","getElementById","addEventListener","event","videoHeight","videoWidth","setAttribute","forceUpdate","_this3","context","getContext","drawImage","data","toDataURL","display","mediaDevices","getUserMedia","audio","then","srcObject","play","catch","error","getTracks","forEach","track","stop","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","i","charCodeAt","URL","createObjectURL","Blob","Button","disabled","color","path","GeneralCustom","messageType","active","zoom","themeImage","selectorHandler","changeHandler","logoHandler","zoomChange","titleChangeHandler","e","file","target","files","size","value","_ref","name","Input","icon","iconPosition","placeholder","accept","onChange","take_picture","Form","label","min","max","defaultValue","TextArea","maxLength","Two","renderStep","langHandler","lan","poster_all","PopupWindow","screenLeft","screenTop","screenWidth","screenHeight","window","screenX","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","availWidth","createClass","key","url","left","top","configString","newWindow","open","focus","uploadImage","fetch","method","headers","Headers","Content-Type","body","json","SocialButtons","facebook","twitter","encodeURIComponent","instagram","socialHandler","getWindow","circular","Three","isUploaded","posterId","emailInfo","user","fname","lname","email","det","elementIds","1","2","3","controllers","downloadPosterImage","shareTwitter","shareFacebook","dataURItoBlob","base64ToBlob","emailModal","formChange","sendToEmail","checkErrors","posterElement","visibility","html2canvas","doc","jsPDF","addImage","save","element","href","download","click","asyncToGenerator","regenerator_default","mark","_callee","searchParams","response","wrap","_context","prev","next","keys","map","join","sent","_x","apply","arguments","_ref2","_this$state$user","_this$state$user2","_this$state","Modal","trigger","prevState","basic","Content","Field","required","Actions","inverted","Icon","_this4","_this$state2","_ref3","_callee3","_context3","_x2","_this5","_this$state3","_ref4","_callee4","_context4","_x3","ab","ArrayBuffer","_this6","container","stackable","social_buttons","Nav","stepHandler","stepRender","one","two","three","Step","Group","fluid","Title","App","_Component","inherits","largeScreen","navigation","paddingTop","alignItems","minHeight","preview","Boolean","location","hostname","combineReducers","undefined","createdDate","Date","shareNetwork","action","objectSpread","eventWatcher","stepper","scalePoster","titleSet","rootSaga","takeEvery","_marked","_context2","t0","abrupt","put","_marked2","_marked3","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","sagas","_context12","all","_marked12","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","applyMiddleware","combine","store","createStore","run","ReactDOM","render","es","app_container","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.e049a32d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Container, Header} from 'semantic-ui-react';\nimport '../../styles/preview/vertical.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n}\n\nclass Vertical extends Component < Props > {\n\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n          return (\n               <Container>\n                    <div className=\"preview-vertical\">\n                         <div\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%'\n                         }}>\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img src=\"/xpancan-logo.png.pagespeed.ic.-2mEIsELsy.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <Header as={'h2'} className=\"title\" textAlign='center' content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </div>\n                    </div>\n\n                    <div className=\"final-vertical\" id=\"final-vertical\">\n                         <div\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%'\n                         }}>\n                              <div className=\"header\">\n\n                                   <div className=\"logo-holder\">\n                                        <div className=\"white-drop\"/>\n                                        <span>Moments Matter</span>\n                                        <img src=\"/xpancan-logo.png.pagespeed.ic.-2mEIsELsy.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <Header as={'h2'} className=\"title\" textAlign='center' content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </div>\n                    </div>\n\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nexport default connect(mapProps, null)(Vertical);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Grid, Header} from 'semantic-ui-react';\nimport '../../styles/preview/horizontal.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n}\n\nclass Horizontal extends Component < Props > {\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n\n          return (\n               <div>\n                    <Grid columns={2} className=\"preview-horizontal\">\n                         <Grid.Column\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%'\n                         }}/>\n                         <Grid.Column className=\"text-half\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img src=\"/xpancan-logo.png.pagespeed.ic.-2mEIsELsy.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" textAlign='left' content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </Grid.Column>\n                    </Grid>\n                    <Grid columns={2} id=\"final-horizontal\">\n                         <Grid.Column\n                              className=\"image\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%'\n                         }}/>\n                         <Grid.Column className=\"body-text\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img src=\"/xpancan-logo.png.pagespeed.ic.-2mEIsELsy.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </Grid.Column>\n\n                    </Grid>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nexport default connect(mapProps, null)(Horizontal);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport '../../styles/preview/square.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n}\n\nclass Square extends Component < Props > {\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n          return (\n               <div\n                    id=\"preview-square\"\n                    className=\"preview-square poster-preview-holder\"\n                    style={{\n                    backgroundImage: 'url( ' + imageBackground + ' )',\n                    backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                         ? 'cover'\n                         : (poster.scale * 20) + 150 + '%'\n               }}>\n\n                    <p className=\"message-holder\">{poster.message}</p>\n                    <div className=\"footer\">\n                         <div className=\"logo-holder\">\n                              <span>Moments Matter</span>\n                              <img src=\"/xpancan-logo.png.pagespeed.ic.-2mEIsELsy.png\" alt=\"\"/>\n                         </div>\n                    </div>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nexport default connect(mapProps, null)(Square);","import React, {Component} from 'react';\nimport {Container} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport Vertical from './previews/vertical';\nimport Horizontal from './previews/horizontal';\nimport Square from './previews/square';\n\ntype Props = {\n     poster: any;\n}\nclass Preview extends Component < Props > {\n\n     constructor(props : Props) {\n          super(props);\n          this.renderPreview = this\n               .renderPreview\n               .bind(this);\n     }\n\n     public renderPreview() : any {\n          const {poster} = this.props;\n\n          switch (poster.layoutType) {\n               case 1:\n                    return <Square/>;\n               case 2:\n                    return <Horizontal/>;\n               case 3:\n                    return <Vertical/>;\n               default:\n                    return console.log('invalid layout type');\n          }\n     }\n\n     public render() {\n          return (\n               <Container className=\"preview-container\">\n                    <div id=\"final-poster\">\n                         {this.renderPreview()}\n                    </div>\n               </Container>\n          );\n     }\n}\n\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\n\nexport default connect(mapStateToProps, null)(Preview);","/** Action Types */\n/** LAYOUT */\nexport const SET_LAYOUT = 'SET_LAYOUT';\nexport const LAYOUT_SET = 'LAYOUT_SET';\n\n/** LANGUAGE */\nexport const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const LANGUAGE_SET = 'LANGUAGE_SET';\n\n/** IMAGE */\nexport const SET_IMAGE = 'SET_IMAGE';\nexport const IMAGE_SET = 'IMAGE_SET';\n\n/** LOGO */\nexport const SET_LOGO = 'SET_LOGO';\nexport const LOGO_SET = 'LOGO_SET';\n\n/** MESSAGE */\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const MESSAGE_SET = 'MESSAGE_SET';\n\n/** TITLE */\nexport const SET_TITLE = 'SET_TITLE';\nexport const TITLE_SET = 'TITLE_SET';\n\n/** SOCIAL */\nexport const SET_SOCIAL = 'SET_SOCIAL';\nexport const SOCIAL_SET = 'SOCIAL_SET';\n\n/** STEP */\nexport const SET_STEP = 'SET_STEP';\nexport const STEP_SET = 'STEP_SET';\n\n/** THEME */\nexport const SET_THEME = 'SET_THEME';\nexport const THEME_SET = 'THEME_SET';\n\n/** Final Poster */\nexport const POSTER_CREATE = 'POSTER_CREATE';\nexport const POSTER_CREATE_SUCCESS = 'POSTER_CREATE_SUCCESS';\n\n/** Scale poster */\nexport const POSTER_SCALE = 'POSTER_SCALE';\nexport const SCALE_SET = 'SCALE_SET';\n\n/** Action Handlers */\nexport const setLayout = (layout : any) => ({type: LAYOUT_SET, payload: layout});\nexport const setLanguage = (language : string) => ({type: LANGUAGE_SET, payload: {\n          language\n     }});\nexport const setStep = (step : number) => ({type: STEP_SET, payload: {\n          step\n     }});\nexport const setTheme = (theme : string) => ({type: THEME_SET, payload: {\n          theme\n     }})\nexport const setImage = (image : string) => ({type: IMAGE_SET, payload: {\n          image\n     }});\nexport const setLogo = (logo : string) => ({type: LOGO_SET, payload: {\n          logo\n     }});\nexport const setMessage = (message : string) => ({type: MESSAGE_SET, payload: {\n          message\n     }});\nexport const setSocial = (type : string) => ({type: SOCIAL_SET, payload: type});\nexport const setPoster = (posterImage : any) => ({type: POSTER_CREATE_SUCCESS, payload: {\n          posterImage\n     }});\n\nexport const setSize = (scale : number) => ({type: SCALE_SET, payload: {\n          scale\n     }});\n\nexport const setTitle = (title : string) => ({type: TITLE_SET, payload: {\n          title\n     }});\n","import React, {Component} from 'react';\nimport {Header, Grid, Placeholder, Segment} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_LAYOUT} from '../../core/actions/poster';\ntype Props = {\n     setLayout(layout : string);\n     poster: any;\n}\nclass One extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.layoutHandler = this\n               .layoutHandler\n               .bind(this);\n     }\n\n     public layoutHandler(layout : string) {\n          const {setLayout} = this.props;\n          setLayout(layout);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card paddingTop\">\n                    <Header as='h2' className=\"text-center poster-h2\">Choose your layout</Header>\n                    <Grid centered divided columns={3}>\n                         <Grid.Column\n                              computer={5}\n                              mobile={16}\n                              tablet={5}\n                              textAlign='center'\n                              className={(poster.type === 'poster message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector '}\n                              onClick={() => this.layoutHandler('poster message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center'>Square&nbsp;<br/>(Short message only)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={7}\n                              mobile={16}\n                              tablet={7}\n                              textAlign='center'\n                              className={(poster.type === 'poster message and image')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('poster message and image')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Header image>\n                                             <Placeholder.Line/>\n                                             <Placeholder.Line/>\n                                        </Placeholder.Header>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center'>Horizontal&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={4}\n                              mobile={16}\n                              tablet={4}\n                              textAlign='center'\n                              className={(poster.type === 'post message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('post message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center'>Vertical&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                    </Grid>\n               </div>\n          );\n     }\n}\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setLayout: (type : string) => dispatch({type: SET_LAYOUT, payload: type})\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(One);","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_IMAGE} from '../core/actions/poster';\n\ninterface IProps {\n     setImage(path : any);\n     poster : any;\n}\ninterface IState {\n     width : number;\n     height : number;\n     streaming : boolean;\n     video : any;\n     canvas : any;\n     startbutton : any;\n     ready : boolean;\n     stream : any;\n     isMobile : boolean;\n}\nclass TakePicture extends Component < IProps,\nIState > {\n     state : IState = {\n          width: 400,\n          height: 0,\n          streaming: false,\n          video: null,\n          canvas: null,\n          startbutton: null,\n          ready: false,\n          stream: null,\n          isMobile: false\n     }\n     constructor(props : IProps) {\n          super(props);\n          this.startup = this\n               .startup\n               .bind(this);\n          this.clearPhoto = this\n               .clearPhoto\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.makeBlob = this\n               .makeBlob\n               .bind(this);\n          this.stopStream = this\n               .stopStream\n               .bind(this);\n          this.isMobile = this\n               .isMobile\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.startup();\n          this.isMobile();\n     }\n\n     public isMobile() {\n          (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i))\n               ? this.setState({isMobile: true})\n               : this.setState({isMobile: false});\n     }\n\n     public async startup() {\n          await this.setState({\n               video: document.getElementById('video-stream'),\n               canvas: document.getElementById('image-canvas'),\n               startbutton: document.getElementById('takepicture')\n          });\n          this\n               .state\n               .video\n               .addEventListener('canplay', (event) => {\n                    if (!this.state.streaming) {\n                         this.state.height = this.state.video.videoHeight / (this.state.video.videoWidth / this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('height', this.state.height);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('height', this.state.height);\n                         this.state.streaming = true;\n                         this.forceUpdate();\n                    }\n               }, false);\n     }\n\n     public startStream() {\n          if (!this.state.ready) {\n               const container : any = document.getElementById('camera-stream');\n               container.style.display = 'block';\n               navigator\n                    .mediaDevices\n                    .getUserMedia({video: true, audio: false})\n                    .then((stream) => {\n                         this.state.video.srcObject = stream;\n                         this\n                              .state\n                              .video\n                              .play();\n                         this.setState({ready: true, stream: stream});\n                    })\n                    .catch((error) => console.log('cannot open stream: ', error));\n          } else {\n               const {setImage} = this.props;\n               const context = this\n                    .state\n                    .canvas\n                    .getContext('2d');\n               if (this.state.width && this.state.height) {\n                    this.state.canvas.width = this.state.width;\n                    this.state.canvas.height = this.state.height;\n                    context.drawImage(this.state.video, 0, 0, this.state.width, this.state.height);\n                    const data = this\n                         .state\n                         .canvas\n                         .toDataURL('image/jpeg');\n\n                    setImage(this.makeBlob(data));\n                    this.forceUpdate();\n                    this.stopStream();\n               }\n          }\n     }\n\n     public clearPhoto() {\n          const {setImage} = this.props;\n          setImage(null);\n     }\n\n     public stopStream() {\n          const container : any = document.getElementById('camera-stream');\n          container.style.display = 'none';\n          this\n               .state\n               .stream\n               .getTracks()\n               .forEach((track) => track.stop());\n          this.setState({ready: false, stream: null});\n     }\n\n     public makeBlob(data : any) {\n          let byteString : any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return URL.createObjectURL(new Blob([ia], {type: mimeString}));\n     }\n\n     public render() {\n          return (\n               <div>\n                    <div\n                         className=\"camera\"\n                         id=\"camera-stream\"\n                         style={{\n                         display: 'none'\n                    }}>\n                         <video id=\"video-stream\"/>\n                    </div>\n                    <Button disabled={this.state.isMobile} color=\"green\" onClick={this.startStream}>Take photo</Button>\n                    {(this.state.ready)\n                         ? <span>\n                                   <Button color=\"orange\" onClick={this.clearPhoto}>Clear photo</Button>\n                                   <Button color=\"red\" onClick={this.stopStream}>Cancel</Button>\n                              </span>\n                         : ''}\n\n                    <canvas\n                         id=\"image-canvas\"\n                         style={{\n                         display: 'none'\n                    }}/>\n               </div>\n\n          );\n     }\n}\n\nconst mapProps = (props) => ({poster: props.rootReducer});\nconst mapDispatch = (dispatch) => ({\n     setImage: (path : string) => dispatch({type: SET_IMAGE, path: path})\n});\nexport default connect(mapProps, mapDispatch)(TakePicture);","import React, {Component} from 'react';\nimport {Input, Container, Header, Form, TextArea} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_IMAGE, SET_LOGO, SET_MESSAGE, POSTER_SCALE, SET_TITLE} from '../core/actions/poster';\nimport TakePicture from './take.picture';\n\n/** Interfaces */\ntype Props = {\n     setImage(image : any, path : string);\n     setLogo(logo : any, path : string);\n     setMessage(message : string);\n     setSize(scale : number);\n     setTitle(title : string);\n     poster: any;\n}\n\ntype State = {\n     messageType: number;\n     error: {\n          message: string;\n          active: boolean\n     };\n     zoom: number;\n}\n\nclass GeneralCustom extends Component < Props,\nState > {\n     state : State = {\n          messageType: 1,\n          error: {\n               message: '',\n               active: false\n          },\n          zoom: 1\n     };\n\n     constructor(props : Props) {\n          super(props);\n          this.themeImage = this\n               .themeImage\n               .bind(this);\n          this.selectorHandler = this\n               .selectorHandler\n               .bind(this);\n          this.changeHandler = this\n               .changeHandler\n               .bind(this);\n          this.logoHandler = this\n               .logoHandler\n               .bind(this);\n          this.zoomChange = this\n               .zoomChange\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.titleChangeHandler = this\n               .titleChangeHandler\n               .bind(this);\n     }\n\n     public themeImage(e : any) {\n          const limit = 5 * 1048576; // 10MB\n          const {setImage} = this.props;\n          const file = e.target.files[0];\n          const path = URL.createObjectURL(file);\n          if (file.size > limit) {\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          setImage(file, path);\n     }\n\n     public selectorHandler(value : any) {\n          const {setMessage} = this.props;\n          setMessage(value);\n     }\n\n     public titleChangeHandler(e : any) {\n          const {setTitle} = this.props;\n          setTitle(e.target.value);\n     }\n\n     public changeHandler(e : any) {\n          const {setMessage} = this.props;\n          setMessage(e.target.value);\n     }\n\n     public logoHandler(e : any) {\n          const limit = 5 * 1048576; // 10MB\n          const {setLogo} = this.props;\n          const file = e.target.files[0];\n          const path = URL.createObjectURL(file);\n          if (file.size > limit) {\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          setLogo(file, path);\n     }\n\n     public zoomChange(e : any, {name, value} : any) {\n          const {setSize} = this.props;\n          this.setState({zoom: value});\n          setSize(value);\n     }\n\n     public startStream() {\n          console.log('will start camera streaming here');\n\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <Container textAlign=\"center\">\n                    <Header as='h2' className=\"text-center poster-h2\">Upload your image</Header>\n                    <Input\n                         icon='file'\n                         iconPosition='left'\n                         placeholder='Upload Image'\n                         accept=\"image/*\"\n                         type=\"file\"\n                         onChange={this.themeImage}/>\n                    <p>10 MB limit. Allowed types: gif png jpg jpeg.</p>\n                    <Header as='h2' className=\"text-center poster-h2\">Take a picture</Header>\n                    <TakePicture/>\n                    <Form.Input\n                         label={`Scale image: `}\n                         min={1}\n                         max={10}\n                         name='zoom'\n                         onChange={this.zoomChange}\n                         type='range'\n                         value={this.state.zoom}\n                         className=\"scale-controller\"/>\n                    <Header as='h2' textAlign=\"center\" className=\"text-center poster-h2\">Share Your Moment</Header>\n                    <Form>\n                         <Input\n                              className={(poster.layoutType === 1)\n                              ? \"hide\"\n                              : \"show paddingBottom\"}\n                              placeholder='Poster title'\n                              type=\"text\"\n                              onChange={this.titleChangeHandler}\n                              defaultValue={poster.title}/>\n                         <TextArea\n                              placeholder=\"Write 'I am and will' message here. eg. 'I am a student and I will spread the word'.\"\n                              maxLength=\"150\"\n                              onChange={this.changeHandler}\n                              defaultValue={poster.message}/>\n                         <p>Maximum 150 characters</p>\n                    </Form>\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImage: (image : any, path : string) => dispatch({type: SET_IMAGE, payload: image, path: path}),\n     setLogo: (logo : any, path : string) => dispatch({type: SET_LOGO, payload: logo, path: path}),\n     setMessage: (message : string) => dispatch({type: SET_MESSAGE, payload: message}),\n     setSize: (scale : number) => dispatch({type: POSTER_SCALE, payload: scale}),\n     setTitle: (title : string) => dispatch({type: SET_TITLE, payload: title})\n});\n\nexport default connect(mapProps, mapDispatch)(GeneralCustom);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n// import {Button, Popup, Flag, Header, Grid} from 'semantic-ui-react';\nimport {SET_LANGUAGE} from '../../core/actions/poster';\nimport GeneralCustom from '../poster.all';\n\n// Will be used in the future for other campaign import PosterMessage from\n// '../poster.message'; import PosterImage from '../poster.image'; import\n// PostMessage from '../post.message'; import PostImage from '../post.image';\n\ntype Props = {\n     poster: any;\n     setLanguage(language : string);\n}\n\nclass Two extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.renderStep = this\n               .renderStep\n               .bind(this);\n          this.langHandler = this\n               .langHandler\n               .bind(this);\n     }\n\n     public langHandler(lan : string) {\n          const {setLanguage} = this.props;\n          setLanguage(lan);\n     }\n\n     public renderStep(type : number) {\n          return <GeneralCustom/>;\n          // This section will be used in the future for other campaigns; switch (type) {\n          //  case 1:           return <PosterMessage/>;      case 2:           return\n          // <PosterImage/>;      case 3:           return <PostMessage/>;      case 4:\n          // return <PostImage/>;      default:           return 'Error ocurred go back';\n          // }\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card\">\n                    {/* <Popup\n                         trigger={< Button circular icon = \"world\" content = {\n                         \"Language - \" + poster\n                              .language\n                              .toUpperCase()\n                    }\n                    className = \"lang-selector\" />}\n                         flowing\n                         hoverable>\n                         <Grid centered divided columns={3}>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'english')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('english')}>\n                                   <Header as='h4'>English</Header>\n                                   <Flag name='us' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'spanish')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('spanish')}>\n                                   <Header as='h4'>Spanish</Header>\n                                   <Flag name='spain' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'french')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('french')}>\n                                   <Header as='h4'>French</Header>\n                                   <Flag name='france' className=\"flag-selector\"/>\n                              </Grid.Column>\n                         </Grid>\n                    </Popup> */}\n                    {this.renderStep(poster.layoutType)}\n               </div>\n          );\n     }\n}\n\nconst mapStateTopProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch) => ({\n     setLanguage: (type : string) => dispatch({type: SET_LANGUAGE, payload: type})\n});\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(Two);","export class PopupWindow {\n     private screenLeft : number;\n     private screenTop : number;\n     private screenWidth : number;\n     private screenHeight : number;\n     private zoom : number;\n\n     constructor() {\n          this.screenLeft = window.screenLeft || window.screenX;\n          this.screenTop = window.screenTop || window.screenY;\n          this.screenWidth = window.innerWidth || (document.documentElement.clientWidth)\n               ? document.documentElement.clientWidth\n               : screen.width;\n          this.screenHeight = window.innerHeight || (document.documentElement.clientHeight)\n               ? document.documentElement.clientHeight\n               : screen.height;\n          this.zoom = this.screenWidth / window.screen.availWidth;\n          return this;\n     }\n\n     public getWindow(url : string, title : string, width : number, height : number) : void {\n          const left: number = (this.screenWidth - width) / 2 / this.zoom + this.screenLeft;\n          const top: number = (this.screenHeight - height) / 2 / this.zoom + this.screenTop;\n          const configString: string = 'scrollbars=yes, width=' + width / this.zoom + ', height=' + height / this.zoom + ', top=' + top + ', left=' + left;\n          const newWindow: any = window.open(url, title, configString);\n          if (window.focus) {\n               newWindow.focus();\n          }\n     }\n\n}\n","const apiURL : string = 'https://core.pancan.org/api/poster/email';\n\n/** Api calls */\nexport const uploadImage = (data : any) => (fetch(apiURL, {\n     method: 'post',\n     headers: new Headers({'Content-Type': 'application/x-www-form-urlencoded'}),\n     body: data\n}).then(data => data.json()).then(data => data).catch(error => error));\n","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {PopupWindow} from '../core/helpers/popup';\n\n/** interface */\ninterface State {\n     facebook : string;\n     twitter : string;\n     instagram : string;\n}\n\nclass SocialButtons extends Component < {},\nState > {\n\n     state: State = {\n          facebook: 'https://www.facebook.com/sharer/sharer.php?u=https://www.pancan.org/',\n          twitter: 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('#MomentsMatter. Join me & @PanCAN in sharing our stories & raising #pancreaticca' +\n                    'ncer awareness so more patients can have more moments with their loved ones. htt' +\n                    'p://pcan.at/MnM'),\n          instagram: 'https://www.instagram.com/pancan/'\n     };\n\n     constructor(props : any) {\n          super(props);\n          this.socialHandler = this\n               .socialHandler\n               .bind(this);\n     }\n\n     public socialHandler(url : string) {\n          new PopupWindow().getWindow(url, 'Share Poster Creator', 530, 400);\n     }\n\n     public render() {\n          return (\n               <div className=\"social-button-container\">\n                    <Button\n                         circular\n                         color='facebook'\n                         icon='facebook'\n                         onClick={() => this.socialHandler(this.state.facebook)}/>\n                    <Button\n                         circular\n                         color='twitter'\n                         icon='twitter'\n                         onClick={() => this.socialHandler(this.state.twitter)}/>\n                    <Button\n                         circular\n                         color='instagram'\n                         icon='instagram'\n                         onClick={() => this.socialHandler(this.state.instagram)}/>\n               </div>\n          );\n     }\n}\n\nexport default SocialButtons;","import React, {Component} from 'react';\nimport {\n     Icon,\n     Container,\n     Grid,\n     Header,\n     Button,\n     Modal,\n     Form,\n     Input\n} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf'\nimport {POSTER_CREATE} from '../../core/actions/poster';\nimport {PopupWindow} from '../../core/helpers/popup';\nimport {uploadImage} from '../../core/services/api';\nimport SocialButtons from '../social.buttons';\n\ninterface Props {\n     poster : any;\n     setPoster(data : any);\n}\ninterface IUser {\n     [key : string] : string\n}\ninterface State {\n     isUploaded : boolean;\n     posterId : number;\n     emailInfo : boolean;\n     user : IUser;\n     error : any;\n     elementIds : any;\n}\n\nclass Three extends Component < Props,\nState > {\n     state : State = {\n          isUploaded: false,\n          posterId: -1,\n          emailInfo: false,\n          user: {\n               fname: '',\n               lname: '',\n               email: ''\n          },\n          error: {\n               error: false,\n               det: ''\n          },\n          elementIds: {\n               1: 'preview-square',\n               2: 'final-horizontal',\n               3: 'final-vertical'\n          }\n     };\n     constructor(props : Props) {\n          super(props);\n          this.controllers = this\n               .controllers\n               .bind(this);\n          this.downloadPosterImage = this\n               .downloadPosterImage\n               .bind(this);\n          this.shareTwitter = this\n               .shareTwitter\n               .bind(this);\n          this.shareFacebook = this\n               .shareFacebook\n               .bind(this);\n          this.dataURItoBlob = this\n               .dataURItoBlob\n               .bind(this);\n          this.base64ToBlob = this\n               .base64ToBlob\n               .bind(this);\n          this.emailModal = this\n               .emailModal\n               .bind(this);\n          this.formChange = this\n               .formChange\n               .bind(this);\n          this.error = this\n               .error\n               .bind(this);\n          this.sendToEmail = this\n               .sendToEmail\n               .bind(this);\n          this.checkErrors = this\n               .checkErrors\n               .bind(this);\n     }\n\n     public downloadPosterImage(type : string) {\n          const {poster} = this.props;\n          const {elementIds} = this.state;\n          const posterElement : any = document.getElementById(elementIds[poster.layoutType]);\n          posterElement.style.visibility = 'visible';\n          html2canvas(posterElement).then((canvas : any) => {\n               const image = canvas.toDataURL('image/jpeg', 1.0);\n               if (type === 'pdf') {\n                    const doc = new jsPDF('p', 'mm');\n                    doc.addImage(image, 'JPEG', 10, 10);\n                    doc.save('poster.pdf');\n                    return;\n               }\n\n               const element = document.createElement('a');\n               element.href = image;\n               element.download = 'poster.jpeg';\n               element.click();\n               posterElement.style.visibility = 'hidden';\n          });\n     }\n\n     public async sendToEmail() {\n          const {poster} = this.props;\n          const {elementIds} = this.state;\n          const posterElement : any = document.getElementById(elementIds[poster.layoutType]);\n          const {isUploaded} = this.state;\n\n          if (!this.checkErrors()) {\n               await\n               html2canvas(posterElement).then(async(canvas : any) => {\n                    const image = canvas.toDataURL('image/jpeg', 1.0);\n                    const data : any = {\n                         key: '5994766c58613900370b6153',\n                         image: image,\n                         lname: this.state.user.lname,\n                         email: this.state.user.email,\n                         fname: this.state.user.fname\n                    };\n                    const searchParams = Object\n                         .keys(data)\n                         .map((key) => {\n                              return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n                         })\n                         .join('&');\n\n                    if (!isUploaded) {\n                         const response : any = await uploadImage(searchParams);\n                         this.setState({\n                              isUploaded: true,\n                              posterId: response.id,\n                              error: {\n                                   error: false\n                              },\n                              emailInfo: false\n                         });\n                    }\n               });\n          }\n     }\n\n     public formChange(e : any, {name, value} : any) {\n          const {fname, lname, email} = this.state.user;\n          switch (name) {\n               case 'lname':\n                    this.setState({\n                         user: {\n                              lname: value,\n                              fname: fname,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'fname':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: value,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'email':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: fname,\n                              email: value\n                         }\n                    });\n                    break;\n               default:\n                    console.log(this.state.user);\n          }\n     }\n\n     public error() {\n          return (\n               <b style={{\n                    color: 'red'\n               }}>Error! make sure to have vaild form values.</b>\n          );\n     }\n\n     public checkErrors() : boolean {\n          const {lname, fname, email} = this.state.user;\n          if (lname !== '' && fname !== '' && email !== '') {\n               return false;\n          };\n          this.setState({\n               error: {\n                    error: true\n               }\n          });\n          return true;\n     }\n\n     public emailModal() {\n          const {emailInfo, isUploaded} = this.state;\n          return (\n               <Modal\n                    open={emailInfo}\n                    trigger={< Button color = 'purple' disabled = {\n                    isUploaded\n                         ? true\n                         : false\n               }\n               content = {\n                    isUploaded\n                         ? 'Email sent!'\n                         : 'Send via Email'\n               }\n               onClick = {\n                    () => this.setState((prevState) => ({\n                         emailInfo: !prevState.emailInfo\n                    }))\n               } />}\n                    basic\n                    size='small'>\n                    <Header icon='send' content='Send me my poster'/>\n                    <Modal.Content>\n                         <strong className=\"over-image\">\n                              Your email information:\n                         </strong>\n                         <Form>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>First name:\n                                   </label>\n                                   <Input\n                                        iconPosition='left'\n                                        placeholder='First Name'\n                                        name='fname'\n                                        type=\"text\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>Last name:\n                                   </label>\n                                   <Input\n                                        iconPosition='left'\n                                        placeholder='Last Name'\n                                        name='lname'\n                                        type=\"text\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>Email:\n                                   </label>\n                                   <Input\n                                        name='email'\n                                        iconPosition='left'\n                                        placeholder='Email address'\n                                        type=\"email\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                         </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                         <Button\n                              color='red'\n                              inverted\n                              onClick={() => this.setState((prevState) => ({\n                              emailInfo: !prevState.emailInfo\n                         }))}>\n                              <Icon name='remove'/>\n                              No\n                         </Button>\n                         <Button color='green' inverted onClick={this.sendToEmail}>\n                              <Icon name='mail'/>\n                              Send\n                         </Button>\n                         {(this.state.error.error)\n                              ? this.error()\n                              : ''}\n                    </Modal.Actions>\n               </Modal>\n          )\n     }\n\n     public shareTwitter() {\n          const poster : any = document.getElementById('final-poster');\n          const {isUploaded, posterId} = this.state;\n          html2canvas(poster, {scale: 2}).then(async(canvas : any) => {\n               const image = canvas.toDataURL('image/png');\n               const data : any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               }\n               let url : string;\n               if (!isUploaded) {\n                    const response : any = await uploadImage(data);\n                    this.setState({isUploaded: true, posterId: response.id});\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                              'on.org/poster/' + response.id);\n               } else {\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                              'on.org/poster/' + posterId);\n               }\n\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 400);\n          });\n\n     }\n\n     public shareFacebook() {\n          const poster : any = document.getElementById('final-poster');\n          const {isUploaded, posterId} = this.state;\n          html2canvas(poster, {scale: 2}).then(async(canvas : any) => {\n               const image = canvas.toDataURL('image/png');\n               let url : string;\n               const data : any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               };\n               if (!isUploaded) {\n                    const response : any = await uploadImage(data);\n                    this.setState({isUploaded: true, posterId: response.id});\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + response.id);\n               } else {\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + posterId);\n               }\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 200);\n          });\n     }\n\n     public dataURItoBlob(data : string) : any {\n          const byteString = atob(data.split(',')[1]);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ab], {type: 'image/png'});\n     }\n\n     public base64ToBlob(data : any) {\n          let byteString : any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ia], {type: mimeString});\n\n     }\n     public controllers(type : number) {\n          switch (type) {\n               case 1:\n               case 2:\n               case 3:\n               case 4:\n                    return <Grid container columns={2} stackable>\n                         <Grid.Column textAlign=\"center\">\n                              <Button\n                                   content='Download JPG'\n                                   color='purple'\n                                   onClick={() => this.downloadPosterImage('image')}/>\n                         </Grid.Column>\n                         {/* <Grid.Column textAlign=\"center\">\n                              <Button content='Download PDF' onClick={() => this.downloadPosterImage('pdf')}/>\n                         </Grid.Column> */}\n                         <Grid.Column textAlign=\"center\">\n                              {this.emailModal()}\n                         </Grid.Column>\n                    </Grid>;\n               default:\n                    return <div/>\n          }\n     }\n     public render() {\n          const {poster} = this.props;\n          const title = '#MomentsMatter'; //(poster.layoutType === 3 || poster.layoutType === 4)\n          //      ? 'Share your poster'      : 'Download image';\n          return (\n               <Container className=\"step paddingTop\">\n                    <Header as='h2' content={title} textAlign=\"center\" className=\"poster-h2\"/>\n                    <p\n                         style={{\n                         textAlign: 'center'\n                    }}\n                         className=\"paddingBottom over-solid leadin-copy\">Share\n                         your Moment with the world by downloading your image and sharing it to social\n                         media with #MomentsMatter and tagging us @PanCAN.</p>\n\n                    <SocialButtons/>\n                    <br/>{this.controllers(poster.layoutType)}\n               </Container>\n          );\n     }\n}\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setPoster: (data : any) => dispatch({type: POSTER_CREATE, payload: data})\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Three);","import React, {Component} from 'react';\nimport {Container, Step, Icon, Button} from 'semantic-ui-react';\nimport One from './steps/one';\nimport Two from './steps/two';\nimport Three from './steps/three';\nimport {connect} from 'react-redux';\nimport {SET_STEP} from '../core/actions/poster';\ntype Props = {\n     setStep(step : number);\n     poster: any\n}\nclass Nav extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.stepHandler = this\n               .stepHandler\n               .bind(this);\n          this.stepRender = this\n               .stepRender\n               .bind(this);\n     }\n\n     public stepHandler(step : number) {\n          const {setStep} = this.props;\n          setStep(step);\n     }\n\n     public stepRender() : any {\n          const {poster} = this.props;\n          const {step} = poster;\n\n          switch (step) {\n               case 1:\n                    return <One/>;\n               case 2:\n                    return <Two/>;\n               case 3:\n                    return <Three/>;\n          }\n     }\n\n     public render() {\n          const {poster} = this.props;\n\n          return (\n               <div className=\"controller-container\">\n                    <Container>\n                         <Step.Group fluid>\n                              <Step\n                                   active={(poster.step === 1)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(1)}\n                                   className=\"step-button\">\n                                   <Icon name='vcard'/>\n                                   <Step.Content>\n                                        <Step.Title>Start</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 2)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(2)}\n                                   className=\"step-button\">\n                                   <Icon name='connectdevelop'/>\n                                   <Step.Content>\n                                        <Step.Title>Customize</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 3)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(3)}\n                                   className=\"step-button\">\n                                   <Icon name='share alternate square'/>\n                                   <Step.Content>\n                                        <Step.Title>Save & Share</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                         </Step.Group>\n                         {this.stepRender()}\n                         <Button\n                              onClick={() => this.stepHandler(poster.step - 1)}\n                              className={(poster.step > 1)\n                              ? 'back-button show'\n                              : ' hide'}>\n                              <Icon name='arrow left'/>&nbsp;Back\n                         </Button>\n                         <Button\n                              className={(poster.step < 3)\n                              ? 'next-button show'\n                              : ' hide'}\n                              onClick={() => this.stepHandler(poster.step + 1)}>\n                              Next&nbsp;<Icon name='arrow right'/>\n                         </Button>\n                    </Container>\n               </div>\n          );\n     }\n}\n\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setStep: (step : number): void => dispatch({type: SET_STEP, payload: step})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import App from './app';\nexport default(App);","import React, {Component} from 'react';\nimport Preview from './preview';\nimport Nav from './navigation';\nimport {Grid} from 'semantic-ui-react';\n\nexport class App extends Component {\n     render() {\n          return (\n               <Grid container columns='equal' divided stackable>\n                    <Grid.Column mobile={16} tablet={16} computer={16} largeScreen={10}>\n                         <Nav/>\n                    </Grid.Column>\n                    <Grid.Column\n                         mobile={16}\n                         tablet={16}\n                         computer={16}\n                         largeScreen={6}\n                         className=\"purple-gradient-bck\"\n                         style={{\n                         paddingTop: 25,\n                         display: 'flex',\n                         alignItems: 'center',\n                         minHeight: 600\n                    }}>\n                         <Preview/>\n                    </Grid.Column>\n               </Grid>\n          );\n     }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** Imports */\nimport {combineReducers} from 'redux';\nimport {IStateStore} from '../models/state';\nimport {posterReducer} from './poster';\n\nexport const rootReducer = combineReducers < IStateStore > ({poster: posterReducer});\n","/** Imports */\nimport {\n     LAYOUT_SET,\n     STEP_SET,\n     LANGUAGE_SET,\n     THEME_SET,\n     MESSAGE_SET,\n     LOGO_SET,\n     IMAGE_SET,\n     POSTER_CREATE_SUCCESS,\n     SCALE_SET,\n     TITLE_SET\n} from '../actions/poster';\nimport {IPoster} from '../models/poster';\n\nconst initPoster = () : IPoster => ({\n     step: 1,\n     type: 'poster message only',\n     layoutType: 1,\n     language: 'english',\n     message: '',\n     createdDate: Date(),\n     shareNetwork: '',\n     theme: 'pancan-purple',\n     image: '',\n     logo: 'https://www.pancan.org//wp-content/uploads/2018/05/pancan-logo.png',\n     posterImage: {},\n     scale: 1,\n     title: ''\n});\n\nexport const posterReducer = (state = initPoster(), action : any) => {\n     switch (action.type) {\n          case LAYOUT_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case STEP_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case LANGUAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case THEME_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case MESSAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case LOGO_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case IMAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case POSTER_CREATE_SUCCESS:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case SCALE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case TITLE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          default:\n               return state;\n     }\n}","/** Import dependencies */\nimport {all, put, takeEvery} from 'redux-saga/effects';\nimport {\n     SET_LAYOUT,\n     SET_LANGUAGE,\n     SET_STEP,\n     SET_THEME,\n     SET_MESSAGE,\n     SET_IMAGE,\n     SET_LOGO,\n     POSTER_CREATE,\n     POSTER_SCALE,\n     SET_TITLE,\n     setLayout,\n     setLanguage,\n     setStep,\n     setTheme,\n     setMessage,\n     setImage,\n     setLogo,\n     setPoster,\n     setSize,\n     setTitle\n\n} from '../actions/poster';\n\n/** Watcher */\nfunction * eventWatcher() {\n     yield takeEvery(SET_LAYOUT, layout);\n     yield takeEvery(SET_LANGUAGE, language);\n     yield takeEvery(SET_STEP, stepper);\n     yield takeEvery(SET_THEME, theme);\n     yield takeEvery(SET_MESSAGE, message);\n     yield takeEvery(SET_IMAGE, image);\n     yield takeEvery(SET_LOGO, logo);\n     yield takeEvery(POSTER_CREATE, poster);\n     yield takeEvery(POSTER_SCALE, scalePoster);\n     yield takeEvery(SET_TITLE, titleSet);\n}\n\n/** set layout */\nfunction * layout(type : any) {\n     let layout : any;\n     switch (type.payload) {\n          case 'poster message only':\n               layout = {\n                    type: 'poster message only',\n                    layoutType: 1\n               }\n               break;\n          case 'poster message and image':\n               layout = {\n                    type: 'poster message and image',\n                    layoutType: 2\n               }\n               break;\n          case 'post message only':\n               layout = {\n                    type: 'post message only',\n                    layoutType: 3\n               }\n               break;\n          case 'post image':\n               layout = {\n                    type: 'post image',\n                    layoutType: 4\n               }\n               break;\n     }\n     yield put(setLayout(layout));\n}\n\n/** set language */\nfunction * language(type : any) {\n     yield put(setLanguage(type.payload));\n}\n\n/** update step */\nfunction * stepper(step : any) {\n     yield put(setStep(step.payload));\n}\n\n/** set theme */\nfunction * theme(theme : any) {\n     yield put(setTheme(theme.payload));\n}\n\n/** set message */\nfunction * message(message : any) {\n     yield put(setMessage(message.payload));\n}\n\n/** set image */\nfunction * image(image : any) {\n     yield put(setImage(image.path));\n}\n\n/** set logo */\nfunction * logo(logo : any) {\n     yield put(setLogo(logo.path));\n}\n\n/** poster creation  */\nfunction * poster(poster : any) {\n     yield put(setPoster(poster.payload));\n}\n\n/** poster scale */\nfunction * scalePoster(scale : any) {\n     yield put(setSize(scale.payload));\n}\n\n/** poster title */\nfunction * titleSet(title : any) {\n     yield put(setTitle(title.payload));\n}\n\n/** Root saga */\nexport function * rootSaga() {\n     const sagas = [eventWatcher()];\n     yield all(sagas);\n}","import {composeWithDevTools} from 'redux-devtools-extension';\nimport {applyMiddleware, createStore, Store, combineReducers} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {rootReducer} from '../reducers/main';\nimport {rootSaga} from '../sagas/main';\n\nconst composeEnhancers = composeWithDevTools({});\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\nconst combine = combineReducers({rootReducer});\n\nexport const store : Store < any > = createStore(combine, enhancer);\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './components/app.container';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {store} from './core/stores/main';\nimport './styles/main.scss';\n\nReactDOM.render(\n     <Provider store={store}>\n     <AppContainer/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}