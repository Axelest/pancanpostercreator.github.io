{"version":3,"sources":["core/actions/poster.ts","components/previews/vertical.tsx","components/previews/horizontal.tsx","components/previews/square.tsx","components/preview.tsx","components/steps/one.tsx","components/take.picture.tsx","components/poster.all.tsx","components/steps/two.tsx","core/helpers/popup.ts","core/services/api.ts","components/social.buttons.tsx","components/steps/three.tsx","components/navigation.tsx","components/app.container.tsx","components/app.tsx","serviceWorker.ts","core/reducers/main.ts","core/reducers/poster.ts","core/sagas/main.ts","core/stores/main.ts","index.tsx"],"names":["SET_LAYOUT","SET_LANGUAGE","SET_IMAGE","SET_LOGO","SET_MESSAGE","SET_TITLE","SET_STEP","SET_THEME","POSTER_CREATE","POSTER_SCALE","IMAGE_SET_POSITION","setLayout","layout","type","payload","setLanguage","language","setStep","step","setTheme","theme","setImage","image","setLogo","logo","setMessage","message","setPoster","posterImage","setSize","scale","setTitle","title","setImagePosition","positionX","positionY","Vertical","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mouseMoving","element","mouseDown","bind","assertThisInitialized","mouseUp","moving","document","getElementById","addEventListener","e","offsetX","offsetWidth","offsetY","offsetHeight","removeEventListener","setState","poster","imageBackground","react_default","a","createElement","Container","className","id","style","backgroundImage","backgroundSize","backgroundPosition","src","alt","Header","as","textAlign","content","Component","connect","rootReducer","dispatch","x","y","Horizontal","Grid","columns","Column","Square","Preview","renderPreview","layoutType","previews_square","previews_horizontal","previews_vertical","console","log","One","layoutHandler","_this2","centered","divided","computer","mobile","tablet","onClick","Segment","raised","Placeholder","Paragraph","Line","length","TakePicture","width","height","streaming","video","canvas","startbutton","ready","stream","isMobile","startup","clearPhoto","startStream","makeBlob","stopStream","navigator","userAgent","match","event","videoHeight","videoWidth","setAttribute","forceUpdate","_this3","context","getContext","drawImage","data","toDataURL","display","mediaDevices","getUserMedia","audio","then","srcObject","play","catch","error","getTracks","forEach","track","stop","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","i","charCodeAt","URL","createObjectURL","Blob","Button","disabled","color","path","GeneralCustom","messageType","active","zoom","themeImage","selectorHandler","changeHandler","logoHandler","zoomChange","titleChangeHandler","file","target","files","size","value","_ref","name","Input","icon","iconPosition","placeholder","accept","onChange","take_picture","Form","label","min","max","defaultValue","TextArea","maxLength","Two","renderStep","langHandler","lan","poster_all","PopupWindow","screenLeft","screenTop","screenWidth","screenHeight","window","screenX","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","availWidth","createClass","key","url","left","top","configString","newWindow","open","focus","uploadImage","fetch","method","headers","Headers","Content-Type","body","json","SocialButtons","facebook","twitter","encodeURIComponent","instagram","socialHandler","getWindow","circular","Three","isUploaded","posterId","emailInfo","user","fname","lname","email","det","elementIds","1","2","3","controllers","downloadPosterImage","shareTwitter","shareFacebook","dataURItoBlob","base64ToBlob","emailModal","formChange","sendToEmail","checkErrors","posterElement","html2canvas","doc","jsPDF","addImage","save","href","download","click","asyncToGenerator","regenerator_default","mark","_callee","searchParams","response","wrap","_context","prev","next","keys","map","join","sent","_x","apply","arguments","_ref2","_this$state$user","_this$state$user2","_this$state","Modal","trigger","prevState","basic","Content","Field","required","Actions","inverted","Icon","_this4","_this$state2","_ref3","_callee3","_context3","_x2","_this5","_this$state3","_ref4","_callee4","_context4","_x3","ab","ArrayBuffer","_this6","container","stackable","social_buttons","Nav","stepHandler","stepRender","one","two","three","Step","Group","fluid","Image","Title","App","_Component","inherits","largeScreen","navigation","paddingTop","alignItems","minHeight","preview","Boolean","location","hostname","combineReducers","undefined","createdDate","Date","shareNetwork","action","objectSpread","eventWatcher","stepper","scalePoster","titleSet","imagePosition","rootSaga","takeEvery","_marked","_context2","t0","abrupt","put","_marked2","_marked3","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","sagas","_context13","all","_marked13","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","applyMiddleware","combine","store","createStore","run","ReactDOM","render","es","app_container","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.e8af5137.chunk.js","sourcesContent":["/** Action Types */\n/** LAYOUT */\nexport const SET_LAYOUT = 'SET_LAYOUT';\nexport const LAYOUT_SET = 'LAYOUT_SET';\n\n/** LANGUAGE */\nexport const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const LANGUAGE_SET = 'LANGUAGE_SET';\n\n/** IMAGE */\nexport const SET_IMAGE = 'SET_IMAGE';\nexport const IMAGE_SET = 'IMAGE_SET';\n\n/** LOGO */\nexport const SET_LOGO = 'SET_LOGO';\nexport const LOGO_SET = 'LOGO_SET';\n\n/** MESSAGE */\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const MESSAGE_SET = 'MESSAGE_SET';\n\n/** TITLE */\nexport const SET_TITLE = 'SET_TITLE';\nexport const TITLE_SET = 'TITLE_SET';\n\n/** SOCIAL */\nexport const SET_SOCIAL = 'SET_SOCIAL';\nexport const SOCIAL_SET = 'SOCIAL_SET';\n\n/** STEP */\nexport const SET_STEP = 'SET_STEP';\nexport const STEP_SET = 'STEP_SET';\n\n/** THEME */\nexport const SET_THEME = 'SET_THEME';\nexport const THEME_SET = 'THEME_SET';\n\n/** Final Poster */\nexport const POSTER_CREATE = 'POSTER_CREATE';\nexport const POSTER_CREATE_SUCCESS = 'POSTER_CREATE_SUCCESS';\n\n/** Scale poster */\nexport const POSTER_SCALE = 'POSTER_SCALE';\nexport const SCALE_SET = 'SCALE_SET';\n\n/** Drag Image */\nexport const IMAGE_SET_POSITION = 'IMAGE_SET_POSITION';\nexport const IMAGE_POSITION_SET = 'IMAGE_POSITION_SET';\n\n/** Action Handlers */\nexport const setLayout = (layout : any) => ({type: LAYOUT_SET, payload: layout});\nexport const setLanguage = (language : string) => ({type: LANGUAGE_SET, payload: {\n          language\n     }});\nexport const setStep = (step : number) => ({type: STEP_SET, payload: {\n          step\n     }});\nexport const setTheme = (theme : string) => ({type: THEME_SET, payload: {\n          theme\n     }})\nexport const setImage = (image : string) => ({type: IMAGE_SET, payload: {\n          image\n     }});\nexport const setLogo = (logo : string) => ({type: LOGO_SET, payload: {\n          logo\n     }});\nexport const setMessage = (message : string) => ({type: MESSAGE_SET, payload: {\n          message\n     }});\nexport const setSocial = (type : string) => ({type: SOCIAL_SET, payload: type});\nexport const setPoster = (posterImage : any) => ({type: POSTER_CREATE_SUCCESS, payload: {\n          posterImage\n     }});\n\nexport const setSize = (scale : number) => ({type: SCALE_SET, payload: {\n          scale\n     }});\n\nexport const setTitle = (title : string) => ({type: TITLE_SET, payload: {\n          title\n     }});\n\nexport const setImagePosition = (positionX : number, positionY : number) => ({\n     type: IMAGE_POSITION_SET,\n     payload: {\n          positionX,\n          positionY\n     }\n});\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Container, Header} from 'semantic-ui-react';\nimport {IMAGE_SET_POSITION} from '../../core/actions/poster';\nimport '../../styles/preview/vertical.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n     setImagePosition(x : number, y : number);\n}\n\ninterface State {\n     mouseMoving : boolean;\n     element : any;\n}\n\nclass Vertical extends Component < Props,\nState > {\n\n     state : State = {\n          mouseMoving: false,\n          element: ''\n     }\n\n     constructor(props : Props) {\n          super(props);\n          this.mouseDown = this\n               .mouseDown\n               .bind(this);\n          this.mouseUp = this\n               .mouseUp\n               .bind(this);\n          this.moving = this\n               .moving\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.state.element = document.getElementById('preview-vertical')as HTMLElement;\n          this\n               .state\n               .element\n               .addEventListener('mousedown', this.mouseDown);\n          this\n               .state\n               .element\n               .addEventListener('mouseup', this.mouseUp)\n     }\n\n     public moving(e) {\n          const {setImagePosition} = this.props;\n          setImagePosition(e.offsetX - this.state.element.offsetWidth / 2, e.offsetY - this.state.element.offsetHeight / 2);\n     }\n\n     public mouseUp() {\n          document.removeEventListener('mousemove', this.moving, false);\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n     }\n\n     public mouseDown(e : any) {\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n          document.addEventListener('mousemove', this.moving, false);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n          return (\n               <Container>\n                    <div className=\"preview-vertical\">\n                         <div\n                              id=\"preview-vertical\"\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%',\n                              backgroundPosition: -(poster.positionX) + '% ' + poster.positionY + 'px'\n                         }}>\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img src=\"pancan-logo.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <Header as={'h2'} className=\"title\" textAlign='center' content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </div>\n                    </div>\n\n                    <div className=\"final-vertical\" id=\"final-vertical\">\n                         <div\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%',\n                              backgroundPosition: -(poster.positionX) + '% ' + poster.positionY + 'px'\n                         }}>\n                              <div className=\"header\">\n\n                                   <div className=\"logo-holder\">\n                                        <div className=\"white-drop\"/>\n                                        <span>Moments Matter</span>\n                                        <img src=\"pancan-logo.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <Header as={'h2'} className=\"title\" textAlign='center' content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </div>\n                    </div>\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImagePosition: (x, y) => dispatch({\n          type: IMAGE_SET_POSITION,\n          payload: {\n               x: x,\n               y: y\n          }\n     })\n});\n\nexport default connect(mapProps, mapDispatch)(Vertical);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Grid, Header} from 'semantic-ui-react';\nimport {IMAGE_SET_POSITION} from '../../core/actions/poster';\nimport '../../styles/preview/horizontal.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n     setImagePosition(x : number, y : number);\n}\n\ninterface State {\n     mouseMoving : boolean;\n     element : any;\n}\n\nclass Horizontal extends Component < Props,\nState > {\n\n     state : State = {\n          mouseMoving: false,\n          element: ''\n     }\n\n     constructor(props : Props) {\n          super(props);\n          this.mouseDown = this\n               .mouseDown\n               .bind(this);\n          this.mouseUp = this\n               .mouseUp\n               .bind(this);\n          this.moving = this\n               .moving\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.state.element = document.getElementById('preview-horizontal')as HTMLElement;\n          this\n               .state\n               .element\n               .addEventListener('mousedown', this.mouseDown);\n          this\n               .state\n               .element\n               .addEventListener('mouseup', this.mouseUp)\n     }\n\n     public moving(e) {\n          const {setImagePosition} = this.props;\n          setImagePosition(e.offsetX - this.state.element.offsetWidth / 2, e.offsetY - this.state.element.offsetHeight / 2);\n     }\n\n     public mouseUp() {\n          document.removeEventListener('mousemove', this.moving, false);\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n     }\n\n     public mouseDown(e : any) {\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n          document.addEventListener('mousemove', this.moving, false);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n\n          return (\n               <div>\n                    <Grid columns={2} className=\"preview-horizontal\">\n                         <Grid.Column\n                              id=\"preview-horizontal\"\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%',\n                              backgroundPosition: -(poster.positionX) + '% ' + poster.positionY + 'px'\n                         }}/>\n                         <Grid.Column className=\"text-half\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img src=\"pancan-logo.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" textAlign='left' content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </Grid.Column>\n                    </Grid>\n                    <Grid columns={2} id=\"final-horizontal\">\n                         <Grid.Column\n                              className=\"image\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                                   ? 'cover'\n                                   : (poster.scale * 20) + 150 + '%',\n                              backgroundPosition: -(poster.positionX) + '% ' + poster.positionY + 'px'\n                         }}/>\n                         <Grid.Column className=\"body-text\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img src=\"pancan-logo.png\" alt=\"\"/>\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </Grid.Column>\n\n                    </Grid>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImagePosition: (x, y) => dispatch({\n          type: IMAGE_SET_POSITION,\n          payload: {\n               x: x,\n               y: y\n          }\n     })\n});\nexport default connect(mapProps, mapDispatch)(Horizontal);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {IMAGE_SET_POSITION} from '../../core/actions/poster';\nimport '../../styles/preview/square.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n     setImagePosition(x : number, y : number);\n}\n\ninterface State {\n     mouseMoving : boolean;\n     element : any;\n}\n\nclass Square extends Component < Props,\nState > {\n     state : State = {\n          mouseMoving: false,\n          element: ''\n     }\n\n     constructor(props : Props) {\n          super(props);\n          this.mouseDown = this\n               .mouseDown\n               .bind(this);\n          this.mouseUp = this\n               .mouseUp\n               .bind(this);\n          this.moving = this\n               .moving\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.state.element = document.getElementById('preview-square')as HTMLElement;\n          this\n               .state\n               .element\n               .addEventListener('mousedown', this.mouseDown);\n          this\n               .state\n               .element\n               .addEventListener('mouseup', this.mouseUp)\n     }\n\n     public moving(e) {\n          const {setImagePosition} = this.props;\n          setImagePosition(e.offsetX - this.state.element.offsetWidth / 2, e.offsetY - this.state.element.offsetHeight / 2);\n     }\n\n     public mouseUp() {\n          document.removeEventListener('mousemove', this.moving, false);\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n     }\n\n     public mouseDown(e : any) {\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n          document.addEventListener('mousemove', this.moving, false);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n          return (\n               <div\n                    id=\"preview-square\"\n                    className=\"preview-square poster-preview-holder image-half\"\n                    style={{\n                    backgroundImage: 'url( ' + imageBackground + ' )',\n                    backgroundSize: (poster.scale === '1' || poster.scale === 1)\n                         ? 'cover'\n                         : (poster.scale * 20) + 150 + '%',\n                    backgroundPosition: poster.positionX + 'px ' + poster.positionY + 'px'\n               }}>\n\n                    <p className=\"message-holder\">{poster.message}</p>\n                    <div className=\"footer\">\n                         <div className=\"logo-holder\">\n                              <span>Moments Matter</span>\n                              <img src=\"pancan-logo.png\" alt=\"\"/>\n                         </div>\n                    </div>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImagePosition: (x, y) => dispatch({\n          type: IMAGE_SET_POSITION,\n          payload: {\n               x: x,\n               y: y\n          }\n     })\n});\nexport default connect(mapProps, mapDispatch)(Square);","import React, {Component} from 'react';\nimport {Container} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport Vertical from './previews/vertical';\nimport Horizontal from './previews/horizontal';\nimport Square from './previews/square';\n\ntype Props = {\n     poster: any;\n}\nclass Preview extends Component < Props > {\n\n     constructor(props : Props) {\n          super(props);\n          this.renderPreview = this\n               .renderPreview\n               .bind(this);\n     }\n\n     public renderPreview() : any {\n          const {poster} = this.props;\n\n          switch (poster.layoutType) {\n               case 1:\n                    return <Square/>;\n               case 2:\n                    return <Horizontal/>;\n               case 3:\n                    return <Vertical/>;\n               default:\n                    return console.log('invalid layout type');\n          }\n     }\n\n     public render() {\n          return (\n               <Container className=\"preview-container\">\n                    <div id=\"final-poster\">\n                         {this.renderPreview()}\n                    </div>\n               </Container>\n          );\n     }\n}\n\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\n\nexport default connect(mapStateToProps, null)(Preview);","import React, {Component} from 'react';\nimport {Header, Grid, Placeholder, Segment} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_LAYOUT} from '../../core/actions/poster';\ntype Props = {\n     setLayout(layout : string);\n     poster: any;\n}\nclass One extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.layoutHandler = this\n               .layoutHandler\n               .bind(this);\n     }\n\n     public layoutHandler(layout : string) {\n          const {setLayout} = this.props;\n          setLayout(layout);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card paddingTop\">\n                    <Header as='h2' className=\"text-center poster-h2\">Choose your layout</Header>\n                    <Grid centered divided columns={3}>\n                         <Grid.Column\n                              computer={5}\n                              mobile={16}\n                              tablet={5}\n                              textAlign='center'\n                              className={(poster.type === 'poster message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector '}\n                              onClick={() => this.layoutHandler('poster message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center'>Square&nbsp;<br/>(Short message only)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={7}\n                              mobile={16}\n                              tablet={7}\n                              textAlign='center'\n                              className={(poster.type === 'poster message and image')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('poster message and image')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Header image>\n                                             <Placeholder.Line/>\n                                             <Placeholder.Line/>\n                                        </Placeholder.Header>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center'>Horizontal&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={4}\n                              mobile={16}\n                              tablet={4}\n                              textAlign='center'\n                              className={(poster.type === 'post message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('post message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center'>Vertical&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                    </Grid>\n               </div>\n          );\n     }\n}\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setLayout: (type : string) => dispatch({type: SET_LAYOUT, payload: type})\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(One);","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_IMAGE} from '../core/actions/poster';\n\ninterface IProps {\n     setImage(path : any);\n     poster : any;\n}\ninterface IState {\n     width : number;\n     height : number;\n     streaming : boolean;\n     video : any;\n     canvas : any;\n     startbutton : any;\n     ready : boolean;\n     stream : any;\n     isMobile : boolean;\n}\nclass TakePicture extends Component < IProps,\nIState > {\n     state : IState = {\n          width: 400,\n          height: 0,\n          streaming: false,\n          video: null,\n          canvas: null,\n          startbutton: null,\n          ready: false,\n          stream: null,\n          isMobile: false\n     }\n     constructor(props : IProps) {\n          super(props);\n          this.startup = this\n               .startup\n               .bind(this);\n          this.clearPhoto = this\n               .clearPhoto\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.makeBlob = this\n               .makeBlob\n               .bind(this);\n          this.stopStream = this\n               .stopStream\n               .bind(this);\n          this.isMobile = this\n               .isMobile\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.startup();\n          this.isMobile();\n     }\n\n     public isMobile() {\n          (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i))\n               ? this.setState({isMobile: true})\n               : this.setState({isMobile: false});\n     }\n\n     public async startup() {\n          await this.setState({\n               video: document.getElementById('video-stream'),\n               canvas: document.getElementById('image-canvas'),\n               startbutton: document.getElementById('takepicture')\n          });\n          this\n               .state\n               .video\n               .addEventListener('canplay', (event) => {\n                    if (!this.state.streaming) {\n                         this.state.height = this.state.video.videoHeight / (this.state.video.videoWidth / this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('height', this.state.height);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('height', this.state.height);\n                         this.state.streaming = true;\n                         this.forceUpdate();\n                    }\n               }, false);\n     }\n\n     public startStream() {\n          if (!this.state.ready) {\n               const container : any = document.getElementById('camera-stream');\n               container.style.display = 'block';\n               navigator\n                    .mediaDevices\n                    .getUserMedia({video: true, audio: false})\n                    .then((stream) => {\n                         this.state.video.srcObject = stream;\n                         this\n                              .state\n                              .video\n                              .play();\n                         this.setState({ready: true, stream: stream});\n                    })\n                    .catch((error) => console.log('cannot open stream: ', error));\n          } else {\n               const {setImage} = this.props;\n               const context = this\n                    .state\n                    .canvas\n                    .getContext('2d');\n               if (this.state.width && this.state.height) {\n                    this.state.canvas.width = this.state.width;\n                    this.state.canvas.height = this.state.height;\n                    context.drawImage(this.state.video, 0, 0, this.state.width, this.state.height);\n                    const data = this\n                         .state\n                         .canvas\n                         .toDataURL('image/jpeg');\n\n                    setImage(this.makeBlob(data));\n                    this.forceUpdate();\n                    this.stopStream();\n               }\n          }\n     }\n\n     public clearPhoto() {\n          const {setImage} = this.props;\n          setImage(null);\n     }\n\n     public stopStream() {\n          const container : any = document.getElementById('camera-stream');\n          container.style.display = 'none';\n          this\n               .state\n               .stream\n               .getTracks()\n               .forEach((track) => track.stop());\n          this.setState({ready: false, stream: null});\n     }\n\n     public makeBlob(data : any) {\n          let byteString : any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return URL.createObjectURL(new Blob([ia], {type: mimeString}));\n     }\n\n     public render() {\n          return (\n               <div>\n                    <div\n                         className=\"camera\"\n                         id=\"camera-stream\"\n                         style={{\n                         display: 'none'\n                    }}>\n                         <video id=\"video-stream\"/>\n                    </div>\n                    <Button disabled={this.state.isMobile} color=\"green\" onClick={this.startStream}>Take photo</Button>\n                    {(this.state.ready)\n                         ? <span>\n                                   <Button color=\"orange\" onClick={this.clearPhoto}>Clear photo</Button>\n                                   <Button color=\"red\" onClick={this.stopStream}>Cancel</Button>\n                              </span>\n                         : ''}\n\n                    <canvas\n                         id=\"image-canvas\"\n                         style={{\n                         display: 'none'\n                    }}/>\n               </div>\n\n          );\n     }\n}\n\nconst mapProps = (props) => ({poster: props.rootReducer});\nconst mapDispatch = (dispatch) => ({\n     setImage: (path : string) => dispatch({type: SET_IMAGE, path: path})\n});\nexport default connect(mapProps, mapDispatch)(TakePicture);","import React, {Component} from 'react';\nimport {Input, Container, Header, Form, TextArea} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_IMAGE, SET_LOGO, SET_MESSAGE, POSTER_SCALE, SET_TITLE} from '../core/actions/poster';\nimport TakePicture from './take.picture';\n\n/** Interfaces */\ntype Props = {\n     setImage(image : any, path : string);\n     setLogo(logo : any, path : string);\n     setMessage(message : string);\n     setSize(scale : number);\n     setTitle(title : string);\n     poster: any;\n}\n\ntype State = {\n     messageType: number;\n     error: {\n          message: string;\n          active: boolean\n     };\n     zoom: number;\n}\n\nclass GeneralCustom extends Component < Props,\nState > {\n     state : State = {\n          messageType: 1,\n          error: {\n               message: '',\n               active: false\n          },\n          zoom: 1\n     };\n\n     constructor(props : Props) {\n          super(props);\n          this.themeImage = this\n               .themeImage\n               .bind(this);\n          this.selectorHandler = this\n               .selectorHandler\n               .bind(this);\n          this.changeHandler = this\n               .changeHandler\n               .bind(this);\n          this.logoHandler = this\n               .logoHandler\n               .bind(this);\n          this.zoomChange = this\n               .zoomChange\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.titleChangeHandler = this\n               .titleChangeHandler\n               .bind(this);\n     }\n\n     public themeImage(e : any) {\n          const limit = 5 * 1048576; // 10MB\n          const {setImage} = this.props;\n          const file = e.target.files[0];\n          const path = URL.createObjectURL(file);\n          if (file.size > limit) {\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          setImage(file, path);\n     }\n\n     public selectorHandler(value : any) {\n          const {setMessage} = this.props;\n          setMessage(value);\n     }\n\n     public titleChangeHandler(e : any) {\n          const {setTitle} = this.props;\n          setTitle(e.target.value);\n     }\n\n     public changeHandler(e : any) {\n          const {setMessage} = this.props;\n          setMessage(e.target.value);\n     }\n\n     public logoHandler(e : any) {\n          const limit = 5 * 1048576; // 10MB\n          const {setLogo} = this.props;\n          const file = e.target.files[0];\n          const path = URL.createObjectURL(file);\n          if (file.size > limit) {\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          setLogo(file, path);\n     }\n\n     public zoomChange(e : any, {name, value} : any) {\n          const {setSize} = this.props;\n          this.setState({zoom: value});\n          setSize(value);\n     }\n\n     public startStream() {\n          console.log('will start camera streaming here');\n\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <Container textAlign=\"center\">\n                    <Header as='h2' className=\"text-center poster-h2\">Upload your image</Header>\n                    <Input\n                         icon='file'\n                         iconPosition='left'\n                         placeholder='Upload Image'\n                         accept=\"image/*\"\n                         type=\"file\"\n                         onChange={this.themeImage}/>\n                    <p>10 MB limit. Allowed types: gif png jpg jpeg.</p>\n                    <Header as='h2' className=\"text-center poster-h2\">Take a picture</Header>\n                    <TakePicture/>\n                    <Form.Input\n                         label={`Scale image: `}\n                         min={1}\n                         max={10}\n                         name='zoom'\n                         onChange={this.zoomChange}\n                         type='range'\n                         value={this.state.zoom}\n                         className=\"scale-controller\"/>\n                    <Header as='h2' textAlign=\"center\" className=\"text-center poster-h2\">Share Your Moment</Header>\n                    <Form>\n                         <Input\n                              className={(poster.layoutType === 1)\n                              ? \"hide\"\n                              : \"show paddingBottom\"}\n                              placeholder='Poster title'\n                              type=\"text\"\n                              onChange={this.titleChangeHandler}\n                              defaultValue={poster.title}/>\n                         <TextArea\n                              placeholder=\"Write 'I am and will' message here. eg. 'I am a student and I will spread the word'.\"\n                              maxLength=\"150\"\n                              onChange={this.changeHandler}\n                              defaultValue={poster.message}/>\n                         <p>Maximum 150 characters</p>\n                    </Form>\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImage: (image : any, path : string) => dispatch({type: SET_IMAGE, payload: image, path: path}),\n     setLogo: (logo : any, path : string) => dispatch({type: SET_LOGO, payload: logo, path: path}),\n     setMessage: (message : string) => dispatch({type: SET_MESSAGE, payload: message}),\n     setSize: (scale : number) => dispatch({type: POSTER_SCALE, payload: scale}),\n     setTitle: (title : string) => dispatch({type: SET_TITLE, payload: title})\n});\n\nexport default connect(mapProps, mapDispatch)(GeneralCustom);","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n// import {Button, Popup, Flag, Header, Grid} from 'semantic-ui-react';\nimport {SET_LANGUAGE} from '../../core/actions/poster';\nimport GeneralCustom from '../poster.all';\n\n// Will be used in the future for other campaign import PosterMessage from\n// '../poster.message'; import PosterImage from '../poster.image'; import\n// PostMessage from '../post.message'; import PostImage from '../post.image';\n\ntype Props = {\n     poster: any;\n     setLanguage(language : string);\n}\n\nclass Two extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.renderStep = this\n               .renderStep\n               .bind(this);\n          this.langHandler = this\n               .langHandler\n               .bind(this);\n     }\n\n     public langHandler(lan : string) {\n          const {setLanguage} = this.props;\n          setLanguage(lan);\n     }\n\n     public renderStep(type : number) {\n          return <GeneralCustom/>;\n          // This section will be used in the future for other campaigns; switch (type) {\n          //  case 1:           return <PosterMessage/>;      case 2:           return\n          // <PosterImage/>;      case 3:           return <PostMessage/>;      case 4:\n          // return <PostImage/>;      default:           return 'Error ocurred go back';\n          // }\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card\">\n                    {/* <Popup\n                         trigger={< Button circular icon = \"world\" content = {\n                         \"Language - \" + poster\n                              .language\n                              .toUpperCase()\n                    }\n                    className = \"lang-selector\" />}\n                         flowing\n                         hoverable>\n                         <Grid centered divided columns={3}>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'english')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('english')}>\n                                   <Header as='h4'>English</Header>\n                                   <Flag name='us' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'spanish')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('spanish')}>\n                                   <Header as='h4'>Spanish</Header>\n                                   <Flag name='spain' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'french')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('french')}>\n                                   <Header as='h4'>French</Header>\n                                   <Flag name='france' className=\"flag-selector\"/>\n                              </Grid.Column>\n                         </Grid>\n                    </Popup> */}\n                    {this.renderStep(poster.layoutType)}\n               </div>\n          );\n     }\n}\n\nconst mapStateTopProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch) => ({\n     setLanguage: (type : string) => dispatch({type: SET_LANGUAGE, payload: type})\n});\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(Two);","export class PopupWindow {\n     private screenLeft : number;\n     private screenTop : number;\n     private screenWidth : number;\n     private screenHeight : number;\n     private zoom : number;\n\n     constructor() {\n          this.screenLeft = window.screenLeft || window.screenX;\n          this.screenTop = window.screenTop || window.screenY;\n          this.screenWidth = window.innerWidth || (document.documentElement.clientWidth)\n               ? document.documentElement.clientWidth\n               : screen.width;\n          this.screenHeight = window.innerHeight || (document.documentElement.clientHeight)\n               ? document.documentElement.clientHeight\n               : screen.height;\n          this.zoom = this.screenWidth / window.screen.availWidth;\n          return this;\n     }\n\n     public getWindow(url : string, title : string, width : number, height : number) : void {\n          const left: number = (this.screenWidth - width) / 2 / this.zoom + this.screenLeft;\n          const top: number = (this.screenHeight - height) / 2 / this.zoom + this.screenTop;\n          const configString: string = 'scrollbars=yes, width=' + width / this.zoom + ', height=' + height / this.zoom + ', top=' + top + ', left=' + left;\n          const newWindow: any = window.open(url, title, configString);\n          if (window.focus) {\n               newWindow.focus();\n          }\n     }\n\n}\n","const apiURL : string = 'https://core.pancan.org/api/poster/email';\n\n/** Api calls */\nexport const uploadImage = (data : any) => (fetch(apiURL, {\n     method: 'post',\n     headers: new Headers({'Content-Type': 'application/x-www-form-urlencoded'}),\n     body: data\n}).then(data => data.json()).then(data => data).catch(error => error));\n","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {PopupWindow} from '../core/helpers/popup';\n\n/** interface */\ninterface State {\n     facebook : string;\n     twitter : string;\n     instagram : string;\n}\n\nclass SocialButtons extends Component < {},\nState > {\n\n     state: State = {\n          facebook: 'https://www.facebook.com/sharer/sharer.php?u=https://www.pancan.org/get-involved' +\n                    '/moments-matter/',\n          twitter: 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('#MomentsMatter. Join me & @PanCAN in sharing our stories & raising #pancreaticca' +\n                    'ncer awareness so more patients can have more moments with their loved ones. htt' +\n                    'p://pcan.at/MnM'),\n          instagram: 'https://www.instagram.com/pancan/'\n     };\n\n     constructor(props : any) {\n          super(props);\n          this.socialHandler = this\n               .socialHandler\n               .bind(this);\n     }\n\n     public socialHandler(url : string) {\n          new PopupWindow().getWindow(url, 'Share Poster Creator', 530, 400);\n     }\n\n     public render() {\n          return (\n               <div className=\"social-button-container\">\n                    <Button\n                         circular\n                         color='facebook'\n                         icon='facebook'\n                         onClick={() => this.socialHandler(this.state.facebook)}/>\n                    <Button\n                         circular\n                         color='twitter'\n                         icon='twitter'\n                         onClick={() => this.socialHandler(this.state.twitter)}/>\n                    <Button\n                         circular\n                         color='instagram'\n                         icon='instagram'\n                         onClick={() => this.socialHandler(this.state.instagram)}/>\n               </div>\n          );\n     }\n}\n\nexport default SocialButtons;","import React, {Component} from 'react';\nimport {\n     Icon,\n     Container,\n     Grid,\n     Header,\n     Button,\n     Modal,\n     Form,\n     Input\n} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport html2canvas from 'html2canvas';\nimport jsPDF from 'jspdf'\nimport {POSTER_CREATE} from '../../core/actions/poster';\nimport {PopupWindow} from '../../core/helpers/popup';\nimport {uploadImage} from '../../core/services/api';\nimport SocialButtons from '../social.buttons';\n\ninterface Props {\n     poster : any;\n     setPoster(data : any);\n}\ninterface IUser {\n     [key : string] : string\n}\ninterface State {\n     isUploaded : boolean;\n     posterId : number;\n     emailInfo : boolean;\n     user : IUser;\n     error : any;\n     elementIds : any;\n}\n\nclass Three extends Component < Props,\nState > {\n     state : State = {\n          isUploaded: false,\n          posterId: -1,\n          emailInfo: false,\n          user: {\n               fname: '',\n               lname: '',\n               email: ''\n          },\n          error: {\n               error: false,\n               det: ''\n          },\n          elementIds: {\n               1: 'preview-square',\n               2: 'final-horizontal',\n               3: 'final-vertical'\n          }\n     };\n     constructor(props : Props) {\n          super(props);\n          this.controllers = this\n               .controllers\n               .bind(this);\n          this.downloadPosterImage = this\n               .downloadPosterImage\n               .bind(this);\n          this.shareTwitter = this\n               .shareTwitter\n               .bind(this);\n          this.shareFacebook = this\n               .shareFacebook\n               .bind(this);\n          this.dataURItoBlob = this\n               .dataURItoBlob\n               .bind(this);\n          this.base64ToBlob = this\n               .base64ToBlob\n               .bind(this);\n          this.emailModal = this\n               .emailModal\n               .bind(this);\n          this.formChange = this\n               .formChange\n               .bind(this);\n          this.error = this\n               .error\n               .bind(this);\n          this.sendToEmail = this\n               .sendToEmail\n               .bind(this);\n          this.checkErrors = this\n               .checkErrors\n               .bind(this);\n     }\n\n     public downloadPosterImage(type : string) {\n          const {poster} = this.props;\n          const {elementIds} = this.state;\n          const posterElement : any = document.getElementById(elementIds[poster.layoutType]);\n          html2canvas(posterElement).then((canvas : any) => {\n               const image = canvas.toDataURL('image/jpeg', 1.0);\n               if (type === 'pdf') {\n                    const doc = new jsPDF('p', 'mm');\n                    doc.addImage(image, 'JPEG', 10, 10);\n                    doc.save('poster.pdf');\n                    return;\n               }\n\n               const element = document.createElement('a');\n               element.href = image;\n               element.download = 'poster.jpeg';\n               element.click();\n          });\n     }\n\n     public async sendToEmail() {\n          const {poster} = this.props;\n          const {elementIds} = this.state;\n          const posterElement : any = document.getElementById(elementIds[poster.layoutType]);\n          const {isUploaded} = this.state;\n\n          if (!this.checkErrors()) {\n               await\n               html2canvas(posterElement).then(async(canvas : any) => {\n                    const image = canvas.toDataURL('image/jpeg', 1.0);\n                    const data : any = {\n                         key: '5994766c58613900370b6153',\n                         image: image,\n                         lname: this.state.user.lname,\n                         email: this.state.user.email,\n                         fname: this.state.user.fname\n                    };\n                    const searchParams = Object\n                         .keys(data)\n                         .map((key) => {\n                              return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n                         })\n                         .join('&');\n\n                    if (!isUploaded) {\n                         const response : any = await uploadImage(searchParams);\n                         this.setState({\n                              isUploaded: true,\n                              posterId: response.id,\n                              error: {\n                                   error: false\n                              },\n                              emailInfo: false\n                         });\n                    }\n               });\n          }\n     }\n\n     public formChange(e : any, {name, value} : any) {\n          const {fname, lname, email} = this.state.user;\n          switch (name) {\n               case 'lname':\n                    this.setState({\n                         user: {\n                              lname: value,\n                              fname: fname,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'fname':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: value,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'email':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: fname,\n                              email: value\n                         }\n                    });\n                    break;\n               default:\n                    console.log(this.state.user);\n          }\n     }\n\n     public error() {\n          return (\n               <b style={{\n                    color: 'red'\n               }}>Error! make sure to have vaild form values.</b>\n          );\n     }\n\n     public checkErrors() : boolean {\n          const {lname, fname, email} = this.state.user;\n          if (lname !== '' && fname !== '' && email !== '') {\n               return false;\n          };\n          this.setState({\n               error: {\n                    error: true\n               }\n          });\n          return true;\n     }\n\n     public emailModal() {\n          const {emailInfo, isUploaded} = this.state;\n          return (\n               <Modal\n                    open={emailInfo}\n                    trigger={< Button color = 'purple' disabled = {\n                    isUploaded\n                         ? true\n                         : false\n               }\n               content = {\n                    isUploaded\n                         ? 'Email sent!'\n                         : 'Send via Email'\n               }\n               onClick = {\n                    () => this.setState((prevState) => ({\n                         emailInfo: !prevState.emailInfo\n                    }))\n               } />}\n                    basic\n                    size='small'>\n                    <Header icon='send' content='Send me my poster'/>\n                    <Modal.Content>\n                         <strong className=\"over-image\">\n                              Your email information:\n                         </strong>\n                         <Form>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>First name:\n                                   </label>\n                                   <Input\n                                        placeholder='First Name'\n                                        name='fname'\n                                        type=\"text\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>Last name:\n                                   </label>\n                                   <Input\n                                        placeholder='Last Name'\n                                        name='lname'\n                                        type=\"text\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>Email:\n                                   </label>\n                                   <Input\n                                        name='email'\n                                        placeholder='Email address'\n                                        type=\"email\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                         </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                         <Button\n                              color='red'\n                              inverted\n                              onClick={() => this.setState((prevState) => ({\n                              emailInfo: !prevState.emailInfo\n                         }))}>\n                              <Icon name='remove'/>\n                              No\n                         </Button>\n                         <Button color='green' inverted onClick={this.sendToEmail}>\n                              <Icon name='mail'/>\n                              Send\n                         </Button>\n                         {(this.state.error.error)\n                              ? this.error()\n                              : ''}\n                    </Modal.Actions>\n               </Modal>\n          )\n     }\n\n     public shareTwitter() {\n          const poster : any = document.getElementById('final-poster');\n          const {isUploaded, posterId} = this.state;\n          html2canvas(poster, {scale: 2}).then(async(canvas : any) => {\n               const image = canvas.toDataURL('image/png');\n               const data : any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               }\n               let url : string;\n               if (!isUploaded) {\n                    const response : any = await uploadImage(data);\n                    this.setState({isUploaded: true, posterId: response.id});\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                              'on.org/poster/' + response.id);\n               } else {\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                              'on.org/poster/' + posterId);\n               }\n\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 400);\n          });\n\n     }\n\n     public shareFacebook() {\n          const poster : any = document.getElementById('final-poster');\n          const {isUploaded, posterId} = this.state;\n          html2canvas(poster, {scale: 2}).then(async(canvas : any) => {\n               const image = canvas.toDataURL('image/png');\n               let url : string;\n               const data : any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               };\n               if (!isUploaded) {\n                    const response : any = await uploadImage(data);\n                    this.setState({isUploaded: true, posterId: response.id});\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + response.id);\n               } else {\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + posterId);\n               }\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 200);\n          });\n     }\n\n     public dataURItoBlob(data : string) : any {\n          const byteString = atob(data.split(',')[1]);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ab], {type: 'image/png'});\n     }\n\n     public base64ToBlob(data : any) {\n          let byteString : any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ia], {type: mimeString});\n\n     }\n     public controllers(type : number) {\n          switch (type) {\n               case 1:\n               case 2:\n               case 3:\n               case 4:\n                    return <Grid container columns={1} stackable>\n                         <Grid.Column textAlign=\"center\">\n                              <Button\n                                   content='Download JPG'\n                                   color='purple'\n                                   onClick={() => this.downloadPosterImage('image')}/>\n                         </Grid.Column>\n                         {/* <Grid.Column textAlign=\"center\">\n                              <Button content='Download PDF' onClick={() => this.downloadPosterImage('pdf')}/>\n                         </Grid.Column> */}\n                         {/* <Grid.Column textAlign=\"center\">\n                              {this.emailModal()}\n                         </Grid.Column> */}\n                    </Grid>;\n               default:\n                    return <div/>\n          }\n     }\n     public render() {\n          const {poster} = this.props;\n          const title = '#MomentsMatter'; //(poster.layoutType === 3 || poster.layoutType === 4)\n          //      ? 'Share your poster'      : 'Download image';\n          return (\n               <Container className=\"step paddingTop\">\n                    <Header as='h2' content={title} textAlign=\"center\" className=\"poster-h2\"/>\n                    <p\n                         style={{\n                         textAlign: 'center'\n                    }}\n                         className=\"paddingBottom over-solid leadin-copy\">Share\n                         your Moment with the world by downloading your image and sharing it to social\n                         media with #MomentsMatter and tagging us @PanCAN.</p>\n\n                    <SocialButtons/>\n                    <br/>{this.controllers(poster.layoutType)}\n               </Container>\n          );\n     }\n}\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setPoster: (data : any) => dispatch({type: POSTER_CREATE, payload: data})\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Three);","import React, {Component} from 'react';\nimport {Container, Step, Icon, Button, Image} from 'semantic-ui-react';\nimport One from './steps/one';\nimport Two from './steps/two';\nimport Three from './steps/three';\nimport {connect} from 'react-redux';\nimport {SET_STEP} from '../core/actions/poster';\ntype Props = {\n     setStep(step : number);\n     poster: any\n}\nclass Nav extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.stepHandler = this\n               .stepHandler\n               .bind(this);\n          this.stepRender = this\n               .stepRender\n               .bind(this);\n     }\n\n     public stepHandler(step : number) {\n          const {setStep} = this.props;\n          setStep(step);\n     }\n\n     public stepRender() : any {\n          const {poster} = this.props;\n          const {step} = poster;\n\n          switch (step) {\n               case 1:\n                    return <One/>;\n               case 2:\n                    return <Two/>;\n               case 3:\n                    return <Three/>;\n          }\n     }\n\n     public render() {\n          const {poster} = this.props;\n\n          return (\n               <div className=\"controller-container\">\n                    <Container>\n                         <Step.Group fluid>\n                              <Step\n                                   active={(poster.step === 1)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(1)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-01.png'\n                                        size='mini'/>\n                                   <Step.Content>\n                                        <Step.Title>Start</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 2)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(2)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-02.png'\n                                        size='mini'/>\n                                   <Step.Content>\n                                        <Step.Title>Customize</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 3)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(3)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-03.png'\n                                        size='mini'/>\n                                   <Step.Content>\n                                        <Step.Title>Save & Share</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                         </Step.Group>\n                         {this.stepRender()}\n                         <Button\n                              onClick={() => this.stepHandler(poster.step - 1)}\n                              className={(poster.step > 1)\n                              ? 'back-button show'\n                              : ' hide'}>\n                              <Icon name='arrow left'/>&nbsp;Back\n                         </Button>\n                         <Button\n                              className={(poster.step < 3)\n                              ? 'next-button show'\n                              : ' hide'}\n                              onClick={() => this.stepHandler(poster.step + 1)}>\n                              Next&nbsp;<Icon name='arrow right'/>\n                         </Button>\n                    </Container>\n               </div>\n          );\n     }\n}\n\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setStep: (step : number): void => dispatch({type: SET_STEP, payload: step})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import App from './app';\nexport default(App);","import React, {Component} from 'react';\nimport Preview from './preview';\nimport Nav from './navigation';\nimport {Grid} from 'semantic-ui-react';\n\nexport class App extends Component {\n     render() {\n          return (\n               <Grid container columns='equal' divided stackable>\n                    <Grid.Column mobile={16} tablet={16} computer={16} largeScreen={10}>\n                         <Nav/>\n                    </Grid.Column>\n                    <Grid.Column\n                         mobile={16}\n                         tablet={16}\n                         computer={16}\n                         largeScreen={6}\n                         className=\"purple-gradient-bck\"\n                         style={{\n                         paddingTop: 25,\n                         display: 'flex',\n                         alignItems: 'center',\n                         minHeight: '100%'\n                    }}>\n                         <Preview/>\n                    </Grid.Column>\n               </Grid>\n          );\n     }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** Imports */\nimport {combineReducers} from 'redux';\nimport {IStateStore} from '../models/state';\nimport {posterReducer} from './poster';\n\nexport const rootReducer = combineReducers < IStateStore > ({poster: posterReducer});\n","/** Imports */\nimport {\n     LAYOUT_SET,\n     STEP_SET,\n     LANGUAGE_SET,\n     THEME_SET,\n     MESSAGE_SET,\n     LOGO_SET,\n     IMAGE_SET,\n     POSTER_CREATE_SUCCESS,\n     SCALE_SET,\n     TITLE_SET,\n     IMAGE_POSITION_SET\n} from '../actions/poster';\nimport {IPoster} from '../models/poster';\n\nconst initPoster = () : IPoster => ({\n     step: 1,\n     type: 'poster message only',\n     layoutType: 1,\n     language: 'english',\n     message: '',\n     createdDate: Date(),\n     shareNetwork: '',\n     theme: 'pancan-purple',\n     image: '',\n     logo: 'https://www.pancan.org//wp-content/uploads/2018/05/pancan-logo.png',\n     posterImage: {},\n     scale: 1,\n     title: '',\n     positionX: 0,\n     positionY: 0\n});\n\nexport const posterReducer = (state = initPoster(), action : any) => {\n     switch (action.type) {\n          case LAYOUT_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case STEP_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case LANGUAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case THEME_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case MESSAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case LOGO_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case IMAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case POSTER_CREATE_SUCCESS:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case SCALE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case TITLE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case IMAGE_POSITION_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          default:\n               return state;\n     }\n}","/** Import dependencies */\nimport {all, put, takeEvery} from 'redux-saga/effects';\nimport {\n     SET_LAYOUT,\n     SET_LANGUAGE,\n     SET_STEP,\n     SET_THEME,\n     SET_MESSAGE,\n     SET_IMAGE,\n     SET_LOGO,\n     POSTER_CREATE,\n     POSTER_SCALE,\n     SET_TITLE,\n     IMAGE_SET_POSITION,\n     setLayout,\n     setLanguage,\n     setStep,\n     setTheme,\n     setMessage,\n     setImage,\n     setLogo,\n     setPoster,\n     setSize,\n     setTitle,\n     setImagePosition\n\n} from '../actions/poster';\n\n/** Watcher */\nfunction * eventWatcher() {\n     yield takeEvery(SET_LAYOUT, layout);\n     yield takeEvery(SET_LANGUAGE, language);\n     yield takeEvery(SET_STEP, stepper);\n     yield takeEvery(SET_THEME, theme);\n     yield takeEvery(SET_MESSAGE, message);\n     yield takeEvery(SET_IMAGE, image);\n     yield takeEvery(SET_LOGO, logo);\n     yield takeEvery(POSTER_CREATE, poster);\n     yield takeEvery(POSTER_SCALE, scalePoster);\n     yield takeEvery(SET_TITLE, titleSet);\n     yield takeEvery(IMAGE_SET_POSITION, imagePosition);\n}\n\n/** set layout */\nfunction * layout(type : any) {\n     let layout : any;\n     switch (type.payload) {\n          case 'poster message only':\n               layout = {\n                    type: 'poster message only',\n                    layoutType: 1\n               }\n               break;\n          case 'poster message and image':\n               layout = {\n                    type: 'poster message and image',\n                    layoutType: 2\n               }\n               break;\n          case 'post message only':\n               layout = {\n                    type: 'post message only',\n                    layoutType: 3\n               }\n               break;\n          case 'post image':\n               layout = {\n                    type: 'post image',\n                    layoutType: 4\n               }\n               break;\n     }\n     yield put(setLayout(layout));\n}\n\n/** set language */\nfunction * language(type : any) {\n     yield put(setLanguage(type.payload));\n}\n\n/** update step */\nfunction * stepper(step : any) {\n     yield put(setStep(step.payload));\n}\n\n/** set theme */\nfunction * theme(theme : any) {\n     yield put(setTheme(theme.payload));\n}\n\n/** set message */\nfunction * message(message : any) {\n     yield put(setMessage(message.payload));\n}\n\n/** set image */\nfunction * image(image : any) {\n     yield put(setImage(image.path));\n}\n\n/** set logo */\nfunction * logo(logo : any) {\n     yield put(setLogo(logo.path));\n}\n\n/** poster creation  */\nfunction * poster(poster : any) {\n     yield put(setPoster(poster.payload));\n}\n\n/** poster scale */\nfunction * scalePoster(scale : any) {\n     yield put(setSize(scale.payload));\n}\n\n/** poster title */\nfunction * titleSet(title : any) {\n     yield put(setTitle(title.payload));\n}\n\n/** image position */\nfunction * imagePosition(data : any) {\n     yield put(setImagePosition(data.payload.x, data.payload.y));\n}\n\n/** Root saga */\nexport function * rootSaga() {\n     const sagas = [eventWatcher()];\n     yield all(sagas);\n}","import {composeWithDevTools} from 'redux-devtools-extension';\nimport {applyMiddleware, createStore, Store, combineReducers} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {rootReducer} from '../reducers/main';\nimport {rootSaga} from '../sagas/main';\n\nconst composeEnhancers = composeWithDevTools({});\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\nconst combine = combineReducers({rootReducer});\n\nexport const store : Store < any > = createStore(combine, enhancer);\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './components/app.container';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {store} from './core/stores/main';\nimport './styles/main.scss';\n\nReactDOM.render(\n     <Provider store={store}>\n     <AppContainer/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}