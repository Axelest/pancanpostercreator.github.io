{"version":3,"sources":["core/actions/poster.ts","components/previews/vertical.tsx","components/previews/horizontal.tsx","components/previews/square.tsx","components/preview.tsx","components/steps/one.tsx","components/take.picture.tsx","components/poster.all.tsx","core/helpers/image.ts","components/steps/two.tsx","core/helpers/popup.ts","core/services/api.ts","components/social.buttons.tsx","components/steps/three.tsx","components/navigation.tsx","components/app.container.tsx","components/app.tsx","serviceWorker.ts","core/reducers/main.ts","core/reducers/poster.ts","core/sagas/main.ts","core/stores/main.ts","index.tsx"],"names":["SET_LAYOUT","SET_LANGUAGE","SET_IMAGE","SET_LOGO","SET_MESSAGE","SET_TITLE","SET_STEP","SET_THEME","POSTER_CREATE","POSTER_SCALE","IMAGE_SET_POSITION","setLayout","layout","type","payload","setLanguage","language","setStep","step","setTheme","theme","setImage","image","setLogo","logo","setMessage","message","setPoster","posterImage","setSize","scale","setTitle","title","Vertical","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mouseMoving","element","moving","bind","assertThisInitialized","_this2","document","getElementById","addEventListener","removeEventListener","e","setState","setImagePosition","touch","changedTouches","clientX","getBoundingClientRect","left","offsetWidth","clientY","top","offsetHeight","offsetX","offsetY","poster","imageBackground","react_default","a","createElement","Container","className","id","style","backgroundImage","backgroundSize","backgroundPosition","positionX","positionY","src","alt","Header","as","textAlign","content","Component","connect","rootReducer","dispatch","x","y","Horizontal","Grid","columns","Column","Square","Preview","renderPreview","layoutType","previews_square","previews_horizontal","previews_vertical","console","log","One","layoutHandler","centered","computer","mobile","tablet","onClick","Segment","raised","Placeholder","Paragraph","Line","length","TakePicture","width","height","streaming","video","canvas","startbutton","ready","stream","isMobile","startup","clearPhoto","startStream","makeBlob","stopStream","navigator","userAgent","match","event","videoHeight","videoWidth","setAttribute","forceUpdate","_this3","context","getContext","drawImage","data","toDataURL","display","mediaDevices","getUserMedia","audio","then","srcObject","play","catch","error","getTracks","forEach","track","stop","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","i","charCodeAt","URL","createObjectURL","Blob","Button","disabled","color","path","GeneralCustom","messageType","active","zoom","themeImage","selectorHandler","changeHandler","logoHandler","zoomChange","titleChangeHandler","findImageOrientation","orientation","file","target","files","size","originalFile","callback","reader","FileReader","ctx","Image","onload","view","DataView","result","getUint16","byteLength","offset","marker","getUint32","little","tags","_ret","save","translate","rotate","Math","PI","restore","v","readAsArrayBuffer","getOrientation","value","_ref","name","Input","icon","iconPosition","placeholder","accept","onChange","take_picture","Form","label","min","max","defaultValue","maxLength","TextArea","Two","renderStep","langHandler","lan","poster_all","PopupWindow","screenLeft","screenTop","screenWidth","screenHeight","window","screenX","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","availWidth","createClass","key","url","configString","newWindow","open","focus","uploadImage","fetch","method","headers","Headers","Content-Type","body","json","SocialButtons","facebook","twitter","encodeURIComponent","instagram","socialHandler","getWindow","circular","Three","isUploaded","posterId","emailInfo","user","fname","lname","email","det","elementIds","1","2","3","controllers","downloadPosterImage","shareTwitter","shareFacebook","dataURItoBlob","base64ToBlob","emailModal","formChange","sendToEmail","checkErrors","posterElement","html2canvas","toBlob","blob","href","download","click","asyncToGenerator","regenerator_default","mark","_callee","searchParams","response","wrap","_context","prev","next","keys","map","join","sent","_x","apply","arguments","_ref2","_this$state$user","_this$state$user2","_this$state","Modal","trigger","prevState","basic","Content","Field","required","Actions","inverted","Icon","_this4","_this$state2","_ref3","_callee3","_context3","_x2","_this5","_this$state3","_ref4","_callee4","_context4","_x3","ab","ArrayBuffer","_this6","container","stackable","social_buttons","Nav","HTMLElement","stepHandler","stepRender","scrollTop","one","two","three","Step","Group","fluid","unstackable","Image_Image","Title","App","_Component","inherits","divided","largeScreen","navigation","paddingTop","alignItems","minHeight","preview","Boolean","location","hostname","combineReducers","undefined","createdDate","Date","shareNetwork","action","objectSpread","eventWatcher","stepper","scalePoster","titleSet","imagePosition","rootSaga","takeEvery","_marked","_context2","t0","abrupt","put","_marked2","_marked3","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","_marked9","_context10","_marked10","_context11","_marked11","_context12","_marked12","sagas","_context13","all","_marked13","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","applyMiddleware","combine","store","createStore","run","ReactDOM","render","es","app_container","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.721e923d.chunk.js","sourcesContent":["/** Action Types */\n/** LAYOUT */\nexport const SET_LAYOUT = 'SET_LAYOUT';\nexport const LAYOUT_SET = 'LAYOUT_SET';\n\n/** LANGUAGE */\nexport const SET_LANGUAGE = 'SET_LANGUAGE';\nexport const LANGUAGE_SET = 'LANGUAGE_SET';\n\n/** IMAGE */\nexport const SET_IMAGE = 'SET_IMAGE';\nexport const IMAGE_SET = 'IMAGE_SET';\n\n/** LOGO */\nexport const SET_LOGO = 'SET_LOGO';\nexport const LOGO_SET = 'LOGO_SET';\n\n/** MESSAGE */\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const MESSAGE_SET = 'MESSAGE_SET';\n\n/** TITLE */\nexport const SET_TITLE = 'SET_TITLE';\nexport const TITLE_SET = 'TITLE_SET';\n\n/** SOCIAL */\nexport const SET_SOCIAL = 'SET_SOCIAL';\nexport const SOCIAL_SET = 'SOCIAL_SET';\n\n/** STEP */\nexport const SET_STEP = 'SET_STEP';\nexport const STEP_SET = 'STEP_SET';\n\n/** THEME */\nexport const SET_THEME = 'SET_THEME';\nexport const THEME_SET = 'THEME_SET';\n\n/** Final Poster */\nexport const POSTER_CREATE = 'POSTER_CREATE';\nexport const POSTER_CREATE_SUCCESS = 'POSTER_CREATE_SUCCESS';\n\n/** Scale poster */\nexport const POSTER_SCALE = 'POSTER_SCALE';\nexport const SCALE_SET = 'SCALE_SET';\n\n/** Drag Image */\nexport const IMAGE_SET_POSITION = 'IMAGE_SET_POSITION';\nexport const IMAGE_POSITION_SET = 'IMAGE_POSITION_SET';\n\n/** Action Handlers */\nexport const setLayout = (layout : any) => ({type: LAYOUT_SET, payload: layout});\nexport const setLanguage = (language : string) => ({type: LANGUAGE_SET, payload: {\n          language\n     }});\nexport const setStep = (step : number) => ({type: STEP_SET, payload: {\n          step\n     }});\nexport const setTheme = (theme : string) => ({type: THEME_SET, payload: {\n          theme\n     }})\nexport const setImage = (image : string) => ({type: IMAGE_SET, payload: {\n          image\n     }});\nexport const setLogo = (logo : string) => ({type: LOGO_SET, payload: {\n          logo\n     }});\nexport const setMessage = (message : string) => ({type: MESSAGE_SET, payload: {\n          message\n     }});\nexport const setSocial = (type : string) => ({type: SOCIAL_SET, payload: type});\nexport const setPoster = (posterImage : any) => ({type: POSTER_CREATE_SUCCESS, payload: {\n          posterImage\n     }});\n\nexport const setSize = (scale : number) => ({type: SCALE_SET, payload: {\n          scale\n     }});\n\nexport const setTitle = (title : string) => ({type: TITLE_SET, payload: {\n          title\n     }});\n\nexport const setImagePosition = (positionX : number, positionY : number) => ({\n     type: IMAGE_POSITION_SET,\n     payload: {\n          positionX,\n          positionY\n     }\n});\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Container, Header} from 'semantic-ui-react';\nimport {IMAGE_SET_POSITION} from '../../core/actions/poster';\nimport '../../styles/preview/vertical.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n     setImagePosition(x : number, y : number);\n}\n\ninterface State {\n     mouseMoving : boolean;\n     element : any;\n}\n\nclass Vertical extends Component < Props,\nState > {\n     state : State = {\n          mouseMoving: false,\n          element: ''\n     };\n\n     constructor(props : Props) {\n          super(props);\n          this.moving = this\n               .moving\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.state.element = document.getElementById('preview-vertical')as HTMLElement;\n          this\n               .state\n               .element\n               .addEventListener('mousedown', () => this.state.element.addEventListener('mousemove', this.moving, false));\n          this\n               .state\n               .element\n               .addEventListener('mouseup', () => this.state.element.removeEventListener('mousemove', this.moving, false));\n          this\n               .state\n               .element\n               .addEventListener('touchmove', this.moving);\n     }\n\n     componentWillUnmount() {\n          this\n               .state\n               .element\n               .removeEventListener('mousedown', this.moving, false);\n          this\n               .state\n               .element\n               .removeEventListener('mouseup', this.moving, false);\n\n          this\n               .state\n               .element\n               .removeEventListener('touchmove', this.moving, false);\n     }\n\n     public moving(e) {\n          // set state\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n\n          const {setImagePosition} = this.props;\n          if (e.type === 'touchmove') {\n               const touch = e.changedTouches[0];\n               const X : number = touch.clientX - this\n                    .state\n                    .element\n                    .getBoundingClientRect()\n                    .left - this.state.element.offsetWidth / 2;\n               const Y : number = touch.clientY - this\n                    .state\n                    .element\n                    .getBoundingClientRect()\n                    .top - this.state.element.offsetHeight / 2;\n               return setImagePosition(X, Y);\n          }\n          const X : number = e.offsetX - this.state.element.offsetWidth / 2;\n          const Y : number = e.offsetY - this.state.element.offsetHeight / 2;\n          return setImagePosition(X, Y);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n          return (\n               <Container>\n                    <div className=\"preview-vertical\">\n                         <div\n                              id=\"preview-vertical\"\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: poster.scale === '1' || poster.scale === 1\n                                   ? 'cover'\n                                   : poster.scale * 20 + 150 + '%',\n                              backgroundPosition: poster.positionX === 0 && poster.positionY === 0\n                                   ? 'center'\n                                   : -poster.positionX + '% ' + poster.positionY + 'px'\n                         }}>\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img\n                                             src=\"https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/pancan-logo.png\"\n                                             alt=\"\"/>\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <Header as={'h2'} className=\"title\" textAlign=\"center\" content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </div>\n                    </div>\n\n                    <div className=\"final-vertical\" id=\"final-vertical\">\n                         <div\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: poster.scale === '1' || poster.scale === 1\n                                   ? 'cover'\n                                   : poster.scale * 20 + 150 + '%',\n                              backgroundPosition: poster.positionX === 0 && poster.positionY === 0\n                                   ? 'center'\n                                   : -poster.positionX + '% ' + poster.positionY + 'px'\n                         }}>\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <div className=\"white-drop\"/>\n                                        <span>Moments Matter</span>\n                                        <img\n                                             src=\"https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/pancan-logo.png\"\n                                             alt=\"\"/>\n                                   </div>\n                              </div>\n                         </div>\n                         <div className=\"body-copy\">\n                              <h2 className=\"title\">{poster.title}</h2>\n                              <p className=\"content\">{poster.message}</p>\n                         </div>\n                    </div>\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImagePosition: (x, y) => dispatch({\n          type: IMAGE_SET_POSITION,\n          payload: {\n               x: x,\n               y: y\n          }\n     })\n});\n\nexport default connect(mapProps, mapDispatch)(Vertical);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {Grid, Header} from 'semantic-ui-react';\nimport {IMAGE_SET_POSITION} from '../../core/actions/poster';\nimport '../../styles/preview/horizontal.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n     setImagePosition(x : number, y : number);\n}\n\ninterface State {\n     mouseMoving : boolean;\n     element : any;\n}\n\nclass Horizontal extends Component < Props,\nState > {\n     state : State = {\n          mouseMoving: false,\n          element: ''\n     };\n\n     constructor(props : Props) {\n          super(props);\n          this.moving = this\n               .moving\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.state.element = document.getElementById('preview-horizontal')as HTMLElement;\n          this\n               .state\n               .element\n               .addEventListener('mousedown', () => this.state.element.addEventListener('mousemove', this.moving, false));\n          this\n               .state\n               .element\n               .addEventListener('mouseup', () => this.state.element.removeEventListener('mousemove', this.moving, false));\n          this\n               .state\n               .element\n               .addEventListener('touchmove', this.moving);\n     }\n\n     componentWillUnmount() {\n          this\n               .state\n               .element\n               .removeEventListener('mousedown', this.moving, false);\n          this\n               .state\n               .element\n               .removeEventListener('mouseup', this.moving, false);\n\n          this\n               .state\n               .element\n               .removeEventListener('touchmove', this.moving, false);\n     }\n\n     public moving(e) {\n          // set state\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n\n          const {setImagePosition} = this.props;\n          if (e.type === 'touchmove') {\n               const touch = e.changedTouches[0];\n               const X : number = touch.clientX - this\n                    .state\n                    .element\n                    .getBoundingClientRect()\n                    .left - this.state.element.offsetWidth / 2;\n               const Y : number = touch.clientY - this\n                    .state\n                    .element\n                    .getBoundingClientRect()\n                    .top - this.state.element.offsetHeight / 2;\n               return setImagePosition(X, Y);\n          }\n          const X : number = e.offsetX - this.state.element.offsetWidth / 2;\n          const Y : number = e.offsetY - this.state.element.offsetHeight / 2;\n          return setImagePosition(X, Y);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n\n          return (\n               <div>\n                    <Grid columns={2} className=\"preview-horizontal\">\n                         <Grid.Column\n                              id=\"preview-horizontal\"\n                              className=\"image-half\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: poster.scale === '1' || poster.scale === 1\n                                   ? 'cover'\n                                   : poster.scale * 20 + 150 + '%',\n                              backgroundPosition: poster.positionX === 0 && poster.positionY === 0\n                                   ? 'center'\n                                   : -poster.positionX + '% ' + poster.positionY + 'px'\n                         }}/>\n                         <Grid.Column className=\"text-half\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img\n                                             src=\"https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/pancan-logo.png\"\n                                             alt=\"\"/>\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" textAlign=\"left\" content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </Grid.Column>\n                    </Grid>\n                    <Grid columns={2} id=\"final-horizontal\">\n                         <Grid.Column\n                              className=\"image\"\n                              style={{\n                              backgroundImage: 'url( ' + imageBackground + ' )',\n                              backgroundSize: poster.scale === '1' || poster.scale === 1\n                                   ? 'cover'\n                                   : poster.scale * 20 + 150 + '%',\n                              backgroundPosition: poster.positionX === 0 && poster.positionY === 0\n                                   ? 'center'\n                                   : -poster.positionX + '% ' + poster.positionY + 'px'\n                         }}/>\n                         <Grid.Column className=\"body-text\">\n                              <div className=\"header\">\n                                   <div className=\"logo-holder\">\n                                        <span>Moments Matter</span>\n                                        <img\n                                             src=\"https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/pancan-logo.png\"\n                                             alt=\"\"/>\n                                   </div>\n                              </div>\n                              <Header as={'h2'} className=\"title\" content={poster.title}/>\n                              <p className=\"content\">{poster.message}</p>\n                         </Grid.Column>\n                    </Grid>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImagePosition: (x, y) => dispatch({\n          type: IMAGE_SET_POSITION,\n          payload: {\n               x: x,\n               y: y\n          }\n     })\n});\nexport default connect(mapProps, mapDispatch)(Horizontal);\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {IMAGE_SET_POSITION} from '../../core/actions/poster';\nimport '../../styles/preview/square.scss';\n\n/** Interfaces */\ninterface Props {\n     poster : any;\n     setImagePosition(x : number, y : number);\n}\n\ninterface State {\n     mouseMoving : boolean;\n     element : any;\n}\n\nclass Square extends Component < Props,\nState > {\n     state : State = {\n          mouseMoving: false,\n          element: ''\n     };\n\n     constructor(props : Props) {\n          super(props);\n          this.moving = this\n               .moving\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.state.element = document.getElementById('preview-square')as HTMLElement;\n          this\n               .state\n               .element\n               .addEventListener('mousedown', () => this.state.element.addEventListener('mousemove', this.moving, false));\n          this\n               .state\n               .element\n               .addEventListener('mouseup', () => this.state.element.removeEventListener('mousemove', this.moving, false));\n          this\n               .state\n               .element\n               .addEventListener('touchmove', this.moving);\n     }\n\n     componentWillUnmount() {\n          this\n               .state\n               .element\n               .removeEventListener('mousedown', this.moving, false);\n          this\n               .state\n               .element\n               .removeEventListener('mouseup', this.moving, false);\n\n          this\n               .state\n               .element\n               .removeEventListener('touchmove', this.moving, false);\n     }\n\n     public moving(e) {\n          // set state\n          this.setState({\n               mouseMoving: !this.state.mouseMoving\n          });\n\n          const {setImagePosition} = this.props;\n          if (e.type === 'touchmove') {\n               const touch = e.changedTouches[0];\n               const X : number = touch.clientX - this\n                    .state\n                    .element\n                    .getBoundingClientRect()\n                    .left - this.state.element.offsetWidth / 2;\n               const Y : number = touch.clientY - this\n                    .state\n                    .element\n                    .getBoundingClientRect()\n                    .top - this.state.element.offsetHeight / 2;\n               return setImagePosition(X, Y);\n          }\n          const X : number = e.offsetX - this.state.element.offsetWidth / 2;\n          const Y : number = e.offsetY - this.state.element.offsetHeight / 2;\n          return setImagePosition(X, Y);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          const imageBackground = poster.image;\n          return (\n               <div\n                    id=\"preview-square\"\n                    className=\"preview-square poster-preview-holder image-half\"\n                    style={{\n                    backgroundImage: 'url( ' + imageBackground + ' )',\n                    backgroundSize: poster.scale === '1' || poster.scale === 1\n                         ? 'cover'\n                         : poster.scale * 20 + 150 + '%',\n                    backgroundPosition: poster.positionX === 0 && poster.positionY === 0\n                         ? 'center'\n                         : poster.positionX + 'px ' + poster.positionY + 'px'\n               }}>\n                    <p className=\"message-holder\">{poster.message}</p>\n                    <div className=\"footer\">\n                         <div className=\"logo-holder\">\n                              <span>Moments Matter</span>\n                              <img\n                                   src=\"https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/pancan-logo.png\"\n                                   alt=\"\"/>\n                         </div>\n                    </div>\n               </div>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImagePosition: (x, y) => dispatch({\n          type: IMAGE_SET_POSITION,\n          payload: {\n               x: x,\n               y: y\n          }\n     })\n});\nexport default connect(mapProps, mapDispatch)(Square);\n","import React, {Component} from 'react';\nimport {Container} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport Vertical from './previews/vertical';\nimport Horizontal from './previews/horizontal';\nimport Square from './previews/square';\n\ntype Props = {\n     poster: any;\n}\nclass Preview extends Component < Props > {\n\n     constructor(props : Props) {\n          super(props);\n          this.renderPreview = this\n               .renderPreview\n               .bind(this);\n     }\n\n     public renderPreview() : any {\n          const {poster} = this.props;\n\n          switch (poster.layoutType) {\n               case 1:\n                    return <Square/>;\n               case 2:\n                    return <Horizontal/>;\n               case 3:\n                    return <Vertical/>;\n               default:\n                    return console.log('invalid layout type');\n          }\n     }\n\n     public render() {\n          return (\n               <Container className=\"preview-container\">\n                    <div id=\"final-poster\">\n                         {this.renderPreview()}\n                    </div>\n               </Container>\n          );\n     }\n}\n\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\n\nexport default connect(mapStateToProps, null)(Preview);","import React, {Component} from 'react';\nimport {Header, Grid, Placeholder, Segment} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_LAYOUT} from '../../core/actions/poster';\ntype Props = {\n     setLayout(layout : string);\n     poster: any;\n}\nclass One extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.layoutHandler = this\n               .layoutHandler\n               .bind(this);\n     }\n\n     public layoutHandler(layout : string) {\n          const {setLayout} = this.props;\n          setLayout(layout);\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card paddingTop\">\n                    <Header as='h2' className=\"text-center poster-h2\">Choose your layout</Header>\n                    <Grid centered columns={3}>\n                         <Grid.Column\n                              computer={5}\n                              mobile={10}\n                              tablet={5}\n                              textAlign='center'\n                              className={(poster.type === 'poster message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector '}\n                              onClick={() => this.layoutHandler('poster message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center layout-type-text'>Square&nbsp;<br/>(Short message only)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={7}\n                              mobile={16}\n                              tablet={7}\n                              textAlign='center'\n                              className={(poster.type === 'poster message and image')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('poster message and image')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Header image>\n                                             <Placeholder.Line/>\n                                             <Placeholder.Line/>\n                                        </Placeholder.Header>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center layout-type-text'>Horizontal&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                         <Grid.Column\n                              computer={4}\n                              mobile={8}\n                              tablet={4}\n                              textAlign='center'\n                              className={(poster.type === 'post message only')\n                              ? 'active layout-selector'\n                              : 'layout-selector'}\n                              onClick={() => this.layoutHandler('post message only')}>\n                              <Segment raised>\n                                   <Placeholder>\n                                        <Placeholder.Paragraph>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                             <Placeholder.Line length='short'/>\n                                             <Placeholder.Line length='medium'/>\n                                        </Placeholder.Paragraph>\n                                   </Placeholder>\n                              </Segment>\n                              <p className='center layout-type-text'>Vertical&nbsp;<br/>(Share your story)</p>\n                         </Grid.Column>\n                    </Grid>\n               </div>\n          );\n     }\n}\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setLayout: (type : string) => dispatch({type: SET_LAYOUT, payload: type})\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(One);","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_IMAGE} from '../core/actions/poster';\n\ninterface IProps {\n     setImage(path : any);\n     poster : any;\n}\ninterface IState {\n     width : number;\n     height : number;\n     streaming : boolean;\n     video : any;\n     canvas : any;\n     startbutton : any;\n     ready : boolean;\n     stream : any;\n     isMobile : boolean;\n}\nclass TakePicture extends Component < IProps,\nIState > {\n     state : IState = {\n          width: 400,\n          height: 0,\n          streaming: false,\n          video: null,\n          canvas: null,\n          startbutton: null,\n          ready: false,\n          stream: null,\n          isMobile: false\n     }\n     constructor(props : IProps) {\n          super(props);\n          this.startup = this\n               .startup\n               .bind(this);\n          this.clearPhoto = this\n               .clearPhoto\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.makeBlob = this\n               .makeBlob\n               .bind(this);\n          this.stopStream = this\n               .stopStream\n               .bind(this);\n          this.isMobile = this\n               .isMobile\n               .bind(this);\n     }\n\n     componentDidMount() {\n          this.startup();\n          this.isMobile();\n     }\n\n     public isMobile() {\n          (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i))\n               ? this.setState({isMobile: true})\n               : this.setState({isMobile: false});\n     }\n\n     public async startup() {\n          await this.setState({\n               video: document.getElementById('video-stream'),\n               canvas: document.getElementById('image-canvas'),\n               startbutton: document.getElementById('takepicture')\n          });\n          this\n               .state\n               .video\n               .addEventListener('canplay', (event) => {\n                    if (!this.state.streaming) {\n                         this.state.height = this.state.video.videoHeight / (this.state.video.videoWidth / this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .video\n                              .setAttribute('height', this.state.height);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('width', this.state.width);\n                         this\n                              .state\n                              .canvas\n                              .setAttribute('height', this.state.height);\n                         this.state.streaming = true;\n                         this.forceUpdate();\n                    }\n               }, false);\n     }\n\n     public startStream() {\n          if (!this.state.ready) {\n               const container : any = document.getElementById('camera-stream');\n               container.style.display = 'block';\n               navigator\n                    .mediaDevices\n                    .getUserMedia({video: true, audio: false})\n                    .then((stream) => {\n                         this.state.video.srcObject = stream;\n                         this\n                              .state\n                              .video\n                              .play();\n                         this.setState({ready: true, stream: stream});\n                    })\n                    .catch((error) => console.log('cannot open stream: ', error));\n          } else {\n               const {setImage} = this.props;\n               const context = this\n                    .state\n                    .canvas\n                    .getContext('2d');\n               if (this.state.width && this.state.height) {\n                    this.state.canvas.width = this.state.width;\n                    this.state.canvas.height = this.state.height;\n                    context.drawImage(this.state.video, 0, 0, this.state.width, this.state.height);\n                    const data = this\n                         .state\n                         .canvas\n                         .toDataURL('image/jpeg');\n\n                    setImage(this.makeBlob(data));\n                    this.forceUpdate();\n                    this.stopStream();\n               }\n          }\n     }\n\n     public clearPhoto() {\n          const {setImage} = this.props;\n          setImage(null);\n     }\n\n     public stopStream() {\n          const container : any = document.getElementById('camera-stream');\n          container.style.display = 'none';\n          this\n               .state\n               .stream\n               .getTracks()\n               .forEach((track) => track.stop());\n          this.setState({ready: false, stream: null});\n     }\n\n     public makeBlob(data : any) {\n          let byteString : any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return URL.createObjectURL(new Blob([ia], {type: mimeString}));\n     }\n\n     public render() {\n          return (\n               <div>\n                    <div\n                         className=\"camera\"\n                         id=\"camera-stream\"\n                         style={{\n                         display: 'none'\n                    }}>\n                         <video id=\"video-stream\"/>\n                    </div>\n                    <Button disabled={this.state.isMobile} color=\"green\" onClick={this.startStream}>Take photo</Button>\n                    {(this.state.ready)\n                         ? <span>\n                                   <Button color=\"orange\" onClick={this.clearPhoto}>Clear photo</Button>\n                                   <Button color=\"red\" onClick={this.stopStream}>Cancel</Button>\n                              </span>\n                         : ''}\n\n                    <canvas\n                         id=\"image-canvas\"\n                         style={{\n                         display: 'none'\n                    }}/>\n               </div>\n\n          );\n     }\n}\n\nconst mapProps = (props) => ({poster: props.rootReducer});\nconst mapDispatch = (dispatch) => ({\n     setImage: (path : string) => dispatch({type: SET_IMAGE, path: path})\n});\nexport default connect(mapProps, mapDispatch)(TakePicture);","import React, {Component} from 'react';\nimport {Input, Container, Header, Form, TextArea} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport {SET_IMAGE, SET_LOGO, SET_MESSAGE, POSTER_SCALE, SET_TITLE} from '../core/actions/poster';\nimport TakePicture from './take.picture';\nimport {getOrientation} from '../core/helpers/image';\n\n/** Interfaces */\ntype Props = {\n     setImage(image : any, path : string);\n     setLogo(logo : any, path : string);\n     setMessage(message : string);\n     setSize(scale : number);\n     setTitle(title : string);\n     poster: any;\n};\n\ntype State = {\n     messageType: number;\n     error: {\n          message: string;\n          active: boolean;\n     };\n     zoom: number;\n};\n\nclass GeneralCustom extends Component < Props,\nState > {\n     state : State = {\n          messageType: 1,\n          error: {\n               message: '',\n               active: false\n          },\n          zoom: 1\n     };\n\n     constructor(props : Props) {\n          super(props);\n          this.themeImage = this\n               .themeImage\n               .bind(this);\n          this.selectorHandler = this\n               .selectorHandler\n               .bind(this);\n          this.changeHandler = this\n               .changeHandler\n               .bind(this);\n          this.logoHandler = this\n               .logoHandler\n               .bind(this);\n          this.zoomChange = this\n               .zoomChange\n               .bind(this);\n          this.startStream = this\n               .startStream\n               .bind(this);\n          this.titleChangeHandler = this\n               .titleChangeHandler\n               .bind(this);\n          this.findImageOrientation = this\n               .findImageOrientation\n               .bind(this);\n     }\n\n     public findImageOrientation(orientation, image) {\n          const {setImage} = this.props;\n          setImage(orientation, image);\n     }\n\n     public themeImage(e : any) {\n          const limit = 5 * 1048576; // 10MB\n          const file = e.target.files[0];\n\n          if (file.size > limit) {\n               console.log('Image way to big');\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          getOrientation(file, this.findImageOrientation);\n     }\n\n     public selectorHandler(value : any) {\n          const {setMessage} = this.props;\n          setMessage(value);\n     }\n\n     public titleChangeHandler(e : any) {\n          const {setTitle} = this.props;\n          setTitle(e.target.value);\n     }\n\n     public changeHandler(e : any) {\n          const {setMessage} = this.props;\n          setMessage(e.target.value);\n     }\n\n     public logoHandler(e : any) {\n          const limit = 5 * 1048576; // 10MB\n          const {setLogo} = this.props;\n          const file = e.target.files[0];\n          const path = URL.createObjectURL(file);\n\n          if (file.size > limit) {\n               return this.setState({\n                    error: {\n                         message: 'File is way to big...',\n                         active: true\n                    }\n               });\n          }\n          setLogo(file, path);\n     }\n\n     public zoomChange(e : any, {name, value} : any) {\n          const {setSize} = this.props;\n          this.setState({zoom: value});\n          setSize(value);\n     }\n\n     public startStream() {\n          console.log('will start camera streaming here');\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <Container textAlign=\"center\">\n                    <Header as=\"h2\" className=\"text-center poster-h2\">\n                         Upload your image\n                    </Header>\n                    <Input\n                         icon=\"file\"\n                         iconPosition=\"left\"\n                         placeholder=\"Upload Image\"\n                         accept=\"image/*\"\n                         type=\"file\"\n                         onChange={this.themeImage}/>\n                    <p>10 MB limit. Allowed types: gif png jpg jpeg.</p>\n                    <Header as=\"h2\" className=\"text-center poster-h2 take-picture\">\n                         Take a picture\n                    </Header>\n                    <div className=\"take-picture\">\n                         <TakePicture/>\n                    </div>\n                    <Form.Input\n                         label={`Scale image: `}\n                         min={1}\n                         max={10}\n                         name=\"zoom\"\n                         onChange={this.zoomChange}\n                         type=\"range\"\n                         value={this.state.zoom}\n                         className=\"scale-controller\"/>\n                    <Header as=\"h2\" textAlign=\"center\" className=\"text-center poster-h2\">\n                         Share Your Moment\n                    </Header>\n                    <Form>\n                         <Input\n                              className={poster.layoutType === 1\n                              ? 'hide'\n                              : 'show paddingBottom'}\n                              placeholder=\"Poster title\"\n                              type=\"text\"\n                              onChange={this.titleChangeHandler}\n                              defaultValue={poster.title}\n                              maxLength=\"35\"/>\n                         <TextArea\n                              placeholder=\"Write 'I am and will' message here. eg. 'I am a student and I will spread the word'.\"\n                              maxLength=\"150\"\n                              onChange={this.changeHandler}\n                              defaultValue={poster.message}/>\n                         <p>Maximum 150 characters</p>\n                    </Form>\n               </Container>\n          );\n     }\n}\n\nconst mapProps = (poster : any) => ({poster: poster.rootReducer.poster});\nconst mapDispatch = (dispatch : any) => ({\n     setImage: (image : any, path : string) => dispatch({type: SET_IMAGE, payload: image, path: path}),\n     setLogo: (logo : any, path : string) => dispatch({type: SET_LOGO, payload: logo, path: path}),\n     setMessage: (message : string) => dispatch({type: SET_MESSAGE, payload: message}),\n     setSize: (scale : number) => dispatch({type: POSTER_SCALE, payload: scale}),\n     setTitle: (title : string) => dispatch({type: SET_TITLE, payload: title})\n});\n\nexport default connect(mapProps, mapDispatch)(GeneralCustom);\n","export const getOrientation = (originalFile: File, callback: Function) => {\n     var reader = new FileReader();\n     let canvas = document.createElement('canvas');\n     let ctx: any = canvas.getContext('2d');\n     let image = new Image();\n\n     reader.onload = (event: ProgressEvent) => {\n          if (!event.target) {\n               return;\n          }\n\n          const file = event.target as FileReader;\n          const view = new DataView(file.result as ArrayBuffer);\n\n          image.src = URL.createObjectURL(originalFile);\n          if (view.getUint16(0, false) !== 0xffd8) {\n               return callback(-2, image.src);\n          }\n\n          const length = view.byteLength;\n          let offset = 2;\n\n          while (offset < length) {\n               if (view.getUint16(offset + 2, false) <= 8) {\n                    return callback(-1, image.src);\n               }\n\n               let marker = view.getUint16(offset, false);\n               offset += 2;\n\n               if (marker === 0xffe1) {\n                    if (view.getUint32((offset += 2), false) !== 0x45786966) {\n                         return callback(-1, image.src);\n                    }\n\n                    let little = view.getUint16((offset += 6), false) == 0x4949;\n                    offset += view.getUint32(offset + 4, little);\n                    let tags = view.getUint16(offset, little);\n                    offset += 2;\n                    for (let i = 0; i < tags; i++) {\n                         if (\n                              view.getUint16(offset + i * 12, little) == 0x0112\n                         ) {\n                              const result = view.getUint16(\n                                   offset + i * 12 + 8,\n                                   little\n                              );\n                              image.onload = () => {\n                                   canvas.width = image.width;\n                                   canvas.height = image.height;\n                                   ctx.save();\n                                   ctx.translate(\n                                        image.width / 2,\n                                        image.height / 2\n                                   );\n                                   switch (result) {\n                                        case 1:\n                                             ctx.rotate((360 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        case 8:\n                                             ctx.rotate((270 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        case 3:\n                                             ctx.rotate((180 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        case 6:\n                                             ctx.rotate((90 * Math.PI) / 180);\n                                             ctx.drawImage(\n                                                  image,\n                                                  -(image.width / 2),\n                                                  -(image.height / 2)\n                                             );\n                                             ctx.restore();\n                                             return callback(\n                                                  result,\n                                                  canvas.toDataURL()\n                                             );\n\n                                        default:\n                                             return callback(\n                                                  result,\n                                                  'nothing here'\n                                             );\n                                   }\n                              };\n                              return callback(result);\n                         }\n                    }\n               } else if ((marker & 0xff00) != 0xff00) {\n                    break;\n               } else {\n                    offset += view.getUint16(offset, false);\n               }\n          }\n          return callback(-1, image.src);\n     };\n\n     reader.readAsArrayBuffer(originalFile);\n};\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n// import {Button, Popup, Flag, Header, Grid} from 'semantic-ui-react';\nimport {SET_LANGUAGE} from '../../core/actions/poster';\nimport GeneralCustom from '../poster.all';\n\n// Will be used in the future for other campaign import PosterMessage from\n// '../poster.message'; import PosterImage from '../poster.image'; import\n// PostMessage from '../post.message'; import PostImage from '../post.image';\n\ntype Props = {\n     poster: any;\n     setLanguage(language : string);\n}\n\nclass Two extends Component < Props > {\n     constructor(props : Props) {\n          super(props);\n          this.renderStep = this\n               .renderStep\n               .bind(this);\n          this.langHandler = this\n               .langHandler\n               .bind(this);\n     }\n\n     public langHandler(lan : string) {\n          const {setLanguage} = this.props;\n          setLanguage(lan);\n     }\n\n     public renderStep(type : number) {\n          return <GeneralCustom/>;\n          // This section will be used in the future for other campaigns; switch (type) {\n          //  case 1:           return <PosterMessage/>;      case 2:           return\n          // <PosterImage/>;      case 3:           return <PostMessage/>;      case 4:\n          // return <PostImage/>;      default:           return 'Error ocurred go back';\n          // }\n     }\n\n     public render() {\n          const {poster} = this.props;\n          return (\n               <div className=\"step-card\">\n                    {/* <Popup\n                         trigger={< Button circular icon = \"world\" content = {\n                         \"Language - \" + poster\n                              .language\n                              .toUpperCase()\n                    }\n                    className = \"lang-selector\" />}\n                         flowing\n                         hoverable>\n                         <Grid centered divided columns={3}>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'english')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('english')}>\n                                   <Header as='h4'>English</Header>\n                                   <Flag name='us' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'spanish')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('spanish')}>\n                                   <Header as='h4'>Spanish</Header>\n                                   <Flag name='spain' className=\"flag-selector\"/>\n                              </Grid.Column>\n                              <Grid.Column\n                                   textAlign='center'\n                                   className={(poster.language === 'french')\n                                   ? 'active country-selector'\n                                   : 'country-selector'}\n                                   onClick={() => this.langHandler('french')}>\n                                   <Header as='h4'>French</Header>\n                                   <Flag name='france' className=\"flag-selector\"/>\n                              </Grid.Column>\n                         </Grid>\n                    </Popup> */}\n                    {this.renderStep(poster.layoutType)}\n               </div>\n          );\n     }\n}\n\nconst mapStateTopProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch) => ({\n     setLanguage: (type : string) => dispatch({type: SET_LANGUAGE, payload: type})\n});\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(Two);","export class PopupWindow {\n     private screenLeft : number;\n     private screenTop : number;\n     private screenWidth : number;\n     private screenHeight : number;\n     private zoom : number;\n\n     constructor() {\n          this.screenLeft = window.screenLeft || window.screenX;\n          this.screenTop = window.screenTop || window.screenY;\n          this.screenWidth = window.innerWidth || (document.documentElement.clientWidth)\n               ? document.documentElement.clientWidth\n               : screen.width;\n          this.screenHeight = window.innerHeight || (document.documentElement.clientHeight)\n               ? document.documentElement.clientHeight\n               : screen.height;\n          this.zoom = this.screenWidth / window.screen.availWidth;\n          return this;\n     }\n\n     public getWindow(url : string, title : string, width : number, height : number) : void {\n          const left: number = (this.screenWidth - width) / 2 / this.zoom + this.screenLeft;\n          const top: number = (this.screenHeight - height) / 2 / this.zoom + this.screenTop;\n          const configString: string = 'scrollbars=yes, width=' + width / this.zoom + ', height=' + height / this.zoom + ', top=' + top + ', left=' + left;\n          const newWindow: any = window.open(url, title, configString);\n          if (window.focus) {\n               newWindow.focus();\n          }\n     }\n\n}\n","const apiURL : string = 'https://core.pancan.org/api/poster/email';\n\n/** Api calls */\nexport const uploadImage = (data : any) => (fetch(apiURL, {\n     method: 'post',\n     headers: new Headers({'Content-Type': 'application/x-www-form-urlencoded'}),\n     body: data\n}).then(data => data.json()).then(data => data).catch(error => error));\n","import React, {Component} from 'react';\nimport {Button} from 'semantic-ui-react';\nimport {PopupWindow} from '../core/helpers/popup';\n\n/** interface */\ninterface State {\n     facebook : string;\n     twitter : string;\n     instagram : string;\n}\n\nclass SocialButtons extends Component < {},\nState > {\n\n     state: State = {\n          facebook: 'https://www.facebook.com/sharer/sharer.php?u=https://www.pancan.org/get-involved' +\n                    '/moments-matter/',\n          twitter: 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('#MomentsMatter. Join me & @PanCAN in sharing our stories & raising #pancreaticca' +\n                    'ncer awareness so more patients can have more moments with their loved ones. htt' +\n                    'p://pcan.at/MnM'),\n          instagram: 'https://www.instagram.com/pancan/'\n     };\n\n     constructor(props : any) {\n          super(props);\n          this.socialHandler = this\n               .socialHandler\n               .bind(this);\n     }\n\n     public socialHandler(url : string) {\n          new PopupWindow().getWindow(url, 'Share Poster Creator', 530, 400);\n     }\n\n     public render() {\n          return (\n               <div className=\"social-button-container\">\n                    <Button\n                         circular\n                         color='facebook'\n                         icon='facebook'\n                         onClick={() => this.socialHandler(this.state.facebook)}/>\n                    <Button\n                         circular\n                         color='twitter'\n                         icon='twitter'\n                         onClick={() => this.socialHandler(this.state.twitter)}/>\n                    <Button\n                         circular\n                         color='instagram'\n                         icon='instagram'\n                         onClick={() => this.socialHandler(this.state.instagram)}/>\n               </div>\n          );\n     }\n}\n\nexport default SocialButtons;","import React, {Component} from 'react';\nimport {\n     Icon,\n     Container,\n     Grid,\n     Header,\n     Button,\n     Modal,\n     Form,\n     Input\n} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport html2canvas from 'html2canvas';\nimport {POSTER_CREATE} from '../../core/actions/poster';\nimport {PopupWindow} from '../../core/helpers/popup';\nimport {uploadImage} from '../../core/services/api';\nimport SocialButtons from '../social.buttons';\n\ninterface Props {\n     poster : any;\n     setPoster(data : any);\n}\ninterface IUser {\n     [key : string] : string;\n}\ninterface State {\n     isUploaded : boolean;\n     posterId : number;\n     emailInfo : boolean;\n     user : IUser;\n     error : any;\n     elementIds : any;\n}\n\nclass Three extends Component < Props,\nState > {\n     state : State = {\n          isUploaded: false,\n          posterId: -1,\n          emailInfo: false,\n          user: {\n               fname: '',\n               lname: '',\n               email: ''\n          },\n          error: {\n               error: false,\n               det: ''\n          },\n          elementIds: {\n               1: 'preview-square',\n               2: 'final-horizontal',\n               3: 'final-vertical'\n          }\n     };\n     constructor(props : Props) {\n          super(props);\n          this.controllers = this\n               .controllers\n               .bind(this);\n          this.downloadPosterImage = this\n               .downloadPosterImage\n               .bind(this);\n          this.shareTwitter = this\n               .shareTwitter\n               .bind(this);\n          this.shareFacebook = this\n               .shareFacebook\n               .bind(this);\n          this.dataURItoBlob = this\n               .dataURItoBlob\n               .bind(this);\n          this.base64ToBlob = this\n               .base64ToBlob\n               .bind(this);\n          this.emailModal = this\n               .emailModal\n               .bind(this);\n          this.formChange = this\n               .formChange\n               .bind(this);\n          this.error = this\n               .error\n               .bind(this);\n          this.sendToEmail = this\n               .sendToEmail\n               .bind(this);\n          this.checkErrors = this\n               .checkErrors\n               .bind(this);\n     }\n\n     public downloadPosterImage(type : string) {\n          const {poster} = this.props;\n          const {elementIds} = this.state;\n          const posterElement : any = document.getElementById(elementIds[poster.layoutType]);\n          html2canvas(posterElement).then((canvas : any) => {\n               canvas.toBlob(blob => {\n                    const url = URL.createObjectURL(blob);\n                    const element : any = document.createElement('a')as HTMLElement;\n                    element.href = url;\n                    element.download = 'poster.jpeg';\n                    element.click();\n               }, 'image/jpeg', 1);\n          });\n     }\n\n     public async sendToEmail() {\n          const {poster} = this.props;\n          const {elementIds} = this.state;\n          const posterElement : any = document.getElementById(elementIds[poster.layoutType]);\n          const {isUploaded} = this.state;\n\n          if (!this.checkErrors()) {\n               await html2canvas(posterElement).then(async(canvas : any) => {\n                    const image = canvas.toDataURL('image/jpeg', 1.0);\n                    const data : any = {\n                         key: '5994766c58613900370b6153',\n                         image: image,\n                         lname: this.state.user.lname,\n                         email: this.state.user.email,\n                         fname: this.state.user.fname\n                    };\n                    const searchParams = Object\n                         .keys(data)\n                         .map(key => {\n                              return (encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\n                         })\n                         .join('&');\n\n                    if (!isUploaded) {\n                         const response : any = await uploadImage(searchParams);\n                         this.setState({\n                              isUploaded: true,\n                              posterId: response.id,\n                              error: {\n                                   error: false\n                              },\n                              emailInfo: false\n                         });\n                    }\n               });\n          }\n     }\n\n     public formChange(e : any, {name, value} : any) {\n          const {fname, lname, email} = this.state.user;\n          switch (name) {\n               case 'lname':\n                    this.setState({\n                         user: {\n                              lname: value,\n                              fname: fname,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'fname':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: value,\n                              email: email\n                         }\n                    });\n                    break;\n               case 'email':\n                    this.setState({\n                         user: {\n                              lname: lname,\n                              fname: fname,\n                              email: value\n                         }\n                    });\n                    break;\n               default:\n                    console.log(this.state.user);\n          }\n     }\n\n     public error() {\n          return (\n               <b style={{\n                    color: 'red'\n               }}>\n                    Error! make sure to have vaild form values.\n               </b>\n          );\n     }\n\n     public checkErrors() : boolean {\n          const {lname, fname, email} = this.state.user;\n          if (lname !== '' && fname !== '' && email !== '') {\n               return false;\n          }\n          this.setState({\n               error: {\n                    error: true\n               }\n          });\n          return true;\n     }\n\n     public emailModal() {\n          const {emailInfo, isUploaded} = this.state;\n          return (\n               <Modal\n                    open={emailInfo}\n                    trigger={< Button color = \"purple\" disabled = {\n                    isUploaded\n                         ? true\n                         : false\n               }\n               content = {\n                    isUploaded\n                         ? 'Email sent!'\n                         : 'Send via Email'\n               }\n               onClick = {\n                    () => this.setState(prevState => ({\n                         emailInfo: !prevState.emailInfo\n                    }))\n               } />}\n                    basic\n                    size=\"small\">\n                    <Header icon=\"send\" content=\"Send me my poster\"/>\n                    <Modal.Content>\n                         <strong className=\"over-image\">\n                              Your email information:\n                         </strong>\n                         <Form>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>\n                                        First name:\n                                   </label>\n                                   <Input\n                                        placeholder=\"First Name\"\n                                        name=\"fname\"\n                                        type=\"text\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>\n                                        Last name:\n                                   </label>\n                                   <Input\n                                        placeholder=\"Last Name\"\n                                        name=\"lname\"\n                                        type=\"text\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                              <Form.Field required>\n                                   <label\n                                        style={{\n                                        color: '#ffffff'\n                                   }}>\n                                        Email:\n                                   </label>\n                                   <Input\n                                        name=\"email\"\n                                        placeholder=\"Email address\"\n                                        type=\"email\"\n                                        onChange={this.formChange}/>\n                              </Form.Field>\n                         </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                         <Button\n                              color=\"red\"\n                              inverted\n                              onClick={() => this.setState(prevState => ({\n                              emailInfo: !prevState.emailInfo\n                         }))}>\n                              <Icon name=\"remove\"/>\n                              No\n                         </Button>\n                         <Button color=\"green\" inverted onClick={this.sendToEmail}>\n                              <Icon name=\"mail\"/>\n                              Send\n                         </Button>\n                         {this.state.error.error\n                              ? this.error()\n                              : ''}\n                    </Modal.Actions>\n               </Modal>\n          );\n     }\n\n     public shareTwitter() {\n          const poster : any = document.getElementById('final-poster');\n          const {isUploaded, posterId} = this.state;\n          html2canvas(poster, {scale: 2}).then(async(canvas : any) => {\n               const image = canvas.toDataURL('image/png');\n               const data : any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               };\n               let url : string;\n               if (!isUploaded) {\n                    const response : any = await uploadImage(data);\n                    this.setState({isUploaded: true, posterId: response.id});\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                              'on.org/poster/' + response.id);\n               } else {\n                    url = 'https://twitter.com/intent/tweet/?text=' + encodeURIComponent('PanCAN Poster #demandbetter #advocate at http://www.worldpancreaticcancercoaliti' +\n                              'on.org/poster/' + posterId);\n               }\n\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 400);\n          });\n     }\n\n     public shareFacebook() {\n          const poster : any = document.getElementById('final-poster');\n          const {isUploaded, posterId} = this.state;\n          html2canvas(poster, {scale: 2}).then(async(canvas : any) => {\n               const image = canvas.toDataURL('image/png');\n               let url : string;\n               const data : any = {\n                    key: '5994766c58613900370b6153',\n                    image: image\n               };\n               if (!isUploaded) {\n                    const response : any = await uploadImage(data);\n                    this.setState({isUploaded: true, posterId: response.id});\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + response.id);\n               } else {\n                    url = 'https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent('http://www.worldpancreaticcancercoalition.org/poster/' + posterId);\n               }\n               new PopupWindow().getWindow(url, 'Share Poster', 530, 200);\n          });\n     }\n\n     public dataURItoBlob(data : string) : any {\n          const byteString = atob(data.split(',')[1]);\n          const ab = new ArrayBuffer(byteString.length);\n          const ia = new Uint8Array(ab);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ab], {type: 'image/png'});\n     }\n\n     public base64ToBlob(data : any) {\n          let byteString : any = '';\n          if (data.split(',')[0].indexOf('base64') >= 0) {\n               byteString = atob(data.split(',')[1]);\n          } else {\n               byteString = unescape(data.split(',')[1]);\n          }\n          const mimeString = data\n               .split(',')[0]\n               .split(':')[1]\n               .split(';')[0];\n          const ia = new Uint8Array(byteString.length);\n          for (let i = 0; i < byteString.length; i++) {\n               ia[i] = byteString.charCodeAt(i);\n          }\n          return new Blob([ia], {type: mimeString});\n     }\n     public controllers(type : number) {\n          switch (type) {\n               case 1:\n               case 2:\n               case 3:\n               case 4:\n                    return (\n                         <Grid container columns={1} stackable>\n                              <Grid.Column textAlign=\"center\">\n                                   <Button\n                                        content=\"Download JPG\"\n                                        className=\"gutter-mobile\"\n                                        color=\"purple\"\n                                        onClick={() => this.downloadPosterImage('image')}/>\n                              </Grid.Column>\n                              {/* <Grid.Column textAlign=\"center\">\n                              <Button content='Download PDF' onClick={() => this.downloadPosterImage('pdf')}/>\n                         </Grid.Column> */}\n                              {/* <Grid.Column textAlign=\"center\">\n                              {this.emailModal()}\n                         </Grid.Column> */}\n                         </Grid>\n                    );\n               default:\n                    return <div/>;\n          }\n     }\n     public render() {\n          const {poster} = this.props;\n          const title = '#MomentsMatter'; //(poster.layoutType === 3 || poster.layoutType === 4)\n          //      ? 'Share your poster'      : 'Download image';\n          return (\n               <Container className=\"step paddingTop\">\n                    <Header as=\"h2\" content={title} textAlign=\"center\" className=\"poster-h2\"/>\n                    <p\n                         style={{\n                         textAlign: 'center'\n                    }}\n                         className=\"paddingBottom over-solid leadin-copy\">\n                         Share your Moment with the world by downloading your image and sharing it to\n                         social media with #MomentsMatter and tagging us @PanCAN.\n                    </p>\n\n                    <SocialButtons/>\n                    <br/> {this.controllers(poster.layoutType)}\n               </Container>\n          );\n     }\n}\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setPoster: (data : any) => dispatch({type: POSTER_CREATE, payload: data})\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Three);\n","import React, {Component} from 'react';\nimport {Container, Step, Icon, Button, Image} from 'semantic-ui-react';\nimport One from './steps/one';\nimport Two from './steps/two';\nimport Three from './steps/three';\nimport {connect} from 'react-redux';\nimport {SET_STEP} from '../core/actions/poster';\n\ntype Props = {\n     setStep(step : number);\n     poster: any\n}\ninterface IState {\n     element : any;\n}\nclass Nav extends Component < Props,\nIState > {\n     state : IState = {\n          element: HTMLElement\n     };\n     constructor(props : Props) {\n          super(props);\n          this.stepHandler = this\n               .stepHandler\n               .bind(this);\n          this.stepRender = this\n               .stepRender\n               .bind(this);\n     }\n\n     componentDidMount() {\n          const element = document.getElementById('controller-container-app');\n          this.setState({element});\n     }\n\n     public stepHandler(step : number) {\n          const {setStep} = this.props;\n          setStep(step);\n     }\n\n     public stepRender() : any {\n          const {poster} = this.props;\n          const {step} = poster;\n          this.state.element.scrollTop = 0;\n          switch (step) {\n               case 1:\n                    return <One/>;\n               case 2:\n                    return <Two/>;\n               case 3:\n                    return <Three/>;\n          }\n     }\n\n     public render() {\n          const {poster} = this.props;\n\n          return (\n               <div className=\"controller-container\" id=\"controller-container-app\">\n                    <Container>\n                         <Step.Group fluid unstackable>\n                              <Step\n                                   active={(poster.step === 1)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(1)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-01.png'\n                                        size='mini'/>\n                                   <Step.Content className=\"step-text\">\n                                        <Step.Title>Start</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 2)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(2)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-02.png'\n                                        size='mini'/>\n                                   <Step.Content className=\"step-text\">\n                                        <Step.Title>Customize</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                              <Step\n                                   active={(poster.step === 3)\n                                   ? true\n                                   : false}\n                                   onClick={() => this.stepHandler(3)}\n                                   className=\"step-button\">\n                                   <Image\n                                        src='https://0b9aafecab229788ebf1-90f622f94aeb4d165ef7469777c28f31.ssl.cf2.rackcdn.com/poster-creator/NavigationIcons-03.png'\n                                        size='mini'/>\n                                   <Step.Content className=\"step-text\">\n                                        <Step.Title>Save & Share</Step.Title>\n                                   </Step.Content>\n                              </Step>\n                         </Step.Group>\n                         {this.stepRender()}\n                         <Button\n                              onClick={() => this.stepHandler(poster.step - 1)}\n                              className={(poster.step > 1)\n                              ? 'back-button show'\n                              : ' hide'}>\n                              <Icon name='arrow left'/>&nbsp;Back\n                         </Button>\n                         <Button\n                              className={(poster.step < 3)\n                              ? 'next-button show'\n                              : ' hide'}\n                              onClick={() => this.stepHandler(poster.step + 1)}>\n                              Next&nbsp;<Icon name='arrow right'/>\n                         </Button>\n                    </Container>\n               </div>\n          );\n     }\n}\n\nconst mapStateToProps = (state : any) => ({poster: state.rootReducer.poster});\nconst mapDispatchToProps = (dispatch : any) => ({\n     setStep: (step : number): void => dispatch({type: SET_STEP, payload: step})\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);","import App from './app';\nexport default(App);","import React, {Component} from 'react';\nimport Preview from './preview';\nimport Nav from './navigation';\nimport {Grid} from 'semantic-ui-react';\n\nexport class App extends Component {\n     render() {\n          return (\n               <Grid container columns='equal' divided stackable>\n                    <Grid.Column mobile={16} tablet={16} computer={16} largeScreen={10}>\n                         <Nav/>\n                    </Grid.Column>\n                    <Grid.Column\n                         mobile={16}\n                         tablet={16}\n                         computer={16}\n                         largeScreen={6}\n                         className=\"purple-gradient-bck\"\n                         style={{\n                         paddingTop: 25,\n                         display: 'flex',\n                         alignItems: 'center',\n                         minHeight: '100%'\n                    }}>\n                         <Preview/>\n                    </Grid.Column>\n               </Grid>\n          );\n     }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/** Imports */\nimport {combineReducers} from 'redux';\nimport {IStateStore} from '../models/state';\nimport {posterReducer} from './poster';\n\nexport const rootReducer = combineReducers < IStateStore > ({poster: posterReducer});\n","/** Imports */\nimport {\n     LAYOUT_SET,\n     STEP_SET,\n     LANGUAGE_SET,\n     THEME_SET,\n     MESSAGE_SET,\n     LOGO_SET,\n     IMAGE_SET,\n     POSTER_CREATE_SUCCESS,\n     SCALE_SET,\n     TITLE_SET,\n     IMAGE_POSITION_SET\n} from '../actions/poster';\nimport {IPoster} from '../models/poster';\n\nconst initPoster = () : IPoster => ({\n     step: 1,\n     type: 'poster message only',\n     layoutType: 1,\n     language: 'english',\n     message: '',\n     createdDate: Date(),\n     shareNetwork: '',\n     theme: 'pancan-purple',\n     image: '',\n     logo: 'https://www.pancan.org//wp-content/uploads/2018/05/pancan-logo.png',\n     posterImage: {},\n     scale: 1,\n     title: '',\n     positionX: 0,\n     positionY: 0\n});\n\nexport const posterReducer = (state = initPoster(), action : any) => {\n     switch (action.type) {\n          case LAYOUT_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case STEP_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case LANGUAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case THEME_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case MESSAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case LOGO_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case IMAGE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case POSTER_CREATE_SUCCESS:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case SCALE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case TITLE_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          case IMAGE_POSITION_SET:\n               return {\n                    ...state,\n                    ...action.payload\n               }\n          default:\n               return state;\n     }\n}","/** Import dependencies */\nimport {all, put, takeEvery} from 'redux-saga/effects';\nimport {\n     SET_LAYOUT,\n     SET_LANGUAGE,\n     SET_STEP,\n     SET_THEME,\n     SET_MESSAGE,\n     SET_IMAGE,\n     SET_LOGO,\n     POSTER_CREATE,\n     POSTER_SCALE,\n     SET_TITLE,\n     IMAGE_SET_POSITION,\n     setLayout,\n     setLanguage,\n     setStep,\n     setTheme,\n     setMessage,\n     setImage,\n     setLogo,\n     setPoster,\n     setSize,\n     setTitle,\n     // setImagePosition\n\n} from '../actions/poster';\n\n/** Watcher */\nfunction * eventWatcher() {\n     yield takeEvery(SET_LAYOUT, layout);\n     yield takeEvery(SET_LANGUAGE, language);\n     yield takeEvery(SET_STEP, stepper);\n     yield takeEvery(SET_THEME, theme);\n     yield takeEvery(SET_MESSAGE, message);\n     yield takeEvery(SET_IMAGE, image);\n     yield takeEvery(SET_LOGO, logo);\n     yield takeEvery(POSTER_CREATE, poster);\n     yield takeEvery(POSTER_SCALE, scalePoster);\n     yield takeEvery(SET_TITLE, titleSet);\n     yield takeEvery(IMAGE_SET_POSITION, imagePosition);\n}\n\n/** set layout */\nfunction * layout(type : any) {\n     let layout : any;\n     switch (type.payload) {\n          case 'poster message only':\n               layout = {\n                    type: 'poster message only',\n                    layoutType: 1\n               }\n               break;\n          case 'poster message and image':\n               layout = {\n                    type: 'poster message and image',\n                    layoutType: 2\n               }\n               break;\n          case 'post message only':\n               layout = {\n                    type: 'post message only',\n                    layoutType: 3\n               }\n               break;\n          case 'post image':\n               layout = {\n                    type: 'post image',\n                    layoutType: 4\n               }\n               break;\n     }\n     yield put(setLayout(layout));\n}\n\n/** set language */\nfunction * language(type : any) {\n     yield put(setLanguage(type.payload));\n}\n\n/** update step */\nfunction * stepper(step : any) {\n     yield put(setStep(step.payload));\n}\n\n/** set theme */\nfunction * theme(theme : any) {\n     yield put(setTheme(theme.payload));\n}\n\n/** set message */\nfunction * message(message : any) {\n     yield put(setMessage(message.payload));\n}\n\n/** set image */\nfunction * image(image : any) {\n     yield put(setImage(image.path));\n}\n\n/** set logo */\nfunction * logo(logo : any) {\n     yield put(setLogo(logo.path));\n}\n\n/** poster creation  */\nfunction * poster(poster : any) {\n     yield put(setPoster(poster.payload));\n}\n\n/** poster scale */\nfunction * scalePoster(scale : any) {\n     yield put(setSize(scale.payload));\n}\n\n/** poster title */\nfunction * titleSet(title : any) {\n     yield put(setTitle(title.payload));\n}\n\n/** image position */\nfunction * imagePosition(data : any) {\n     yield console.log('position will be updated later one day');\n     // yield put(setImagePosition(data.payload.x, data.payload.y));\n}\n\n/** Root saga */\nexport function * rootSaga() {\n     const sagas = [eventWatcher()];\n     yield all(sagas);\n}","import {composeWithDevTools} from 'redux-devtools-extension';\nimport {applyMiddleware, createStore, Store, combineReducers} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {rootReducer} from '../reducers/main';\nimport {rootSaga} from '../sagas/main';\n\nconst composeEnhancers = composeWithDevTools({});\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nconst enhancer = composeEnhancers(applyMiddleware(...middlewares));\nconst combine = combineReducers({rootReducer});\n\nexport const store : Store < any > = createStore(combine, enhancer);\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppContainer from './components/app.container';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {store} from './core/stores/main';\nimport './styles/main.scss';\n\nReactDOM.render(\n     <Provider store={store}>\n     <AppContainer/>\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. Learn\n// more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}